[{"text":"Does if work if I've got subtrees under that 19?","width":372},{"text":"Yeah, everything's still fine because if it exists in the right subtree of the 17, I know that everything there must be larger than 17 so I can freely move that subtree up.","width":1024},{"text":"It's tempting to think that I'm moving just a single node up but I'm moving an entire subtree.","width":384},{"text":"That could have arbitrarily have many things below it. This could be some huge, giant tree.","width":384},{"text":"and so could this.","width":344},{"text":"What was important was the status of the node that I wanted to remove. So the first case was simple:","width":512},{"text":"this node did not have any children so there's nothing really to worry about, I can just get rid of it.","width":192},{"text":"in this second case,","width":128},{"text":"I have one child.","width":256},{"text":"So I need to do something carefully to make sure that the appropriate","width":359},{"text":"child becomes the","width":192},{"text":"root of the new subtree there.","width":128},{"text":"So, let's try and do a removal of 72 now to see our final case.","width":448},{"text":"So if we remove 72, okay, fine. We go right, okay found it.","width":512},{"text":"What's different about this case?","width":320},{"text":"It's got 2 children","width":192},{"text":"So, I can't just take the 54 and make that be the new root because then","width":448},{"text":"what happens to the 76?","width":192},{"text":"So I can't just do the same thing I did before I have to be a little bit careful","width":505},{"text":"So what could I do, there's 2 different things I could do here.","width":192},{"text":"We're gonna end up picking one of them but both of them are equally valid","width":320},{"text":"So what could I actually do here","width":128},{"text":"Swap the 67 with the 72","width":332},{"text":"How do we know that the 67 is the right node for that?","width":215},{"text":"There' s something special about the 67, it's the right node but why is that node special","width":384},{"text":"We know that it's bigger than 54 because it's the right of 54 so it can go ahead and become it's root if the 54 is to the left.","width":768},{"text":"Now we know that it was smaller than the 72 so it's going to be fine being having whatever 72 happened to have to it's right if it were the root","width":768},{"text":"So this special node here","width":192},{"text":"is called the in-order predecessor","width":384},{"text":"because it precedes","width":704},{"text":"the node 72 in an in order traversal","width":320},{"text":"if you think about the","width":64},{"text":"the order the values would be printed out","width":256},{"text":"it would be 54 67 72 right","width":192},{"text":"so the 67 appears right before the 72 so it's it's in order predecessor","width":384},{"text":"this tree is sort of simple in the general case the in order predecessor is going to be the largest node in the left subtree","width":448},{"text":"where is the largest node in the left subtree located?","width":192},{"text":"all the way to the right.","width":128},{"text":"It's the rightmost node in the left subtree","width":192},{"text":"These two statements are equivalent","width":192},{"text":"so the in order predecessorÂ of any subroot is going to be the largest node or ie the rightmost node in the left subtree","width":591},{"text":"so I go left once and I go right as far as I can until I find the in order predecessor","width":384},{"text":"and then if I do that, I can go ahead and swap with this ","width":256},{"text":"so I can say that becomes the 67 that becomes the 72","width":192},{"text":"probably I'm not moving the data there I'm moving the nodes themselves","width":118},{"text":"if you don't need to move the data, don;t","width":253},{"text":"so I swap those guys and then I can just get rid of the 72 because now it's a node-child remove.","width":384},{"text":"that's simple, we just set that pointer to null","width":451},{"text":"there is another option that I have here","width":256},{"text":"the 76 is equally valid","width":320},{"text":"if I move the 76 up,","width":320},{"text":"to where the 72 is","width":64},{"text":"and then delete the 72,","width":128},{"text":"76 is now the root where it's left child is 54, 67","width":320},{"text":"that's fine because everything that was smaller than 72 is still going to be smaller than 76","width":384},{"text":"because 76 exists to the right of 72, anything 72 is greater, anything in the right subtree of 72 is also going to be greater so we can move that up safely","width":448},{"text":"this tree again is a little bit simple but this node in particular is going to be called the in order successor","width":960},{"text":"because again if you print this subtree out using an in order traversal,","width":275},{"text":"it's going to be the thing that's printed immediately after the 72","width":244},{"text":"so in this case it's the right child of 72","width":128},{"text":"in general what would it be","width":128},{"text":"If I've got some big, arbitrary - actually let's do it here","width":512},{"text":"let's look at 50","width":64},{"text":"what's the in order predecessor of the 50 if I go back to this","width":512},{"text":"It's the rightmost node in the left subtree","width":384},{"text":"so If I go, okay, left subtree, go right until I can't anymore","width":320},{"text":"so the in order predecessor of the 50 is the 23 and you can see that it's the largest node in the left subtree","width":448},{"text":"what's the in order successor of 50?","width":192},{"text":"So, it's going to be sort of the opposite of what in order predecessor was","width":512},{"text":"so it's going to be the leftmost node in the right subtree","width":192},{"text":"So I'm going to go right and then left until I can't go left anymore","width":256},{"text":"so In this case it's going to be the 54","width":128},{"text":"and you can see that that's the smallest node in the right subtree","width":256},{"text":"so If I had another node here, I don't know, 51.","width":320},{"text":"If I had actually done my insertion, it's a horrible 51","width":525},{"text":"I had that, the in order successor of the 51 is going to be the 51 ","width":329},{"text":"because it's the leftmost node in the right subtree","width":256},{"text":"so I go right, left, left and here it is","width":192},{"text":"so the in order predecessor is the rightmost node in the left subtree","width":640},{"text":"the in order successor is the leftmost node in the right subtree","width":320},{"text":"either one of these is a perfectly valid choice for doing this two child remove","width":448},{"text":"we're going to arbitrarily pick the in order predecessor","width":192},{"text":"so we're going to use this guy","width":128},{"text":"so, our three cases,","width":448},{"text":"for remove node are going to be if we have no children","width":512},{"text":"so no child remove,","width":256},{"text":"we have one child,","width":124}]