[{"text":"one important thing we have to do to this particular value if we want to know the port number","width":608.1818182468414},{"text":"okay let's go back to the beginning of the lecture dodododo","width":243.18181824684143},{"text":"hello everybody welcome to Friday and don't forget what do you think htons means?","width":467.18181824684143},{"text":"network to host","width":123.18181824684143},{"text":"means?","width":43.18181824684143},{"text":"remember those little functions?","width":166.18181824684143},{"text":"yeah these C structures are the C structures to do with hey the bytes that we're trying to send to the network card","width":468.18181824684143},{"text":"the port number that is represented inside this struct is not really an integer like we like to think of it like an integer that's on our CPU","width":675.1818182468414},{"text":"so if we actually want the value of this entry, we've got to convert it","width":384.18181824684143},{"text":"so don't forget to call...","width":321.18181824684143},{"text":"network to host short ntohs","width":360.18181824684143},{"text":"and that will give us back an integer value that is actually the integer of the port","width":395.18181824684143},{"text":"so next time you hate your lab partner, just walk over and delete that code and watch them try to connect to the wrong port for the rest of the discussion section","width":650.1818182468414},{"text":"right so that's a little gotcha there, no one will tell you that you've forgotten to convert your integer to the right value","width":354.18181824684143},{"text":"other than the fact that you'll be trying to connect to the incorrect port","width":320.18181824684143},{"text":"the other thing you might want to do is find out who is connecting to your server","width":225.18181824684143},{"text":"here's how we can do that, remember this accept call, the thing that blocks waiting for a client to connect","width":493.18181824684143},{"text":"remember how it gives us back a new file descriptor?","width":281.18181824684143},{"text":"well we can now pass in a pointer to a struct","width":398.18181824684143},{"text":"very similar code here","width":113.18181824684143},{"text":"hey I've got this C structure, please fill it in and if you do that, it will tell you information about the remote client","width":541.1818182468414},{"text":"it won't tell you their login name but we can find out things like their IP address","width":324.18181824684143},{"text":"and their port number","width":77.18181824684143},{"text":"so for example, if you didn't like the remote client, why don't you send a thousand packets back to them and try and shut down their machine and send them a denial of service","width":525.1818182468414},{"text":"no don't do that for real unless you happen to be the US government","width":325.18181824684143},{"text":"okay so we've got that information and we now want to print something out","width":284.18181824684143},{"text":"here's how we can do it","width":87.18181824684143},{"text":"you can say okay turn this number to an ASCII value","width":364.18181824684143},{"text":"and that will turn it into an IP4 address like 127.0.0.1 we can see that","width":463.18181824684143},{"text":"and also with the port number, oh look here we go again, don't forget to convert that struct entry into a real number","width":478.18181824684143},{"text":"and then we'll print it out","width":74.18181824684143},{"text":"okay so let's see that as a demo","width":461.18181824684143},{"text":"okie dokie","width":166.18181824684143},{"text":"so I'll go to server2 let's see if this works okay right","width":683.1818182468414},{"text":"right so I've got my code now, it just picks an arbitrary port number that is available","width":530.1818182468414},{"text":"and let me try connecting to that","width":266.18181824684143},{"text":"well actually why don't you see if you can connect to that","width":177.18181824684143},{"text":"if anyone's got their laptop open you can telnet to 172.17.248.187","width":478.18181824684143},{"text":"and see if someone connects to that port number","width":473.18181824684143},{"text":"okay fantastic right","width":215.18181824684143},{"text":"and I got your address so now I can telnet back to you for example","width":537.1818182468414},{"text":"right let's see if you're running anything on port 22","width":277.18181824684143},{"text":"no you're not, okay so I can't try and hack into your machine today","width":289.18181824684143},{"text":"alright so that's in what you need for the next MP","width":252.18181824684143},{"text":"and to make your next multibillion dollar startup company","width":203.18181824684143},{"text":"of course this stuff underpins webservers, it underpins a little company called youtube, you might have heard of it, it started by an undergraduate here","width":481.18181824684143},{"text":"it started, well, what are we in siebel center","width":237.18181824684143},{"text":"networking, this is what it's all about, being able to connect multiple machines together","width":266.18181824684143},{"text":"and we've seen the basic socket calls that do all of this","width":537.1818182468414},{"text":"so for the remaining part of the lecture, let's say goodbye to networking and talk about a different systems programming topic","width":564.1818182468414},{"text":"are you ready?","width":79.18181824684143},{"text":"right, page 2!","width":241.18181824684143},{"text":"okay so today a couple of quick comments","width":233.18181824684143},{"text":"yes we have a quiz on monday","width":151.18181824684143},{"text":"it's going to be topics that we haven't talked about for a while","width":513.1818182468414},{"text":"remember virtual memory?","width":166.18181824684143},{"text":"do you remember page tables?","width":114.18181824684143},{"text":"translation look aside buffer? no? okay well don't worry now will be a good time to learn","width":334.18181824684143},{"text":"I will send a practice quiz in the near future","width":393.18181824684143},{"text":"remember pipes?","width":131.18181824684143},{"text":"do you remember how to use fseek, ftell, fpause? and finally we got the dining philosophers concurrent problem and also the reader writer concurrency problem","width":690.1818182468414},{"text":"so they'll be in it too okay so expect that quiz on Monday in lecture","width":485.18181824684143},{"text":"any questions?","width":819.1818182468414},{"text":"alright then so let's talk about a new topic","width":810.1818182468414},{"text":"scheduling! you already know as a student a lot about scheduling","width":479.18181824684143},{"text":"probably the scheduling algorithm that you're most familiar with is called earliest deadline first","width":545.1818182468414},{"text":"yes?","width":120.18181824684143},{"text":"right? my chemistry home is due and its due in 10 minutes oh no!","width":279.18181824684143},{"text":"okay so this is a problem of just how efficient can we be?","width":428.18181824684143},{"text":"can we use our CPU resources and other system resources to get as much work done as possible?","width":700.1818182468414},{"text":"well it turns out of course that earliest deadline first isn't actually the most efficient algorithm","width":374.18181824684143},{"text":"because we might spend a lot of time flipping from one piece of work to another piece of work","width":390.18181824684143},{"text":"and so we actually have addition latency involved with these context switches","width":493.18181824684143},{"text":"and with scheduling all of this work","width":183.18181824684143},{"text":"so for example, if you find yourself constantly updating your calendar to say oh I'm going to do this work here and this work here","width":337.18181824684143},{"text":"you've chosen an inefficient scheduling algorithm","width":287.18181824684143}]