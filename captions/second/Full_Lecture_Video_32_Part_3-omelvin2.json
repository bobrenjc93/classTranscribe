[{"text":"right so we talked about creating signals and sending them","width":656.1818182468414},{"text":"let's actually work with them now","width":248.18181824684143},{"text":"I mentioned signals at the beginning of this class, I mean at the very beginning of the semester","width":294.18181824684143},{"text":"here's the bad news","width":105.18181824684143},{"text":"signal should not be used for multithreaded programs","width":535.1818182468414},{"text":"and in fact if you read the linux documentation it would typically say signal should not be used","width":338.18181824684143},{"text":"don't use signal!","width":82.18181824684143},{"text":"why not?","width":97.18181824684143},{"text":"well a) it's not really supported in multithreaded processes but also b) it's definition was inprecise","width":427.18181824684143},{"text":"so the way that signals are delivered on different operating systems","width":423.18181824684143},{"text":"is ambiguous","width":128.18181824684143},{"text":"so fine you managed to get something working on linux and that's all you care about use signal, but the better option is to use sigaction","width":558.1818182468414},{"text":"where we have a lot more control over what happens when we generate signals","width":614.1818182468414},{"text":"now in addition to installing a signal handler with sigaction instead of signal","width":388.18181824684143},{"text":"there's two other ways of dealing with signals, one is to create a file descriptor","width":453.18181824684143},{"text":"like a file, that we can read from a stream and what we read from is bytes that tell us about what signals have happened","width":501.18181824684143},{"text":"I'm not going to talk about it inside 241 just other than the fact that hey you should know about this and it's a pretty good way of working with signals","width":592.1818182468414},{"text":"so you could open one of these inside your own specialized thread and start pulling signals from that file descriptor","width":571.1818182468414},{"text":"and interpreting those bytes","width":153.18181824684143},{"text":"another way is to use sigwait","width":288.18181824684143},{"text":"where sigwait blocks until a signal happens and then it gives you details about which signal occurred and we'll have a look at that today","width":731.1818182468414},{"text":"in fact, let's take a break from a moment because I realize this is a lot of factual stuff and let you know about this","width":966.1818182468414},{"text":"so I've got fifty questions for you","width":259.18181824684143},{"text":"and this is going to be worth four percent of your grade","width":368.18181824684143},{"text":"and it's purpose it to help prepare you for the final exam","width":403.18181824684143},{"text":"so here's the idea is it's a little homework","width":257.18181824684143},{"text":"feel free to work in pairs, what i'd like you to do is actually try and research and try to understand the answers","width":330.18181824684143},{"text":"because we're not going to grade this purely on correctness","width":177.18181824684143},{"text":"we more care about the fact that you took the time into learning these answers because many of these questions come up in real interviews as well","width":576.1818182468414},{"text":"so I've got fifty questions for you, actually the fifty first question is optional","width":414.18181824684143},{"text":"it's this, it's draw an imaginary picture of you battling your most evil or tricky CS241 CS programming bug","width":504.18181824684143},{"text":"so looking forward to seeing dinosaurs or whatever","width":280.18181824684143},{"text":"however else you imagine working on that so can you give me a hand handing these out?","width":577.1818182468414},{"text":"here we go","width":90.18181824684143},{"text":"if you could hand some of these out for me that would be fantastic","width":423.18181824684143},{"text":"you will find that some of these are merely code writing exercises","width":284.18181824684143},{"text":"I encourage you actually writing out the code by hand because that's what you're going to do in the final exam","width":681.1818182468414},{"text":"some of these are based on information inside the wikibook","width":386.18181824684143},{"text":"and some of these will require a quick google search to find the answer","width":249.18181824684143},{"text":"maybe we haven't talked about it directly inside lecture yet","width":590.1818182468414},{"text":"feel free to write your answers in note form, like i said...","width":294.18181824684143},{"text":"this is about doing exam prep and getting points for it as well okay?","width":336.18181824684143},{"text":"so the purpose is to help you review the CS241 material","width":976.1818182468414},{"text":"yes I'll make additional copy","width":251.18181824684143},{"text":"right let's go to aux pc","width":383.18181824684143},{"text":"[silence]","width":2023.1818182468414},{"text":"okay so now I've got the code version of the demo that we did at the beginning of lecture","width":615.1818182468414},{"text":"we're going to set up our proc mask, our process mask","width":610.1818182468414},{"text":"so that a particular signal can't be sent to our process, can't be delivered to our process","width":1010.1818182468414},{"text":"right so what's the plan here?","width":174.18181824684143},{"text":"well, a long long long time ago, signal sets just used to be an integer","width":523.1818182468414},{"text":"however, there was a concern that the number of signals might exceed the number of bits inside the integer on any one platform","width":405.18181824684143},{"text":"so to make a more cross platformed solution we have this type called a sigset_t","width":390.18181824684143},{"text":"and then there are functions either set all bits, clear all bits, set one bit, etc etc etc","width":684.1818182468414},{"text":"we're looking at an example then when we are going to set all the bits inside this little bit mask","width":665.1818182468414},{"text":"and then we're going to use that","width":346.18181824684143},{"text":"and as you can see this sigprocmac actually allows us to discover the old signal proc, the old mask again","width":456.18181824684143},{"text":"so that later on in my code, I can restore the original signal mask","width":463.18181824684143},{"text":"so it's typical in well engineered programs then to at the very beginning of the process raise all the guards, raise the whole mask up so that...","width":699.1818182468414},{"text":"so that no signals get delivered early on, not until we're ready for them","width":353.18181824684143},{"text":"until we're ready to open shop","width":253.18181824684143},{"text":"right so we're calling sigprocmask we're saying okay I want to set the mask","width":479.18181824684143},{"text":"to my new mask so that's hey stop everything....","width":283.18181824684143},{"text":"and then we raise SIGINT in other words we're pressing control C on ourselves we're trying to interrupt this process","width":606.1818182468414},{"text":"now as you and I know, because we set the procmask, that means that that signal is...","width":423.18181824684143},{"text":"generated but it's not delivered, it's in a pending state","width":318.18181824684143}]