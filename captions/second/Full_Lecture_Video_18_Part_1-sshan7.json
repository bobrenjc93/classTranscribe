[{"text":"Okay, so if we got the frame number","width":290},{"text":"how do i now combine that with the offset","width":331},{"text":"to find the actual piece of RAM, the actual RAM location","width":258},{"text":"could you write down an expression that takes the frame number and somehow combines it with the offset to give you the actual address in memory that you should use","width":821},{"text":"you're not simply gonna add them together","width":344},{"text":"alright, i'm hearing some good things down here, but...","width":199},{"text":"lets see","width":150},{"text":"what do we got up here","width":113},{"text":"any ideas","width":865},{"text":"somebody shout out something","width":72},{"text":"even if it's wrong, it's okay!","width":122},{"text":"alright what do we got...","width":103},{"text":"gimme an idea","width":107},{"text":"Adam! Okay. thanks for playing... guess again!","width":169},{"text":"right. Our problem is that our page number just goes up in ones. err Sorry our frame number goes up in ones","width":384},{"text":"zero one two three four five.","width":65},{"text":"we dont want that","width":61},{"text":"we want our addresses as you can see. they go up by 4096 bytes","width":341},{"text":"so we need to multiply that by 4096 bytes. Yes you got the correct answer thank you [something]","width":319},{"text":"right, so, I heard you talking about it earlier","width":171},{"text":"right so, we wanted to take this and somehow multiply by 4096","width":362},{"text":"so i could write that that the physical address is gonna be then the frame number, Fnum multiplied by 4096","width":1123},{"text":"plus the offset","width":302},{"text":"but i dont want in hardware to multiply by 4096. do you realize how much silicon that would take???","width":440},{"text":"NO i dont want to do multiplication. What would be a better thing that multiplication ","width":316},{"text":"Yes!","width":44},{"text":"Just a step to the right","width":159},{"text":"if you haven't seen the rocky horror picture show, I encourage you to do so. Right so we want to step to the left","width":451},{"text":"we're going to shift left...right?","width":216},{"text":"and we need to go up by how many?","width":285},{"text":"is it twelve? yeah we need to multiply by 2 to the twelve. so we'll shift it left by 12","width":351},{"text":"how do you shift left by 12 in hardware?","width":255},{"text":"easy you just move the wires off by 1. you just move the wires up","width":313},{"text":"so by shifting in hardware is trivial, you just relabel what the electrical wires actually mean","width":481},{"text":"okay so got ourselves a physical address. fantastic! easy! that's our page table!","width":334},{"text":"so life back in 32 bit world is easy, we calculated how many, how big, our table was. it doesnt seem to big, we just have a million entries.","width":696},{"text":"so, uh okay, so now we can work out this kind of typical exam question.","width":416},{"text":"right, 32 bit system. in other words, on a 32 bit system, each entry is gonna be 4 bytes. ","width":395},{"text":"if each page table is 4 kilobytes. okay so that tells me","width":417},{"text":"that","width":127},{"text":"the offset then is gonna be, two to the, this is the size of the page table it's two to the twelth","width":473},{"text":"so this means","width":129},{"text":"that that my offset is gonna be 12 bits","width":424},{"text":"so that means Ive got 32-12 bits remaining","width":1104},{"text":"so number of entries is 2 to the 20. or about a million","width":794},{"text":"okay, so we worked out a number of entries. how much space is it actually gonna require to store this entire page table for this process","width":907},{"text":"well each entry, has to store a number, the physical frame, and I'm gonna say we'll use 4 bytes for that","width":594},{"text":"you could squeeze it into a little bit less, but...","width":276},{"text":"we could squeeze it in into kind of three bytes or so, but let's not do that. lets keep things simple.","width":332},{"text":"each entry is 4 bytes... why did i need 4 bytes? because I'm taking back numbers which are 4 bytes long","width":343},{"text":"so ive got two to the twenty times four bytes","width":338},{"text":"is what?","width":243},{"text":"4 megabytes!","width":134},{"text":"so the overhead of using virtual memory here is 4 megabytes!","width":543},{"text":"and we better store this table in some well known place in physical memory","width":341},{"text":"alright? we can't store this table somewhere in virtual memory address otherwise we'd have to use the table to figure out where it is stored in real memory","width":725},{"text":"so the cpu has another register that says: okay if you want to actually turn a virtual address into a physical address","width":500},{"text":"for this particularly process... there's somewhere in memory where i put aside 4 megabytes to store this table","width":1181},{"text":"okay, so, a little challenge for you here","width":502},{"text":"let's say Ive got a program that's gonna read a byte at this virtual memory address","width":694},{"text":"how we many memory reads  are required?","width":1745},{"text":"so if I didnt have a virtual memory, I would just need one memory read. I would just read the byte location 512","width":510},{"text":"yeah, I would just read the byte hexadecimal value 200","width":210},{"text":"but we now have virtual memory, so how many memory reads are required","width":474},{"text":"two! YES!","width":151},{"text":"we need to actually go back to main memory and say \"okay I'm tying to read this particular address\"","width":377},{"text":"so, I need to turn this into a page number and offset and once ive got the page number, i'll go back to my table, lookup table, which is stored in real memory in order to pull out the actual physical frame","width":954},{"text":"and so this might be pointing anywhere. okay its actually in here","width":432},{"text":"so it took me two memory reads, i had to read the 32 bits in here, and then finally, the byte that i cared about","width":711},{"text":"what have i just done to my machine?!","width":201},{"text":"I've just through sheer brilliance managed to make it twice as slow! I've halved its speed!!","width":568},{"text":"remember, memory is really slow! compared to the CPU, you could often do ten to a hundred, if not more instructions for the time it takes to go to main memory","width":776},{"text":"remember? HI MEMORY MEM READ? \"HELLO","width":250},{"text":"youre gonna do that twice now. for every single time youre gonna read or write","width":320}]