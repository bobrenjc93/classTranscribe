[{"text":"OK. So width int will set the width of the rectangle. OK. So this is taking a parameter, a int, to actually set the width. What should I return?","width":832},{"text":"Nothing. Void, right? So void, width, int, w maybe.","width":666},{"text":"Should this function be const?","width":211},{"text":"No. Why not?","width":128},{"text":"Right. It's setting the width. It can't be const. It's modifying stuff. Right? So I cannot say const there. ","width":320},{"text":"If I did, I wouldn't be able to write the width setting method properly cause it would complain to me that I'm trying to modify it.","width":384},{"text":"Anything interesting about the height function?","width":256},{"text":"Other than the name change?","width":210},{"text":"No. Same thing. So I'm just gonna skip that. ","width":141},{"text":"OK. What about...let's do this one. ","width":192},{"text":"Height, taking no argument, which returns the height of the rectangle.","width":320},{"text":"OK? So what is the return value?","width":64},{"text":"int","width":128},{"text":"height","width":128},{"text":"taking no argument, should be const","width":280},{"text":"Yes.","width":64},{"text":"Right? Cause it should just asking for the height of the rectangle shouldn't modify.","width":373},{"text":"Is that make sense?","width":384},{"text":"So this is how I would declare the rectangle. ","width":320},{"text":"And this is all gonna go into rectangle.h. And remember, these inclusion guards are important. ","width":448},{"text":"So make sure you have these. ","width":128},{"text":"So that's to help you, again, from accidently including it twice and have it double declaration of this class.","width":704},{"text":"So we've declared the class, now we are gonna write code that goes in rectangle.cpp","width":475},{"text":"So they are gonna be in the rectangle.cpp file.","width":139},{"text":"Now I want to write the implementation.","width":220},{"text":"of, let's see, the constructor, area, and width setter. ","width":320},{"text":"So if I'm in the rectangle.cpp file, how do I start writing the implementation of the constructor?","width":421},{"text":"What's the first thing I'm gonna write?","width":384},{"text":"rectangle::rectangle()","width":320},{"text":"rectangle:: means this is a function inside of the rectangle, and after that follows the function definition, which is rectangle taking width and height as its argument. ","width":694},{"text":"So I will say, rectangle::rectangle, it takes an int w, int h.","width":1152},{"text":"There are 2 ways I could write this. ","width":137},{"text":"What's the first way?","width":89},{"text":"I could use the initializer list. ","width":640},{"text":"So the initializer list syntax would look like something like this. Before I put the open curly brace, I'm gonna put a colon, which means, OK, this is gonna be a list of things that gonna be used to initialize my member variables.","width":896},{"text":"So then I would say, maybe, you know, width","width":192},{"text":"underscore is gonna be w","width":242},{"text":"and height_ is gonna be h.","width":353},{"text":"And my implementation can just be nothing. ","width":256},{"text":"I don't have to use the initializer list. Here I could actually just assign these variables inside the body of the constructor and it would do the exact same thing. ","width":832},{"text":"The reason I'm teaching you initializer list is there are cases where you do have to use initializer list. ","width":346},{"text":"Like you've got another class as a member variable and you need make sure you are invoking appropriate constructor for that class. You are forced to use initializer list. ","width":512},{"text":"This may come up later in like one of the labs. ","width":192},{"text":"For now just know that you have 2 different way of setting up your instance variables, either, it could be an initializer list, or it could be in the body of the function. ","width":591},{"text":"Your initializer list also does not have to initialize everything. ","width":256},{"text":"You can just have a subset of variables in your initializer list. ","width":192},{"text":"Like I could just decide to do, you know, width_ braces w, and then, inside the body of the constructor, say height_ = h.","width":512},{"text":"So you don't have to list everything.","width":192},{"text":"[student asked a question]","width":64},{"text":"Colon colon is called scope operation operator so you can use that for saying where things are and where could be either a namespace or a class.","width":1280},{"text":"The class is kind of, you know, classes are objects. Object during a  programming is just using classes. The object, or the namespaces, are things that can hold method. Object also hold data.","width":960},{"text":"But they also hold method. So the colon colon is just the scope resolution. So you can use it for both classes and namespaces. ","width":448},{"text":"Right. How would I write area?","width":384},{"text":"rectangle::area() is gonna show up but it's not the very first thing I'm gonna write.","width":640},{"text":"int. So this thing actually does return something, so I need to say int first. I'll say, int rectangle::area( )","width":832},{"text":"taking no arguments.","width":185},{"text":"It's const","width":128},{"text":"And then you know, just return","width":384},{"text":"width_ * height_","width":320},{"text":"Then let's write the width setter.","width":832},{"text":"void, doesn't return anything, rectangle, ","width":256},{"text":"width()","width":320},{"text":"int w, it's not const, so then I could just say, width_ = w","width":576},{"text":"What's the another way I could've written that assignment statement inside of the width function?","width":576},{"text":"Uh, no. This thing. What's the another way I could' write this line of code?","width":576},{"text":"So what would be exactly? So this","width":320},{"text":"dot width, or this arrow width?","width":320},{"text":"Arrow, right? I wanna access a member so I could use arrow. If I want to use dot, it have to be (*this).width_","width":610},{"text":"Both of those would work.","width":64},{"text":"If you are in a class you don't have to explicitly use this to access your member variable. You could just access them as though they are...","width":512},{"text":"implicitly it means (*this) , arrow, that thing. So you are accessing the data through that pointer. ","width":448},{"text":"In this?","width":445},{"text":"No. Initializer list is only for constructors. ","width":192},{"text":"The question was, can I use initializer list inside of a another function that's not a constructor? They are specifically for constructors. ","width":512},{"text":"Yeah.","width":128}]