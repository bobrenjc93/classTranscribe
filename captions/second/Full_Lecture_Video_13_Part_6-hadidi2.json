[{"text":"argue this based on the invariant that you're maintaining which is every new item in the array. ","width":1728},{"text":"from n over two on for an array of size n is going to have two dollars associated with it when the resize is necessary.","width":640},{"text":"So always the case that you'll have enough, you'll never go into debt. If you went into debt, that means that the cost you were associating with the push back operation wasn't big enough. You couldn't save enough money to do this. If you try and do banker's method with three dollars for the fixed resize scheme, the add d cells, it won't work out because you have to give more money than just a fixed constant in order for that to work.","width":1792},{"text":"Banker's method will tell you that there's not a fixed cost you can associate with that. You would have to associate a cost with it that's proportional to the number of things that are in the array.","width":640},{"text":"And you have to give them N dollars instead of 3 dollars. And then your amortized cost is linear instead of constant.","width":512},{"text":"Does that make sense? This is just another way of thinking about it. If the aggregate analysis makes more sense to you, use that. If this makes more sense to you, use this.","width":512},{"text":"They're both equally valid. They're two methods of doing amortized analysis that are used in the algorithms course as well. There's also another that I'm not going to touch. But it's called the potential method.","width":960},{"text":"It involves coming up with a function that measures the potential energy of your data structure by assigning energy to every state and as you do things, the disorder of the system increases and you use the distance between the disorder of the system at state T versus state T plus one to bound the amortized cost of that state change.","width":1344},{"text":"But, doing so is sort of a theoretical sledgehammer.","width":384},{"text":"I love exam questions like this, so just as a good warning. I love exam questions where you have to think and design a data structure. Even if it's something you haven't seen before. If you've gone to lab, you've seen this data structure before. Pretend this is an exam where I've talked about lists and that's it.","width":2752},{"text":"Lists and vectors and const resizing, but that's it.","width":320},{"text":"I want you to design a data structure that provides the following ADT functions. Push of T, which adds the element to the structure, Pop, which removes an element from the structure-doesn't return anything.","width":832},{"text":"And Peek, which tells me what the next element that will be removed is.","width":512},{"text":"I can add things to the structure, I can remove things from the structure.","width":256},{"text":"And I can see what's about to be removed from the structure.","width":320},{"text":"But notice that there's no way for me to look inside. I don't have a way of iterating. There's not an at. There's no iterators. There's no mention of iterators at all.","width":640},{"text":"It doesn't even tell me what the size is, although that would also be useful.","width":320},{"text":"But I'm not requiring it here.","width":128},{"text":"But I can't iterate over it. ","width":320},{"text":"It doesn't have an operator brackets or a dot at. It's just add things, remove things, check what the thing that's about to be removed is.","width":576},{"text":"What is the next thing coming out of this structure?","width":128},{"text":"And furthermore, the first element to be removed that is what I'm going to remove next is going to be the most recent one inserted.","width":960},{"text":"Knowing that and knowing nothing else, work with your buddy and go through A and figure out what is this removing at every pop operation?","width":704},{"text":"Hopefully it's making sense.","width":6912},{"text":"So, what is this removing? The easiest way to think about this is as always, to draw a picture.","width":448},{"text":"I want the first thing to come off of this thing to be the most recent thing inserted.","width":576},{"text":"What physical thing is this like","width":128},{"text":"A stack of books or somethin","width":192},{"text":"The next thing that I'm going to pull off is going to be the thing that's on the top. I'm not going to go and flip it over ","width":384},{"text":"and pull of this one.","width":192},{"text":"It's always going to be whatever I added to the top of this thing first.","width":192},{"text":"So I'm going to draw a picture that looks exactly like that.","width":448},{"text":"This picture should look familiar.","width":256},{"text":"Push one, I'm going to add one to the structure.","width":512},{"text":"Push two, I'm going to put two on top. I'm going to put three on top.","width":576},{"text":"So then I'm going to do a pop. What am I popping? Three, it's the last thing put in.","width":512},{"text":"Push a four, pop.","width":256},{"text":"Four.","width":128},{"text":"Pop, two.","width":192},{"text":"Push 5","width":128},{"text":"Pop 5","width":128},{"text":"Pop ","width":64},{"text":"1","width":64}]