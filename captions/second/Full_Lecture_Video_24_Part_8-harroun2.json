[{"text":"So we can't place it there. We've going to try and place it one afterwards. Where the 16 is. Well the 16 is there so we can't place it there. There's nothing there so we can place it there. This is going to hash the key to a spot in the table look and see if there's something there if there is probe forward until you find the next open slot. When you find an open slot you place the value there.","width":2367.6666666269302},{"text":"Let's insert the last few things. Let's insert the 11.","width":575.6666666269302},{"text":"Where's the eleven going to hash? The eleven is going to hash where the four is. So I can't insert there so I'm going to probe forward to an empty slot. I get lucky and the eleven is going to go there.","width":1727.6666666269302},{"text":"Finally I insert the 22. 22 is going to go where? Hash to where? 1. 1 is full i can't go there so i go to 2. 2 is full i can't go there. 3 is full i can't go there. 4 is full i can't go there. 5 is full i can't go therefore. Wrap back around to zero. Okay there's slot here.","width":1919.6666666269302},{"text":"So you sort of see were going to need to make the same argument. We want to guarantee that this thing is not very full. When it's full big clustering effect. Everything next to each other. Probe whole table. Make similar argument that number of probes is small. With ratio load factor.","width":2047.6666666269302},{"text":"Let's think quickly about the other function. Did insertions. What if i do find? Locate 29. find 29. what's first thing i do? hash it mod size gives you what index? look at one. one is got an eight in it.","width":2239.6666666269302},{"text":"I conclude it's not in table. right? I know it's there we inserted it. Just like we had to probe when we find next empty slot. Probe when doing find to next empty slot.","width":1791.6666666269302},{"text":"Most of the time never loop around table. lots of blank slots. guarantee load factor not near 1. Always blank slot. Write code that works. What i would do if i asked you to find any multiple of seven that's not in here is good. find me 14. i would loop around whole table","width":3051.6666666269302},{"text":"When i say okay locate 29 go to slot one and see there's an eight. cell has been occupied so probe forward. Look at the next cell it's 16 so could have to probe forward. find 29 done.","width":1279.6666666269302},{"text":"Lets do an removal. Lets remove the sixteen. What do i do to remove sixteen. Hash it locate has value index value. 2. inspect the key at that slot. Okay that is actually sixteen. remove the 16.","width":2431.6666666269302},{"text":"There's a problem here. What if i ask you to find 29 again.","width":511.66666662693024},{"text":"Not there since i find an empty slot. So that's what this other array is for.","width":670.6666666269302},{"text":"Keeping track of the status of the cells.","width":447.66666662693024},{"text":"There's sort of 3 states for a cell in this picture. One cell has nothing in it and has never been occupied. Totally blank. State two there is something currently residing here. State 3 is currently blank but something used to be here.","width":1727.6666666269302},{"text":"Say that i have unoccupied occupied or removed as my three states. All of these are going to be occupied. But this one is going to be removed state.","width":1542.6666666269302},{"text":"Now when I'm probing when i'm looking for the 29 i hash to the 1 I look and see 8 is there so i need to look forward i go to the cell 2 and see that it is in the removed state. Something used to be here so 29 might be below this. My check isn't jsut is it unoccupied","width":2047.6666666269302},{"text":"My check is i will stop if i looped all the way back to where i started or if i find an actually unoccupied cell. Then i can't be any farther down. If i find a cell that has been unoccupied. Imagine picture looks like this currently.","width":2111.6666666269302}]