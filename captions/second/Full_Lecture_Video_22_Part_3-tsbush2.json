[{"text":"So instead of going right and then going left and then doing work you go either right or left and then you do work.","width":576},{"text":"So the height function here is just going to return to you the height stored inside the node if it's none null and then -1 if it is.","width":704},{"text":"So it's not actually going to do a traversal to find the height.","width":384},{"text":"One of the key points here is that we're storing the heights int he nodes so that we can guarantee that we have access to the heights in constant time.","width":448},{"text":"If we didn't then we wouldn't have access to the heights in constant time and then we wouldn't be able to make the same argument, hint hint nudge nudge.","width":768},{"text":"So we've written the function that diagnoses wether the imbalance occurs in the left or the right and then updates the height properly on the way out.","width":1024},{"text":"So now let's actually write the functions that do the rebalancing on the left and the rebalancing on the right.","width":448},{"text":"Again I'm going to assume that we've got a butt load of helper functions either of which will be provided for you in the lab or you will write in the lab.","width":704},{"text":"I forget which subset of the rotations, like one side is given to you and you do the other side, like right side is given and you do left and right_left is given and you do left_right or something like that.","width":640},{"text":"So we're just going to assume that these are given and these are the exact same functions that we talked about last time where had the conveyor belt and stuff that was moving around.","width":640},{"text":"And we had to check if the balance factor agreed to know which kind of thing to do .","width":448},{"text":"So we're going to do that part, which is checking which kind of rotation we actually need to do.","width":320},{"text":"And then just invoke that rotation function and then we're going to stop here.","width":256},{"text":"If I'm in the rebalance left function I know that my left subtree is where I've got too much height, that's what's causing my inbalance.","width":960},{"text":"So I know then what kind of general rotation do I need to do?","width":320},{"text":"If I'm heavy on the left I kind of have to move things over to the right.","width":256},{"text":"So I better be doing some kind of right rotation.","width":192},{"text":"How I'm calling this, I'm calling rebalance left when I'm heavy on the left side.","width":576},{"text":"So if I'm heavy on the left side to fix that I'm going to do some kind of right rotation.","width":448},{"text":"So now the question is which kind of right rotation am I going to do?","width":320},{"text":"Is it just a straight old fashion right rotate?","width":192},{"text":"Or is it a left_right rotate>","width":128},{"text":"Do I need to rotate that subnode first and then do my rotation or can I just do my rotation and be done.","width":384},{"text":"So that's what we're going to do here","width":192},{"text":"So how would I diagnose that?","width":384},{"text":"Yea.","width":128},{"text":"So and here it would be on the yea on the left.","width":896},{"text":"We're heavy on the left we're going to look at the child that's on the left.","width":384},{"text":"And we see if it's balance factor sort of agrees in sign with ours.","width":192},{"text":"So we need 2 things there.","width":256},{"text":"One is sort of our balance factor and one is the childs' balance factor.","width":320},{"text":"I've only got one line there for a temporary variable.","width":128},{"text":"I'm not going to compute the balance factor for the current node, why am I not going to do that>","width":448},{"text":"I already know that its' heavy on the left so I know that it's sign is positive.","width":576},{"text":"So all I care about is the balance factor of the node on the left now and if it's positive it agrees with me and if it's negative it doesn't.","width":448},{"text":"So i only need one computation here which is the balance factor of the child.","width":768},{"text":"So the balance factor of the child node is going to be height, so I'm looking at the balance factor of subroot left so I care about subroot's left and subroot lefts' right.","width":2048},{"text":"So that's going to tell me the balance factor for that child.","width":1344},{"text":"Then there are only two cases, either it's positive or it's negative.","width":832},{"text":"Note that it can't be zero, because if it was zero we wouldn't have an imbalance here.","width":320},{"text":"It has to be either positive 1 or minus 1.","width":448},{"text":"So if cbalance is positive then I know that since I'm in rebalance left I was heavy on the left so my balance factor was positive.","width":1152},{"text":"If the childs' balance factor was positive then what kind of rotation do I need to do?","width":320},{"text":"The two balance factors agree so it will not be a double rotation, double rotations only happen when the signs of the balance factors disagree.","width":704},{"text":"So since the signs agree I know it's going to be a single rotation.","width":256},{"text":"So is it a left rotate or right?","width":320},{"text":"A right rotate, I'm heavy on the left side so I need to move things from the left to the right.","width":320},{"text":"I'm doing a right rotation.","width":192},{"text":"My picture is like this.","width":192},{"text":"And I'm heavy on this side left and right's hard.","width":768},{"text":"My picture looks like this now I', actually heavy on the left side.","width":704},{"text":"Here I'm imbalanced on the left and so to fix that I can't do a left rotation.","width":1664},{"text":"Rotating this to the left is not going to fix that it's going to make that worse.","width":448},{"text":"I'm going to do a right rotation.","width":192}]