[{"text":"**p = something, right?","width":192},{"text":"each * means dereference one time","width":512},{"text":"**p give me this guy","width":384},{"text":"= is going to assign the value I want","width":192},{"text":"new int, that is going to make a new int","width":640},{"text":"","width":576},{"text":"So now **p is initialized to point at heap ","width":192},{"text":"So no we have matching these we want so I am going to clean it up","width":512},{"text":"OK, how do we free it.","width":384},{"text":"delete, I call delete","width":320},{"text":"In order to clean the heap memory you need to call delete","width":256},{"text":"So delete is correct","width":64},{"text":"But what do I delete","width":320},{"text":"**p, why do I delete **p","width":256},{"text":"first","width":128},{"text":"It is the last thing created.","width":576},{"text":"So what if I write delete **p","width":320},{"text":"What's wrong with that?","width":128},{"text":"So this will compile","width":512},{"text":"delete a pointer, a pointer given to a heap memory","width":384},{"text":"That is all fine, thing complies","width":128},{"text":"However there is a runtime error which is called use after free error.","width":448},{"text":"Delete p means release back to the system","width":768},{"text":"System thinks go ahead, use the memory of p do whatever you want","width":256},{"text":"And then I say delete int**p","width":192},{"text":"So I'm given back to the memory of p back to the system","width":576},{"text":"Who knows what will happen","width":128},{"text":"If lucky it works, if not lucky it explodes","width":256},{"text":"If you are extremely unlucky it format your drive","width":256},{"text":"This is called undefined behavior which means the compiler is free to do whatever it is optimized","width":768},{"text":"This is bad, this is use after free","width":256},{"text":"I still need to make sure I have access to the memory of the very last thing in the heap","width":448},{"text":"of the back of the chain","width":256},{"text":"It is definietly correct to say delete **p first","width":448},{"text":"delete has always to be called on pointer","width":512},{"text":"And it is going to point at the thing it points at","width":128},{"text":"So 42 is gone","width":64},{"text":"delete *p","width":768},{"text":"delete p","width":512},{"text":"Do I have to delete something in the stack?","width":640},{"text":"We are just supposed to managing heap memory, not the stack","width":512},{"text":"In general, if you can use stack memory, use it.","width":192},{"text":"Only use the heap you need to.","width":192},{"text":"","width":512},{"text":"(question) Yes. Good question!","width":960},{"text":"So auto p = new int** {new int* {new int {42}}};","width":1984},{"text":"Those two things are equivalent","width":1024},{"text":"This will also work, because this first make an integer 42 on the heap, then make a new integer points to the heap, then make a pointer to pointer on the heap, and then assign it to a variable on the stack.","width":1664},{"text":"","width":384},{"text":"Draw a memory diagram for the following code","width":256},{"text":"So, we have a stack frame","width":192},{"text":"What is the type of pts?","width":448},{"text":"double* because I am assigning the new value of the double that going to be the location of a double in the heap","width":640},{"text":"It also happen to make a double in the heap","width":192},{"text":"So I am going to get a double in the heap.","width":512},{"text":"It is a pointer on the stack which I am going assign","width":576},{"text":"a location which is a value of double on the heap","width":256},{"text":"auto doub = *pts * 2, what is the type of doub?","width":512},{"text":"It's double","width":384},{"text":"What is the type of *pts","width":320},{"text":"Double.","width":384},{"text":"The type of pts is double*, so if I dereference pts, the result is the thing I point to","width":640},{"text":"So *pts is a double","width":256},{"text":"What is the type of 2?","width":192},{"text":"integer, integer constant, double* int = double","width":704}]