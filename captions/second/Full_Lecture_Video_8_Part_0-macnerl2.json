[{"text":"okay so lets go ahead and get started so as far as announcement theres plenty","width":3328},{"text":"cause plenty is happening lab debug is finally been graded so it should be in your gradebook as well as in subversion. the delay for that is my fault it's not as though it was extended","width":576},{"text":"it was graded as of when it was due so it didnt","width":384},{"text":"its available so go ahead and check that","width":320},{"text":"make sure it's what you would expect. um lab allocate and mp_memory.1","width":64},{"text":"are due at 11 pm tonight","width":192},{"text":"um","width":64},{"text":"again","width":64},{"text":"I strongly encourage you to do mp_memory.1 yourself","width":384},{"text":"???","width":128},{"text":"understandiong what the point of having a scoped pointer even is what it gets you that kind of stuff. storms are","width":832},{"text":"bad","width":64},{"text":"so the storm last night knocked down pretty much the entire computer science data center so even CS.illinois has been down for quite awhile so they're working on that. As far as I'm aware things should be up","width":1216},{"text":"in a matter of hours not like a matter of days so just please precede as normal and if I need to make audibles I will. so assume for now that all the problems will be gone by 1 pm today","width":960},{"text":"if they're not ill figure it out","width":256},{"text":"the first exam like I said is happening wednesday at seven I have posted practice problems on the course website so if you go to the course website which you cant do right now, but if you go to the website and you go to the exams","width":1088},{"text":"page","width":64},{"text":"and theres a number of practice exams that are posted as along with suggested problems from them so remember that those exams are going to cover more material than we've gotten to so only do the problems that I've explicitly marked as being","width":1024},{"text":"worth looking at","width":64},{"text":"we're not going to cover for example linked lists because we haven't gotten there yet. if you see something that we havent covered","width":448},{"text":"we're probably not going to cover it","width":128},{"text":"also note that those practice exams are not comprehensive so just knowing whats on the practice exams is probably not going to be enough for my exams. We have covered stuff that doesnt appear on any practice exam that I can give you","width":1024},{"text":"and ive tried to do my best to mark what kinds of things are not covered in this exams on the exams page on the course website but things like copy and swap","width":960},{"text":"implementation of assignment operators, things like move semantics, move constructors, r-value references","width":448},{"text":"those things are missing from those practice exams so you should make sure that you go and also review that material as well ","width":960},{"text":"its still important and it will still be covered","width":384},{"text":"okay","width":256},{"text":"lets look at some of the prelecture responses ","width":320},{"text":"very good questions","width":192},{"text":"very very very good first question asked here which is what are the benefits","width":64},{"text":"of having derived classes inherit from an abstract base class?","width":448},{"text":"remember youve got an abstract base class so actually somebody else asked let me do this","width":384},{"text":"other question first so where is it?","width":128},{"text":"um","width":64},{"text":"is there a clear definition of an abstract class?","width":384},{"text":"the videos seem not to be related to each other. I don't know what that means, but i'm pretty sure I gave a pretty clear definition of an abstraction","width":448},{"text":"class","width":64},{"text":"what is a clear definition of what an abstract class is?","width":576},{"text":"yes?","width":192},{"text":"yeah","width":192},{"text":"it is a class which has at least one ","width":256},{"text":"pure virtual function","width":128},{"text":"thats it thats all an abstract class is","width":384},{"text":"has at least one pure virtual function","width":256},{"text":"what is a pure virtual function?","width":256},{"text":"yeah?","width":256},{"text":"its just a virtual function","width":320},{"text":"so pure virtual means its also a virtual function so its a virtual function","width":64},{"text":"thats got an =0 on that on the end right which means what what are we saying when we say virtual whatever =0","width":704},{"text":"what are we saying there?","width":192},{"text":"right","width":64},{"text":"theres no implementation for this particular function in this particular class","width":448},{"text":"so we're just saying right there exists this function it has this name it takes these arguments it returns whatever. We're not saying how it works at all, we're just saying it will exist.","width":512},{"text":"and we're not providing an implementation","width":384},{"text":"not providing an implementation for at least one function","width":64},{"text":"thats been marked as virtual so having at least one pure virtual function makes a class abstract","width":448},{"text":"because what would it mean to have an instance of that class? it's got a missing method","width":320},{"text":"you cant","width":128},{"text":"i cant","width":64},{"text":"I dont know what it means to have an object of that type anymore because it doesnt have","width":192},{"text":"its not fully implemented its missing part so thats what makes it abstract its no longer capable of being concrete because it's missing parts it just makes a promise that derived types should have this function but it says nothing about how this actually functions. So then back to the","width":1536},{"text":"good quest what is the benefit of having a derived class inherit from an abstract base class","width":448},{"text":"so this is not","width":64},{"text":"just inheretance this is beyond just why is inheritance useful this is why is inheritance from an","width":384},{"text":"abstract base class useful right","width":192},{"text":"oh","width":256},{"text":"the reason why its useful to inheret from abstract base class is often youve got a situation where you're providing","width":576},{"text":"an interface for something like I just know that I've got some things and they all do this kind of operation like they draw themselves or they can","width":768},{"text":"um","width":64},{"text":"you know they can update the","width":128},{"text":"display on the graphics driver","width":256},{"text":"they do someTHING","width":128},{"text":"but I have NO idea at the time how they do that nor do I care at the moment, I just want to be able to have one of","width":576},{"text":"these things that promises to do that display thing right or","width":192},{"text":"or update display or whatever the interface is maybe its a youve got a bunch of class in a game that all know how to attack but just having an entity doesnt tell you how to attack","width":768},{"text":"right","width":128},{"text":"but its still reasonable to want to have a whole bunch of entities and then have each one invoke an atack on a player character or whatever.","width":768},{"text":"so you inherit from abstract base classes typically to supply an interface so somebody is expecting","width":192},{"text":"okay I have a collection of these things they all know how to do ","width":384},{"text":"x","width":64},{"text":"but right now it doesnt make any sense to define what how x happens just what the arguments are to it and what it","width":320},{"text":"returns. and then later on im going to have when im actually filling this collection up with those things Im going to fill it up with concrete types or pointers to those types","width":640},{"text":"that do something different so maybe I've got a dumb AI","width":320},{"text":"bot","width":64},{"text":"as one elemnet but then ive gopt a boss bot in another element and then ive got you know a ","width":512},{"text":"gumba element in another one then ive got a remote player character in another one but all of these know how to like move","width":640},{"text":"they know how to move in the next time steo to a different position or something. and at the time how","width":384},{"text":"those things are going to work and they're all going to be different like the remote player character is going to have to listen to a server and it's gonna have to[","width":320},{"text":"see what the keys the other guy is pressing and then update that based on the keys he's pressing","width":320},{"text":"the ","width":64},{"text":"dumb ai bot is just gonna walk in a patrol and then if you walk inside of his circle then it tries to attack you","width":448},{"text":"the boss is gonna have completely different behavior for what it does to move around and stuff. your character is going to","width":384},{"text":"have a different behavior ","width":64},{"text":"for what it ","width":128},{"text":"it means to move around and then as you move between levels the set of what you're going to be dealing with is different different levels are going to have different enemies","width":448},{"text":"different bosses and different players in it if youre thinking of an rpg or something where youve got a whole bunch of people playing online everywhere","width":512},{"text":"you go into is going to have a different set of these things and they're all going to kind of behave differently alright","width":256},{"text":"what I want to know as the programmeris that I can go through the set of all things ","width":256},{"text":"that are active in the  current part of the world that im in so that","width":320},{"text":"I can update their positions on my screen on my machine","width":320},{"text":"but I dont know ahead of time how many there are going to be, what they are","width":256},{"text":"how they should work so im going to have all these derived classes inherit from an abstract base class and then just have a collection of","width":512},{"text":"pointers of that abstract base class type that I can then","width":192},{"text":"call this promised function on and then it'll do what I need it to do","width":256},{"text":"yeah","width":192}]