[{"text":"Okay. So eight says at a declaration from the move constructor to our book class header file at the beginning of the work sheet","width":624},{"text":"okay fine","width":142},{"text":"so we go all the way back up here","width":146},{"text":"what's it gonna be called?","width":490},{"text":"what's its argument?","width":448},{"text":"book ref ref","width":593},{"text":"R-value reference to another book","width":178},{"text":"okay. so now because I have this function and this function","width":352},{"text":"the compiler can now choose when it's going to construct a book from another book","width":490},{"text":"it can decide, okay, is that book that I'm making it from an L-value or an R-value?","width":386},{"text":"if it's an L-value I invoke the copy constructor and everything is exactly same as before","width":402},{"text":"if it's an R-value I know that I can do something more efficient","width":279},{"text":"so I'm going to invoke this other constructor, which is the move constructor","width":151},{"text":"which is gonna to something a little bit better than making a copy","width":297},{"text":"the motivation here is that if I'm constructing a book from an R-value to a book, a book R-value","width":478},{"text":"that means that that's like a temporary. It's going away.","width":217},{"text":"So it's got a whole bunch of memory in it, and I want to copy it but it's going away and no one's gonna use it later.","width":346},{"text":"So rather than, you know, okay I want to, here's the pen I wanna have that pen and I know that this pen is gonna go away immediately anyway","width":504},{"text":"Rather than, clone the pen, have the pen over here, delete the pen.","width":227},{"text":"okay now I got the pen, right?","width":154},{"text":"But instead say, make another pen from this pen, but it's temporary. It's gonna go away anyway.","width":420},{"text":"So go ahead and steal everything from it. Leave it empty.","width":443},{"text":"No memory allocations, none at all. No heap memory allocations at all.","width":276},{"text":"Just swap it. Right? Moved it.","width":162},{"text":"I took all values from here, moved them over here. Left this one empty.","width":256},{"text":"Unfortunately there's still two pens.","width":88},{"text":"But one of them is empty. So then since it's a temporary value, you could actually use a temporary.","width":332},{"text":"It's gonna have its destructor invoked. It's empty, so the destructor is like, \"okay. fine. delete null pointer. fine\"","width":311},{"text":"No op. Doesn't do anything.","width":83},{"text":"Alright. Very fast. And now I've not done this redundant thing of, okay, this has got everything I need in it.","width":327},{"text":"And it's going away, no one's ever gonna look at it ever again..","width":149},{"text":"I'm gonna copy all the values and then throw away this one.","width":192},{"text":"But why? That wasn't useful. This already has everything you need in it, and you know it's a temporary.","width":295},{"text":"if you're in the move constructor.","width":91},{"text":"So you can just go ahead and and steal everything from it.","width":146},{"text":"And leave it empty, and then when it's released, its destructor invoked which is now operationg on an empty object, so it's just not gonna do much. Alright?","width":1029},{"text":"Real quick, I wanna write the swap helper function cause I'm gonna use it again. I realized that I forgot to write it.","width":476},{"text":"So I guess let's just put it right here.","width":218},{"text":"So this swap function is a member function. It takes another reference to a book. Right?","width":357},{"text":"All it's gonna do is exactly what you'd expect: swap the member variables.","width":252},{"text":"Alright. So I'm just gonna say, okay, void book swap book ref other ","width":960},{"text":"Lazy using","width":434},{"text":"Using std::swap, so now when I say swap, that will mean std::swap","width":237},{"text":"So swap the lines, swap the length.","width":2624},{"text":"Okay. So just swap all the member variables. You could do that with the temporary and three values, however you want to do it.","width":340},{"text":"But it's just swapping all the values. I'm just using a built-in function called standard swap that swaps any arbitrary values for any type.","width":697},{"text":"So this is just so I don't have to say std::swap, std::swap, std::swap.","width":258},{"text":"That just means in this function, I'm going to pull in standard swap into the global scope. Just for this function.","width":512},{"text":"So it's just a way of me not having to say std, std, std, std, bunch of times","width":1400},{"text":"So the question was \"could I use a pointer here to the other thing that I wanna swap with?\"","width":410},{"text":"Yes. The answer is yes. And the discussion is kind of the same thing when we're talking about writing the swap function where, if we take in a pointer, we have to handle the case where it might be null.","width":698},{"text":"If we take in a reference, it can't ever be null.","width":134},{"text":"So it's not possible for me to swap on like a null book cause there isn't one.","width":278},{"text":"So I don't have to do any null checks or anything here.","width":128},{"text":"I also don't have to do any dereferences because it's just through a reference rather than a pointer.","width":598},{"text":"Yeah we have to kind of include utility I think hopefully have that, nope.","width":279},{"text":"I think this might included itself, but yeah I would need pound include","width":1115},{"text":"Again I mean these swap calls, you could write a swap function yourself that swaps two pointers and swaps two integers, or whatever.","width":334},{"text":"You kinda know how to do that. I'm just using a built-in function to save time.","width":207},{"text":"Yeap.","width":489},{"text":"Yeah, unfortunately not. There's not a way of saying \"okay, for every attribute, call swap\"","width":450},{"text":"There might be in the future, but not for C++ 11, and probably not for 17 either.","width":427},{"text":"We're looking for something called reflection, if you're curious.","width":320},{"text":"Okay. Alright. We've got a swap function. I wanna finish this work sheet.","width":243},{"text":"I'm gonna finish the first sheet of the entire semester.","width":130},{"text":"Okay. So we've got a swap function. Now let's write the move constructor for the book class, okay?","width":562},{"text":"As it would appear in this cpp function, and I've given you a hint, so I'm just gonna write it.","width":248},{"text":"But the hint is that it should remind you of the copy-and-swap idiom for the assignment operator, right?","width":448},{"text":"It's gonna look very very similar.","width":128},{"text":"So I'm gonna take my book ref ref other. Okay.","width":619},{"text":"And remember, my goal of the move constructor is to steal all of the values from this guy and leave the argument empty.","width":512},{"text":"Right?","width":760},{"text":"So that's my method body.","width":198},{"text":"What do I need to do in the initializer list?","width":401}]