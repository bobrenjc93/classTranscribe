[{"text":"questions about that?","width":1177},{"text":"so you see when you use a page table","width":121},{"text":"things are slow because our page table itself is stored in memory","width":269},{"text":"so anytime your process wants to do anything","width":151},{"text":"read or write a piece of memory","width":84},{"text":"it first of all has to read this memory of the page table","width":230},{"text":"in order to calculate where to go in memory","width":215},{"text":"you've slowed everything down","width":118},{"text":"so to speed everything back up, we need a cache, what is that cache called?","width":536},{"text":"yes the TLB, the translation lookaside buffer","width":201},{"text":"because most of the time when we use an address, we use it again in the near future","width":311},{"text":"and so hopefully we have a cache hit, hopefully we have a high likelihood that we don't need to actually go back to our table to discover the answer","width":557},{"text":"so the TLB is part of the memory management unit, its job is to short circuit this lookup so that we can actually have good performance","width":735},{"text":"alright what does peterson's solution solve?","width":673},{"text":"do you know? does your neighbor know?","width":419},{"text":"if your neighbor said the critical section problem, congratulations you should sit next to that neighbor in a future class","width":609},{"text":"yes the critical section problem","width":464},{"text":"how dare I ask questions which are from weeks and weeks and weeks ago","width":320},{"text":"here's why, if you want long term memory of CS241 content","width":366},{"text":"the best way to actually learn something for the long term is to use your long term memory","width":294},{"text":"and so I'll be talking about that in terms of revision for the final and beyond","width":323},{"text":"right so it solves the critical section problem","width":190},{"text":"right malloc is thread safe but not signal safe","width":213},{"text":"the malloc you wrote was not actually thread safe but now you know about mutex locks","width":397},{"text":"you could have written a little lock and unlock around your code and made your malloc thread safe","width":465},{"text":"but it's not signal safe","width":308},{"text":"why? what's special about signal handling that's different from threads","width":643},{"text":"not quite","width":402},{"text":"yeah you're interrupting the process okay","width":611},{"text":"right yes you might interrupt malloc whilst it's executing malloc code","width":325},{"text":"reenter malloc and the data structure could be in a inconsistent state","width":350},{"text":"so it's a bit like... an analogy here might be you have a whole load of chefs coming in","width":528},{"text":"so you say I tell you what I'll have mutex locks so that only one chef at at time is allowed to use my kitchen","width":412},{"text":"so that's thread safe","width":160},{"text":"with signals, what you do to the chef is you say actually hold on chef I'm going to get you to come back to the room and cook this different recipe","width":458},{"text":"they walk in, there's the same thread, but now the kitchen is in disarray, the oven is already got something inside it, already set to a particular temperature","width":569},{"text":"and now your chef attempts to use these resources","width":218},{"text":"whoops, we can now get our memory data structures into an inconsistent state","width":499},{"text":"or we might try to lock a mutex that we've just locked resulting in deadlock because we were the thread that actually locked the mutex","width":711},{"text":"right and...","width":260},{"text":"here's one little challenge for you, okay think back in time to sempahores","width":558},{"text":"how do semaphores work? remember they don't let their count go below zero","width":313},{"text":"if you call sem_wait, it might block until someone else calls sem_post","width":561},{"text":"so I'm going to finish this code to make a barrier","width":410},{"text":"or rather you're going to finish this code to make a barrier","width":197},{"text":"what I want is so that the first four threads when they call this code are blocked","width":459},{"text":"but when the fifth thread arrives","width":174},{"text":"they all may continue but not before","width":288},{"text":"alright so how are you going to finish this code and what are the initial values for sempahore a and semaphore b","width":503},{"text":"alright this is a timed challenge","width":253},{"text":"you've got until I've done two laps of this and finished singing ackey breakey heart","width":417},{"text":"fortunately I sing very quietly ","width":106},{"text":"[silence]","width":10479}]