[{"text":"And I think.... Let's quickly go through this.","width":401.39999997615814},{"text":"So, we've got to have a way of holding on to the start of this piece of chain memory. If everything is owning the thing after it that's fine, but I've got to be able to hold on to the front of this thing, often called the head of the list.","width":896.3999999761581},{"text":"So, my list class is probably going to have a member variable called head.","width":384.39999997615814},{"text":"which is a scoped pointer to the front of the list.","width":228.39999997615814},{"text":"What things do I want to be able to do with lists?","width":184.39999997615814},{"text":"Well, I might want be able to make an empty list, so, I maybe have a default constructor for a list, that's makes an empty one.","width":576.3999999761581},{"text":"I might want to add something to the front, so maybe- void push_front(T) - something of type T. I maybe want to add to the back of it, okay, fine. void push_back(T)- something of type T.","width":1216.3999999761581},{"text":"Remove from the front, maybe a void pop_front();","width":512.3999999761581},{"text":"not taking anything, doesn't take a T.","width":208.39999997615814},{"text":"I might be able to add things to the front, or remove things from the front, add things to the back, or remove thing from the back, so this is going to be similar...","width":422.39999997615814},{"text":"Get at a position, so I might want to say, \"What is the third item in my list?\", if this is like my to-do list, I might want to know what my third item is. ","width":493.39999997615814},{"text":"So, getting at a position is probably a T& at(int i), or unsigned i or whatever.","width":768.3999999761581},{"text":"I probably have a const version of that. Think about how you'd write that. We'll touch on this next time again, but I wanted to just show this.","width":670.3999999761581},{"text":"How many elements? I might want to be able to say \"what's the size of the list?\", so maybe something like that: size_t or an unsigned integer or an integer or whatever you want to call it, but something to get the size. How big is this thing? : size_t size() const; probably don't want to modify it, when they just ask for how big it is.","width":1152.3999999761581},{"text":"Any elements? Is this thing empty? maybe as a convenience, I could always check if the size is zero. But maybe it's easier to know if it's empty or not, so I can just say: bool empty(). ","width":896.3999999761581},{"text":"An empty list is one whose head pointer is null or something.","width":280.39999997615814},{"text":"okay? and we're going to start here, sort of redo this, next time.","width":310.39999997615814},{"text":"There will be a pre-lecture for tomorrow, we've seen this, so we're far enough.","width":320.39999997615814},{"text":"...","width":8192.399999976158}]