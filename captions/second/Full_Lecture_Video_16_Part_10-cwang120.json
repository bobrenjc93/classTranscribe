[{"text":"We're not going to handle the case where they're equal.","width":384},{"text":"So the answer is sort of whatever we what, but we're not going to do it. ","width":256},{"text":"Why can't we push front if it is the smallest elements?","width":512},{"text":"I think you can, maybe you've got to be a little bit careful, because you sort of changing, you sort of shifting around in your heap if you did that. ","width":704},{"text":"So, it might be fine, I don't know. I've had to work that out, I don't have time for it right now.","width":512},{"text":"In general you'll not be guaranteed to push the smallest thing, so, you might be able to optimize that one case, but this will work for any elements that I add. ","width":640},{"text":"So now let's have the element 3. Notice that if I add the element 3 it's not gonna all the way up to the front this time, so push front wouldn't work in this case.","width":448},{"text":"So, in order to make this complete, where 3 gotta go first?","width":320},{"text":"Left of 20, so, the 3 gotta go there, the 3 is a heap fine, so now I've got to check if the tree rooted above 3 a heap.","width":704},{"text":"Well, 3 is smaller than 20, so it's not, so I'd better swap these guys. ","width":384},{"text":"So the 20 is gonna end up down here, and 3 will swap up there, Okay, fine, so now that the tree rooted at 3 is a heap.","width":448},{"text":"So then we check, what's 3's parent? 3's parent is 4, is 4 smaller than 3? NO, so, we'd better swap these things around.","width":512},{"text":"So that means the four is gonna come down here, and 3 is gonna to here.","width":384},{"text":"And now we're gonna to check again, what's 3;","width":192},{"text":"what's 3's parent?","width":64},{"text":"3's parent is 2, 2 is smaller than 3, yes, stop","width":256},{"text":"So we stop here. So, what's the running time of this.","width":576},{"text":"Let's say, let's conveniently let's let the h be the height of this tree, How long is it, how long in the worst case dose it cost me to push something into this heap.","width":512},{"text":"O(h). In the worst case, I go all the way up the tree,  but I only go up the height. It's not like I've got to check the other side, I only go up the height of this tree.","width":640},{"text":"So what is that in terms of N?","width":192},{"text":"Log, so, remember, we showed in lecture a formula for the number of Nodes in the perfect tree for given height h.","width":832},{"text":"Note that for a complete tree, it's only gonna be off by the number of leaves in the bottom most level.","width":448},{"text":"Which is always gonna be smaller than, the formula we've got, like another factor, maybe N","width":384},{"text":"So, it's not going to change much, So, the height of a complete tree, is gonna like the height of a perfect tree, plus 1 maybe. So, ok, plus 1 doesn't really change much, right.","width":832},{"text":"So the height of a complete tree is also going to, sorry the number of nodes in complete tree is also going to be something like O(2^h)","width":576},{"text":"So, if I say like N is like O(2^h), that means like logN is something like h. So, h is something like O(logN).","width":1152},{"text":"This is totally hand wavy, but this is how you... we will have a much formal prove about tree height later. ","width":448},{"text":"But for this case, it's basically a perfect tree. And we know the number of nodes in a perfect tree of given height.","width":512},{"text":"So you just inverse that to have the height of a tree with the number of nodes, right.","width":384},{"text":"That's all that is. Though, the only difference is that a complete tree might have height one more, cause it got some nodes in that bottom most level. ","width":448},{"text":"But it's still, plus one is not going to change much in terms of the number of nodes. ","width":384},{"text":"So, this is actually be logN, the height of this tree is logarithms in N.","width":320},{"text":"Okay, real quick, how do we do a pop. So this is gonna to answer the question what in the world goes on when we got to remove something. ","width":576},{"text":"Well start with peak. How do you peak.","width":320},{"text":"Come on, how do you peek. It's at the root, right, where is the root, what index is the root. Zero, I just look at array[0], that's easy.","width":704},{"text":"So, how do I pop, how do I get rid of the root. I've got to get rid of the thing that is at the front of the array.  ","width":320},{"text":"But I also need to make sure that the tree stays complete and the tree stays a heap. ","width":256},{"text":"If like I just pop front, you know the 5 will now be the root, and that's not gonna to work, because 3 would be below it now. ","width":384},{"text":"Because everything is gonna shift weirdly like this. So I can't just pop the front, that's not gonna to work. ","width":320},{"text":"So, the observation is that we could just delete it and then have two heaps, but why not try to have all of them in one heap. So what's our trick gonna be. ","width":576},{"text":"What we're gonna do is swap it to the back, because it's easy to be removed from the back.","width":448},{"text":"To keep this tree complete, we're just gonna to swap the root with the very last thing in the array. ","width":384},{"text":"So, we're gonna to swap the 2 with the 20.","width":128},{"text":"And then it's easy to remove the two, we just pop back. ","width":384},{"text":"This is no longer a heap. The 20 is way bigger than anything else in this entire tree except 25. ","width":768},{"text":"So, I need to fix the heap property. So Now what I'm gonna do is to call the heapify down, which is called so because it bubbles the node down the heap.","width":640},{"text":"to its proper position. I apologize for going over, but I really want you to see this. ","width":128},{"text":"So, okay, so, we remove the 2 and 20 is at the root, so how do I move the 20 down. ","width":512},{"text":"We have to swap it with its left or right somehow, because I know it's too big. Which one do I swap with?","width":640},{"text":"The minimum, it might be the left, it might be the right, I don't know, I have to check.","width":448},{"text":"So what I'm gonna do here is say okay, I'm at the 20","width":128}]