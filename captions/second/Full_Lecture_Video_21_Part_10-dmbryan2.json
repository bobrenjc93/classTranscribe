[{"text":"","width":529},{"text":"The issue is we've done the insertion","width":168},{"text":"We've updated the height appropriately","width":108},{"text":"So now we need to actually diagnose whether we need to do a rotation or not.","width":213},{"text":"","width":160},{"text":"So thats what this guys gonna do.","width":99},{"text":"This rebalance function is going to figure out, do we need to do a rotation?","width":335},{"text":"And if so which side is heavy?","width":253},{"text":"Its gonna do the diagnosis of double or single.","width":192},{"text":"Its just gonna do which side is heavy? Is it heavy on the left or is it heavy on the right?","width":190},{"text":"","width":195},{"text":"So [lets] get this guy, and I've told you to assume","width":149},{"text":"We needed this assumption up there","width":174},{"text":"and this should just be int","width":96},{"text":"","width":140},{"text":"So we're still gonna assume we've got a height function","width":132},{"text":"","width":115},{"text":"And now I'm telling you we've got rebalance left and rebalance right","width":197},{"text":"Which are going to take care of inbalances that occur on the left","width":207},{"text":"Or inbalances that occur on the right.","width":128},{"text":"","width":39},{"text":"And so that function is either gonna do a single rotation or a double rotation depending on the balance factor","width":256},{"text":"","width":165},{"text":"So I'm gonna set","width":64},{"text":"I'm gonna figure out what my balance factor is which is what?","width":139},{"text":"","width":576},{"text":"","width":73},{"text":"Do I want to absolute value here?","width":121},{"text":"I want the sign. I care about the sign.","width":143},{"text":"","width":81},{"text":"So I want the signed balance factor","width":99},{"text":"Which is just the height of the left minus the height of the right","width":161},{"text":"So I'm gonna call height","width":95},{"text":"","width":665},{"text":"height of the left minus","width":105},{"text":"","width":693},{"text":"minus height of the right","width":69},{"text":"Gives me my signed balance factor","width":136},{"text":"And now I can look at that sign to figure out which side I need to go on","width":192},{"text":"","width":331},{"text":"Oh I guess I was doing it here.","width":87},{"text":"I guess thats why I don't need it.","width":81},{"text":"","width":260},{"text":"This is what happens when I'm tired from grading exams.","width":128},{"text":"","width":236},{"text":"We figure out the balance factor.","width":101},{"text":"If the balance factor is positive 2 what kind of rotation do I need to do?","width":256},{"text":"","width":287},{"text":"Some kind of right rotation right?","width":91},{"text":"I know that the inbalance occurs on the left.","width":192},{"text":"","width":64},{"text":"","width":194},{"text":"Based on the description of these I should be invoking rebalance left.","width":307},{"text":"Rebalance left which fixes an inbalance caused on the left side of a given node.","width":284},{"text":"","width":71},{"text":"If I know the inbalance occurs to the left","width":136},{"text":"Its balance factor is going to be positive","width":107},{"text":"So i'm gonna call rebalance","width":86},{"text":"","width":651},{"text":"Otherwise if the balance is negative 2","width":192},{"text":"I know the inbalance occured on the right so I'm gonna call rebalance_right().","width":210},{"text":"","width":657},{"text":"And then","width":74},{"text":"","width":116},{"text":"Put that there","width":58},{"text":"","width":237},{"text":"I forgot what my own helper functions were doing","width":97},{"text":"","width":186},{"text":"It should never be","width":65},{"text":"","width":162},{"text":"Obviously it would break is the answer.","width":141},{"text":"And our goal here is to ensure that our balance factors are never any greater than 1.","width":293},{"text":"So that when we insert a node the only thing","width":186},{"text":"","width":27},{"text":"the only value it could be if its inbalanced is 2","width":171},{"text":"","width":31},{"text":"Absolute value is 2.","width":97},{"text":"","width":1347},{"text":"So umm","width":81},{"text":"","width":71},{"text":"You could pass in there by a","width":163},{"text":"I wouldn't pass it in by unique pointer reference because I don't plan on changing it.","width":287},{"text":"","width":40},{"text":"So I could pass it in by a const unique pointer reference and that would be fine.","width":217},{"text":"","width":56},{"text":"The reason I choose not to is generally when I look at these signatures","width":216},{"text":"and I see its a node*","width":128},{"text":"That means no ownership","width":75},{"text":"Thats not telling me anything about the ownership.","width":111},{"text":"I'm just looking at it. I'm just query it for values.","width":135},{"text":"If I see a unique pointer reference in a function signature","width":287},{"text":"I know that that means they may change this.","width":177},{"text":"They care about the ownership semantics.","width":93},{"text":"They care about making this point at other things or something.","width":181},{"text":"If I'm just passing down a node* I know all I'm doing is looking.","width":143},{"text":"","width":42},{"text":"Thats kind of ","width":95},{"text":"","width":27},{"text":"Thats the way I pick, but you could arbitrarily say that thats a const","width":268},{"text":" unique pointer node reference or something and that would also be fine.","width":222},{"text":"","width":166},{"text":"So this rebalance function looks to see which side the inbalance is on","width":245},{"text":"and then those helper functions will actually do the rotation","width":224},{"text":"and then we update our height afterwards because we may have rotated nodes so we fix our height at the end of it.","width":334},{"text":"","width":128},{"text":"We'll start with actually the rotations themselves next time.","width":234},{"text":"","width":7680}]