[{"text":"so map private uses copy on write","width":726},{"text":"for each uh frame of memory, so for each four kilobyte block","width":357},{"text":"behind the scenes it will copy it only when you attempt to write it","width":229},{"text":"and that copy is then just like any regular memory that you might have made on the heap","width":326},{"text":"once your program is gone, it's gone, there's no store of it","width":290},{"text":"it's also private toward a particular process","width":196},{"text":"map shared on the other hand is useful when we're going to want to fork a process","width":651},{"text":"and then our child and the parent will see the same physical piece of memory","width":528},{"text":"so any changes that the child does, the parent will see, to that frame of memory","width":306},{"text":"also, it will copy the contents back to the file that we opened","width":553},{"text":"so, it's doubly shared, right","width":124},{"text":"it says um","width":278},{"text":"that i'm going to use this for interprocess communication between my child and my parent","width":483},{"text":"and also i'm going to copy ","width":527},{"text":"back to the file","width":512},{"text":"right so this is two useful ways of using mmap ","width":271},{"text":"so most of the time you're probably going to want to say ","width":117},{"text":"ok, i want to see it shared","width":275},{"text":"so early versions of mmap did just that","width":135},{"text":"but we realized that actually maybe sometimes we want to be able to share things with a child and the parent process and not actually have any file on the disk at all","width":778},{"text":"we just want to set up some physical ram that it could be seen inside two processes","width":466},{"text":"and uh if you want to do that you can, you just need to pass in ","width":368},{"text":"map anonymous ","width":124},{"text":"by the way if you actually want to work on os x, you need to use map","width":450},{"text":"they are synonymous but so this means 'hey i don't actually have a file i just want to mess with virtual memory so that i've got a page of memory or more that i can share between a child and a parent process'","width":1270},{"text":"what can i do with that, well i might want to simple write values in","width":275},{"text":"you can also share a semaphore ","width":254},{"text":"remember semaphores? these counting things where i can increment the count","width":372},{"text":"if i attempt to decrement the count, it might block if my count attempts to go beneath 0? ","width":470},{"text":"so now i can actually use this to synchronize between two different processes","width":405},{"text":"we're not gonna go into the details of how to set up a semaphore inside shared memory but a google search ","width":438},{"text":"thanks to the world wide web","width":319},{"text":"will let you do that","width":72},{"text":"right, we can find easy example source code to do that, so that's beyond cs 241. just hey, back of your mind, know that this exists should you ever need to do this ","width":698},{"text":"okay so let's have a look at some example code","width":350},{"text":"how can we use mmap well we opened a file descriptor ","width":372},{"text":"okay so let's open a particular file called \"alice\" ","width":192},{"text":"i'm going to open it as read only","width":354},{"text":"and then i call mmap ","width":80},{"text":"so i'm going to map today one page 4096 bytes and then we can talk about how we want to use these bytes","width":709},{"text":"and uh we've got three little bitwise flags that we or together ","width":302},{"text":"so there's proc read, proc write, and caught exec","width":343},{"text":"yes! i want to execute my files! my bytes1","width":316},{"text":"off with the head","width":91},{"text":"said the queen","width":215},{"text":"what's the purpose of these bits?","width":313},{"text":"do they affect the file on disk? ","width":353},{"text":"no, remember with virtual memory we actually declare how our process can use different pieces of addresses","width":566},{"text":"yes we can have some addresses that don't map to any piece of physical ram ","width":283},{"text":"other addresses might map to some physical ram that we're sharing with hundreds of other processes","width":363},{"text":"for example, lib.c, the c library","width":212},{"text":"lots and lots of processes want to use the code inside that so rather than having multiple copies inside our physical ram, we just have one copy and have lots of mappings to that","width":724},{"text":"for that physical memory to be secure then ","width":159},{"text":"we better make sure that all of our different processes can only read it","width":470},{"text":"also, we can have another layer of security to say 'actually we're not going to let the cpu execute opcodes from arbitrary pieces of memory' ","width":672},{"text":"so we can actually say that our memory is executable or not ","width":538},{"text":"so we're not going to put any executable code in today, we're not trying to build say a virtual machine that's going to compile source code into executable bytes today","width":628},{"text":"we just want to have some memory that's read or write","width":236},{"text":"okay ","width":117},{"text":"so i've got two examples here ","width":248},{"text":"one where i've got the text of alice with the looking glass ","width":253},{"text":"another one where i've got the text of justin bieber's best lyrics ","width":323},{"text":"it's a very short file","width":290},{"text":"and you can tell me which one of these will work and which one of them won't","width":2544},{"text":"and why","width":115},{"text":"so there's a clue ","width":40},{"text":"one of these will work one of these won't","width":340},{"text":"yes!","width":476},{"text":"yes! right! so","width":133},{"text":"we've put some options to say that we want to write to it ","width":332},{"text":"","width":2},{"text":"and in fact here we are trying later to write to it","width":131},{"text":"look i'm just using a pointer into memory and i'm trying to write the first two lines of the jabberwockee poem","width":585},{"text":"but i said that my mapping should be shared ","width":199},{"text":"in other words changes i make to my virtual memory ","width":341},{"text":"should eventually be pushed back into the file ","width":346},{"text":"and if i try to do this","width":302},{"text":"here's what will happen","width":51},{"text":"mmap will fial","width":82},{"text":"and in fact i'll get back the address","width":308},{"text":"negative one","width":52},{"text":"so you'll often see code that compares the pointer to -1 ","width":347},{"text":"if it is, then we know that mmap failed ","width":192}]