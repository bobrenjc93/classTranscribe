[{"text":"So what about this?","width":206},{"text":"We've heard about starvation before where a process never gets to complete it's uh, it never gets to make any significant progress.","width":713},{"text":"Which scheduler could lead to starvation and how?","width":263},{"text":"Maybe there's more than one correct answer.","width":227},{"text":"Don't tell me know; tell your neighbors and see if you agree.","width":3496},{"text":"Okay, so uh, a student has let me know that my calculations are suspect so I probably am off by a quarter millisecond or so.","width":823},{"text":"So I apologize for that.","width":185},{"text":"Silly  numerical error.","width":92},{"text":"Okay so which ones can suffer from starvation?","width":461},{"text":"The second fourth and fifth.","width":66},{"text":"Shortest job first, yeah, so if you're getting text messages continuously you might never get to your chemistry homework.","width":1069},{"text":"So next time you don't fill out your chemistry homework, or CS 241 HW, keep sending yourself text messages.","width":259},{"text":"They're nice and short, you'll do them straight away.","width":170},{"text":"So shortest job first; we can set up a starvation by keep making short jobs and we'd never get to the long job.","width":590},{"text":"The other possibility is pre-emptive shortest job first.","width":306},{"text":"So again uhm I would never get to my long job if I keep submitting short jobs.","width":436},{"text":"And preemptive priority.","width":122},{"text":"Same idea","width":105},{"text":"If I keep having an urgent thing to do","width":213},{"text":"I might never get to schedule my low priority items","width":779},{"text":"Is there a problem? Yeah.","width":150},{"text":"We have to choose a tradeoff.","width":87},{"text":"We have to decide what we mean by fair.","width":211},{"text":"So which schedulers are appropriate for batch jobs?","width":235},{"text":"Of course the answer is It depends!","width":233},{"text":"By batch jobs we mean aren't interactive which are typically run for long periods of time without user interaction.","width":468},{"text":"They have all the data they want to process","width":92},{"text":"Maybe stuff out of files or network","width":252},{"text":"Do some analysis on that data","width":233},{"text":"So we might care about say earliest job finishing first or shortest job finishing first","width":330},{"text":"in which case we might choose a shortest job first scheduler","width":208},{"text":"We might care about seeing the results of all of our jobs","width":343},{"text":"And we are prepared to wait so we might choose round robin","width":438},{"text":"Uhm","width":109},{"text":"The other possibility is to, in a real system","width":422},{"text":"Suppose your job crashes or runs forever, has an infinite loop","width":670},{"text":"If there is no preemption","width":131},{"text":"if we don't forcibly remove that job from the CPU everything gets backed up","width":540},{"text":"So we have to careful if we're not going to preemptive running jobs","width":372},{"text":"Right","width":36},{"text":"So there isn't a simple answer for this batch jobs","width":190},{"text":"It depends on what your criteria are","width":187},{"text":"So what scheduler does Linux use?","width":90},{"text":"I mentioned it last lecture","width":261},{"text":"Yes! The completely fair scheduler.","width":203},{"text":"Which is a little bit of an oversell","width":620},{"text":"Alright so it's not completely fair","width":164},{"text":"But it is similar to round robin where we are prepared to interrupt a process","width":424},{"text":"Every 10 milliseconds or so","width":412},{"text":"But we're prepared to give an extended period of time to jobs which don't use all of their time quantum","width":348},{"text":"So for interactive programs, desktop programs, UI programs","width":351},{"text":"These tend to have very bursty needs of the CPU ","width":185},{"text":"Like OH QUICK the user touched something","width":101},{"text":"OH QUICK I need to read data on disk","width":112},{"text":"And they won't use it for 10 milliseconds","width":140},{"text":"They will only require a tiny bit of CPU","width":292},{"text":"Processing before we end up say sending it an event to the system","width":275},{"text":"Update the screen","width":43},{"text":"And we're done","width":33},{"text":"And we wait for the next user event","width":110},{"text":"So the completely fair scheduler says we'll remember that these processes didn't require a lot of CPU in the past","width":427},{"text":"So we'll prepare to give it a little bit of extended CPU in the immediate future","width":319},{"text":"So we'll try to make the system as responsible as possible","width":363},{"text":"K here's a classic problem in scheduling","width":142},{"text":"It's known as the convoy effect","width":271},{"text":"And we see this with the first come first served","width":403},{"text":"Scheduler","width":332},{"text":"And you can imagine a real system where I've got jobs which are very strongly CPU bound","width":388},{"text":"And other jobs other processes which are IO bound","width":553},{"text":"And if you branch in the queue going this way by first come first serve","width":522},{"text":"I might have a big job which comes","width":245},{"text":"I illustrate by drawing it a large size","width":255},{"text":"It's going to take a lot of CPU time to run","width":230},{"text":"And behind it I've got loads of little jobs which","width":335},{"text":"They don't take much CPU but they take some IO to do","width":270},{"text":"And then the classic description of the convoy effect","width":129},{"text":"Is we imagine this process uses the CPU for a long time","width":360},{"text":"Then just a little bit of IO","width":86},{"text":"And then repeats","width":647},{"text":"And here's the problem.","width":64},{"text":"These are the processes that start after this CPU heavy process","width":483},{"text":"They can't use the disk","width":256},{"text":"Or the IO","width":100},{"text":"They only need a tiny amount of CPU","width":162},{"text":"It's like going to McDonalds to grab some little ketchup packets or something","width":242},{"text":"And someone there is taking all the space","width":154},{"text":"\"I just need a little ketchup packet\"","width":187},{"text":"\"I'M SORRY WAIT YOUR TURN\"","width":216},{"text":"And so we have poor use of uh IO","width":333},{"text":"CPU usage is great. it uses the CPU 100% of the time","width":199},{"text":"Very efficient","width":101},{"text":"But these other jobs are stuck and uh","width":325},{"text":"So our disk utilization is pretty poor","width":189},{"text":"We could have had a better choice if we used something like round robin","width":284},{"text":"Where we let these little jobs jump in and let them use the CPU for small amounts of time","width":302},{"text":"And then they can actually get on with their disk IO","width":368},{"text":"Right","width":32},{"text":"The questions about threads","width":163},{"text":"I mean uh scheduling","width":256}]