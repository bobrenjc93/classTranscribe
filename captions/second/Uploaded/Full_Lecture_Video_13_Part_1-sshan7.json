[{"text":"you can think of this buffer as something that we call a ring buffer","width":720},{"text":"where it's not you've kind of taken the two ends of the buffer that we're using and connected them on the other side","width":567},{"text":"so now i need to be able to put things in and take them out and i could just chase my own tail forever and never worry about running off the end","width":691},{"text":"so conceptually theres a number of things that i have to have to make this work","width":382},{"text":"so if i'm the producer what do i need to know","width":558},{"text":"what does the producer need to know","width":309},{"text":"the producer is putting things in","width":404},{"text":"it needs to be able to hit that","width":71},{"text":"so the producer","width":167},{"text":"what i filled up my ring","width":193},{"text":"ok so lets say im starting from nothing and the producer wants to put something in","width":295},{"text":"what's the first thing it needs to know","width":204},{"text":"where to put it!","width":61},{"text":"okay so let's have a pointer in here that says okay in","width":457},{"text":"im going to put it in there","width":83},{"text":"i just started some place random","width":111},{"text":"if i was smart my underlying data structure might have started right there","width":360},{"text":"yeah i wouldve wrapped the two ends","width":140},{"text":"okay so now that the producer has put something in","width":283},{"text":"what does the producer have to do","width":395},{"text":"it can't n isn't write anymore","width":181},{"text":"right you have to increment in","width":180},{"text":"to now point here","width":165},{"text":"that's where my next one would be","width":238},{"text":"so that's my producer","width":245},{"text":"what did my consumer need to know","width":239},{"text":"ill tell you it's out","width":206},{"text":"a pointer to what","width":264},{"text":"the first one that i want to take out","width":124},{"text":"so in this case it's here","width":100},{"text":"i'll make the consumer blue","width":466},{"text":"and as the consumer puts things in here, it's gonna slowly increment in","width":514},{"text":"to be there","width":190},{"text":"and as the consumer takes things out","width":460},{"text":"it will","width":98},{"text":"delete them out of the queue, out of the ring buffer althoguh i guess it really doens't matter and that's the next one to take out","width":614},{"text":"so there are two things i have to be careful about","width":104},{"text":"whats the first thing that you said before","width":131},{"text":"that i have to make sure that i dont what?","width":287},{"text":"i want to make sure that i don't overwrite data that hasn't been read yet","width":318},{"text":"my writers write, my producer is producing","width":227},{"text":"this is a big ring buffer","width":145},{"text":"i should've a smaller one","width":105},{"text":"okay i'm putting things in","width":186},{"text":"do i have to stop yet? no","width":190},{"text":"i can stop here","width":101},{"text":"but","width":118},{"text":"can i keep going?","width":113},{"text":"no","width":43},{"text":"i have to make sure i dont whoops that's in","width":189},{"text":"i have to make sure i dont overflow my buffers","width":475},{"text":"and now for the output","width":293},{"text":"for the consumer the consumer is going to start taking things out","width":552},{"text":"let's say it gets here","width":132},{"text":"it can still take that out","width":156},{"text":"but now it takes that last one out","width":378},{"text":"and now my out is here","width":121},{"text":"can it take anything out anymore?","width":155},{"text":"no","width":42},{"text":"if i allowed, if my program allowed the consumer to take something out at this point i would call that underflow","width":449},{"text":"overflow means that the producer produces too much and overwrites good data","width":295},{"text":"underflow means that my consumer is trying to take out something that's not there","width":313},{"text":"so those are two things we wnat to make sure don't happen we we're implementing a ring buffer","width":391},{"text":"so theres no underflow, and there's no overflow","width":406},{"text":"now i know you guys have done semaphores and you guys have done condition variables","width":280},{"text":"we're going to implement a solution for a ring buffer","width":192},{"text":"and of course we have a number of properties that we want to be able to have true for this solution and","width":385},{"text":"to start with we dont want any particular busy waiting","width":258},{"text":"so we want to make sure that our semaphores and condition variables are set up correctly","width":347},{"text":"and we dont have to have any kind of deadlock","width":244},{"text":"i know you guys haven't talked specifically about what deadlock means, but at a minimum it's going to mean that someone can't move forward","width":567},{"text":"so we want to be able to look at both of these things","width":199},{"text":"we want to implement a solution that can do that","width":320},{"text":"our first solution im going to give you my basic solution","width":463},{"text":"and from there","width":212},{"text":"i've been told you guys like to sit down and come up with your own solutions","width":2167},{"text":"so i'm going to give you a basic first start","width":212},{"text":"so certainly whats the first thing that we need in our globals and initilazliation variables","width":492},{"text":"what are we trying to manage","width":296},{"text":"our buffer! right?","width":95},{"text":"so we need a buffer","width":126},{"text":"so i'm going to have a ","width":524},{"text":"and im gonna say im just going to have a 16 alright","width":391},{"text":"and then i need our two variables. what were the two variables i said we needed?","width":400},{"text":"in and out","width":82},{"text":"so since they are just pointers into my data structure","width":303},{"text":"they can just be integers","width":130},{"text":"im going to have an integer in and and integer out","width":483},{"text":"where should they both start","width":512},{"text":"they start at the same place? they start at diferent places?","width":138},{"text":"they start at 0?","width":71},{"text":"what should we do","width":169},{"text":"0","width":155},{"text":"we're going to initialize both in and out to be 0","width":578},{"text":"so i'm going to give you a basic in queue and i want you to tell me if this works","width":236},{"text":"so i'm going to say for my enqueue im goign to put something in","width":798},{"text":"im going to put my value in whatever the in value is and increment in","width":562},{"text":"and my dequeue is im going to say that i have some result","width":341},{"text":"im going to save out my result becasue i want to use it later","width":192}]