[{"text":"This sounds really easy when I'm presenting it in lecture.","width":497},{"text":"Writing malloc is a rite of passage","width":388},{"text":"Meaning that you too can have gray hair and fuzzled eyes and look just like me...no","width":472},{"text":"What I mean is that it's tricky because now we have to start dealing with pointer arithmatic","width":432},{"text":"Now we have to start dealing with multiple pointers","width":147},{"text":"A little error like writing pa instead of pb or adding instead of subtracting can bite you big time","width":623},{"text":"And worse it won't bite you in an obvious way","width":244},{"text":"For example suppose that you didn't actually add enough bites","width":310},{"text":"You didn't add 20. You added a smaller number.","width":237},{"text":"Then the user program just overwrites your pointer values, KABOOM!","width":263},{"text":"Of course it crashes","width":94},{"text":"Later when someone calls free and you try to read these values and these values are just garbage","width":380},{"text":"Like what happened to my values!","width":134},{"text":"Why aren't my values correct?","width":167},{"text":"The only thing that can bite you is...","width":258},{"text":"sizeof","width":204},{"text":"So remember if you've got a struct for example","width":169},{"text":"That you've set up to hold these values","width":183},{"text":"Or an array","width":155},{"text":"The sizeof an object or struct is very different from the sizeof a pointer to something","width":661},{"text":"Or sizeof a pointer to an array is different from the sizeof an array","width":309},{"text":"So one little character here can really really bite you","width":269},{"text":"So my advice is to get started early when we put this out and to program slower than you've ever programmed before","width":638},{"text":"Make each line a work of art that you would trust your life to","width":454},{"text":"It still won't work, but at least you've tried really really hard","width":271},{"text":"Yes Question","width":458},{"text":"sizeof doesn't work like that","width":74},{"text":"sizeof is a compiler thing that runs at compile time","width":245},{"text":"so it uses the type ok so sizeof says \"oh look I'm looking at a pointer\"","width":312},{"text":"Pointers on my machine are 4 bytes or 8 bytes","width":222},{"text":"Ok it does not do anything at run time","width":307},{"text":"Alright how are we doing for time","width":264},{"text":"Ok","width":79},{"text":"We will finish with something really really easy. calloc and realloc","width":329},{"text":"calloc and realloc easy after you've done malloc","width":424},{"text":"These are easy. You can implement them in terms of malloc and free","width":570},{"text":"So realloc says \"guess what...I need some more space\"","width":431},{"text":"Here's a pointer that I previously got from my malloc call or calloc call","width":293},{"text":"Basically a heap pointer, a pointer to some memory. And here's how much memory I need now on the...","width":367},{"text":"I've decided that my array needs to be larger","width":205},{"text":"Realloc will do that for you","width":202},{"text":"But be careful, here's how realloc is supposed to work","width":158},{"text":"It says \"look, I'll try to find some bigger space.","width":152},{"text":"If you're asking for more space, then if necessary I will copy everything across and return a pointer back to you","width":487},{"text":"If it fails however, it returns NULL","width":195},{"text":"So be careful when using realloc. Always check it's return value.","width":250},{"text":"Because it may have decided to shuffle things around for you.","width":220},{"text":"I couldn't extend this. I have something else using the memory just next to you.","width":398},{"text":"So I had to allocate a new block.","width":150},{"text":"But you can implement realloc directly just using malloc and free","width":315},{"text":"Calloc","width":273},{"text":"Calloc is very similar to malloc","width":487},{"text":"What calloc does is it zeroes memory","width":354},{"text":"So it's a bit slower than malloc","width":258},{"text":"Also you give it 2 parameters","width":221},{"text":"You say this is my element size and this is the number of elements","width":290},{"text":"And so the amount of memory it's going to allocate is size times number","width":301},{"text":"Why somebody thought calloc needed two arguments, I have no idea","width":236},{"text":"They should have just made it with just a single argument","width":163},{"text":"The first thing it does just multiply these two numbers together, that's it","width":266},{"text":"Except it has to do it the hard way because you could get integer overflow","width":343},{"text":"But anyway, calloc is essentially malloc plus it zeroes the memory","width":229},{"text":"Fastest way to zero memory is to use memset","width":527},{"text":"And we are out of time. Yes! And with that it's 11:50. Have a wonderful week. I will be going down to the lab now.","width":435},{"text":"After I've answered questions incase people want to help setup the android ndk","width":448}]