[{"text":"called TLB","width":1886},{"text":"so our processes rarely need to access page frames in a completely chaotic, random manner","width":609},{"text":"most of the time, if you recently accessed a particular page in memory.","width":360},{"text":"guess what! in the next few nanoseconds or microseconds, youll likely want to access that again","width":449},{"text":"so lets cache the result","width":124},{"text":"lets cache the result of all the lookups that we're doing","width":341},{"text":"on the off chance that we'll need it again in the next few nanoseconds","width":465},{"text":"as thats the purpose of the TLB","width":231},{"text":"its an associative cache","width":393},{"text":"if you have a query about which physical frame you want for a particular page number","width":563},{"text":"then if youre lucky, we've already calculated that in the recent past and we still got the result in the TLB","width":700},{"text":"in fact, TLB is designed so that 99% of the time, we have a cache hit","width":492},{"text":"the result IS in the TLB","width":288},{"text":"one thing to note about the TLB, we do this in parallel","width":292},{"text":"this is hardware. so in trying to figure out what physical frame we want to go to, we ask the TLB at the same time as trying to start this other lookup through the multiple page tables","width":1196},{"text":"and whoever gives this answer fastest, wins","width":294},{"text":"because remember, we're using this everytime we want to talk to memory","width":299},{"text":"so it is a critical piece of CPU performance","width":546},{"text":"ok, questions at this point?","width":190},{"text":"yes","width":830},{"text":"okay, so uhhhh let me give you an anology and then i'll try to do as it as the concept itself","width":882},{"text":"its bit a like this:","width":206},{"text":"suppose i wanted to go from a phone number to a student name","width":327},{"text":"so I use the first few digits of the phone number to go to a particular filling cabinet, so the \"217's\" im all gonna put in this particular filing cabinet. and the 604s in the other cabinet","width":1108},{"text":"so i start off with ","width":387},{"text":"the top most digits (000 to 999)","width":412},{"text":"but i wouldnt have the actual entries inside that filing cabinet, this should tell me which other filing cabinet i should go to for those entries","width":664},{"text":"so its...","width":152},{"text":"and it could be that some of these are empty, we dont have anybody with a 555","width":350},{"text":"filing.. uh phone number","width":230},{"text":"okay?","width":294},{"text":"so it will be a bit like this ","width":282},{"text":"we'll get the first result and we'll have our first table","width":577},{"text":"and we'll use the ","width":276},{"text":"the highest bits ","width":232},{"text":"but we've shifted them down... so this is just kind of pseudo code","width":252},{"text":"and this tells us, where the next table is","width":341},{"text":"so if you like, its a pointer to another array","width":202},{"text":"ok result 1","width":342},{"text":"and we'll use the middle bits as a number inside that table","width":569},{"text":"and that gives us finally our frame","width":168},{"text":"and then we just need to multiply or shift it and then add the offset ","width":354},{"text":"so we dont know.. so theres multiple ones of these middle tables","width":307},{"text":"and they correspond to different entries in the whole address space","width":307},{"text":"so if you think about your process. \"OKAY the stacks at the top. The heaps near the bottom. and the very bottom is the program code\"","width":519},{"text":"so you might find that you might actually got three entries for example, in your very first table. one of the very memory addresses and a couple for a the lowest memory addresses. nothing in the middle","width":1079},{"text":"yes. yes it skips all of these lookups","width":705},{"text":"itll give us the frame number","width":478},{"text":"no because the TLB is part of the CPU","width":436},{"text":"it doesnt need to go back to main memory. its a tiny piece of associative cache","width":250},{"text":"its a expensive, its fast, and it tries to do it if possible within one instruction","width":541},{"text":"because without this, the whole CPU, it doesnt matter we're gonna add the most played numbers together.","width":334},{"text":"as soon as step outside trying to use registers, we have to use the TLB","width":1052},{"text":"its essentially, its stored in these pairs","width":161},{"text":"a page to ","width":128},{"text":"...","width":150},{"text":"frame number","width":307},{"text":"and i dont want to go too much further, because guess what, we can spend a whole semester talking bout TLB's if we were hardware people","width":584},{"text":"it turns out that on real hardware, we have TLBs associated with each level of cache. we have a TLB associated with table lookups and data lookups and TLBs associated with CPU instructions etc etc etc","width":825},{"text":"this is how intel figures out to make very very fast chips by optimizing the size and performance characteristics of these TLBS that youll find on the cache","width":785},{"text":"and you gotta decide as well.. how do you.. do you want to share these between different CPUs","width":457},{"text":"theres a lot more detail than we're gonna think about today","width":601},{"text":"I wanna comment on one important idea though","width":267},{"text":"we've talked context switch when we get our CPU do something else, when we want to take the CPU state and save it","width":576}]