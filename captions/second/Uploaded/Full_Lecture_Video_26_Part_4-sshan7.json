[{"text":"Okay so we talk about this classically in terms of processes","width":460},{"text":"What a thread really is just a thread of execution","width":205},{"text":"Uh everything we've talked about processes applies to threads","width":330},{"text":"And uh you can actually set the uh scheduling if you wish uh in the pthread library","width":593},{"text":"And so for example there's a pthread call that allows you to say hey I want to use round robin scheduler","width":334},{"text":"Or hey I want to use first come first served","width":299},{"text":"So it's possible to set that as you create each thread","width":508},{"text":"Bear in mind","width":83},{"text":"If you set them first come first served","width":368},{"text":"Be careful","width":208},{"text":"because if a thread never finishes","width":839},{"text":"All the other threads","width":504},{"text":"wait forever","width":172},{"text":"wait an infinite amount of time","width":237},{"text":"Because we did first come first serve","width":113},{"text":"and you are at the front of the queue","width":105},{"text":"And you're saying","width":45},{"text":"Hah I'm going to take up this server forever","width":248},{"text":"MUAHAHAHAAH","width":115},{"text":"So that's just a little gotcha if you truly try to set the scheduling policy","width":522},{"text":"Uh so another quick tidbit there's this little command called nice","width":381},{"text":"People would like their commands to be nice","width":144},{"text":"So what you can do is Linux changed the priority of your process by nice-ing it","width":575},{"text":"And uh mere mortals, non root people, can increase their priority number which decreases their priority","width":686},{"text":"Which makes it less important","width":299},{"text":"And so you can say Okay I have a long running job","width":188},{"text":"Its going to take a lot of CPU","width":81},{"text":"But only run if there's nothing else to do","width":127},{"text":"In which case you might call nice","width":141},{"text":"As part of that","width":132},{"text":"If you are root you can nice the other way","width":169},{"text":"You can actually make things more important and higher priority","width":344},{"text":"But you probably won't need nice unless you're trying to run uh background computational jobs","width":315},{"text":"And try to make it so they don't interfere with your UI","width":262},{"text":"So that's enough about scheduling","width":124},{"text":"Let's have a look at page tables","width":293},{"text":"So we've been playing a lot with TCP packets","width":235},{"text":"And uhm most of the internet uses TCP","width":275},{"text":"However uh we did mention there's another thing called UDP","width":537},{"text":"Which is packet based","width":77},{"text":"It's not a stream","width":65},{"text":"We simply send our telegraph or datagram off and hope it gets to the other side","width":490},{"text":"Let's have a quick look how we could make a UDP server","width":206},{"text":"And see how it's different from a TCP server","width":223},{"text":"Okay so uhm if we want to fill up a UDP server","width":406},{"text":"Listen on a particular port","width":211},{"text":"We'll set up our hints as usual","width":93},{"text":"Oh good we've set it to zero","width":175},{"text":"And today we want to use IPv6","width":203},{"text":"128 bit addressing","width":151},{"text":"So how do we specify that","width":112},{"text":"Well for our family we don't want address family INET","width":316},{"text":"We want INET6 for our socket","width":172},{"text":"","width":2},{"text":"We don't want sockstream","width":67},{"text":"We're not trying to make a streaming interface here","width":162},{"text":"We just want to send these little datagrams","width":159},{"text":"So we have SOCK_DGRAM","width":302},{"text":"And we want to listen on a port","width":136},{"text":"We don't want to actually send something anywhere","width":256},{"text":"We're trying to make a passive socket","width":134},{"text":"So for our flags here I need AI_PASSIVE","width":819},{"text":"Okay so we set this up","width":72},{"text":"We can call get address info as usual","width":282},{"text":"I don't need to connect anywhere","width":175},{"text":"I want to connect to port 300","width":313},{"text":"And we'll get our result","width":124},{"text":"Let's assume that works","width":122},{"text":"So well check the return value of this","width":175},{"text":"Here's how we can set things up","width":79},{"text":"It just takes two calls","width":202},{"text":"Yes we need to make a socket as usual","width":201},{"text":"Remember that represents our kernel object","width":155},{"text":"The thing that is going to talk about our ability to the outside world","width":293},{"text":"And we pass in everything we get from our result object","width":205},{"text":"Note the hints","width":128},{"text":"Yes we want to continue to a particular port","width":141},{"text":"So we need to call bind on that socket","width":447},{"text":"But then that's it","width":76},{"text":"There's no queue to make","width":156},{"text":"There's no exec to do","width":244},{"text":"We just wait for packets to appear","width":201},{"text":"How do I do that?","width":184},{"text":"I call recvfrom","width":407},{"text":"And when you do this","width":110},{"text":"Not only can you get the data that someone set you","width":202},{"text":"So let's pass in a buffer and how big our buffer is","width":228},{"text":"You can also find out who sent it","width":111},{"text":"So that's the purpose of this structure here","width":284},{"text":"And we pass in the size of this structure as the last argument","width":256}]