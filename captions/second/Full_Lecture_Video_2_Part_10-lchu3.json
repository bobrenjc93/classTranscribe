[{"text":"P is a pointer to an integer, * p would be an inter like assigned to that and that's fine.","width":320},{"text":"There is no type mismatch there.","width":64},{"text":"P equal to nullptr and that's fine. I can always initialize any pointer typed nullptr and that's fine.","width":256},{"text":"*p equals to 87, again, I just assigned the thing at the end of p to an integer, which is an integer to everything. All the types checked out and that's fine.","width":512},{"text":"What happen if I try to run this?","width":128},{"text":"So, I got three great answers here.","width":512},{"text":"You know, that thing, will seg-fault, and you didn't initialize it. ","width":320},{"text":"Yes, all three things are true. It might seg-fault, it might do something. It definitely not doing  what you think it does.","width":512},{"text":"Okay? Because we fail to initialize the pointer just like that integers gonna have some garbage value that integer n we just said int n semicolon and try to print it out. Just like that gonna print out some random crabs. If I say int *p, it also gonna have some random crabs in it, which happen to be a val at memory location. Just an integer at memory location. Just an integer. Just tell you some num and where to go, right? ","width":1408},{"text":" So *p is gonna try and faithfully go to that location that you told to go to and you know like a lambing, it gonna fall flip potentially.","width":576},{"text":"It might set-fault. If it happens to be pointing some memory that actually exists inside your program, it might modify the value further down and the stack frame that you are not even in. ","width":768},{"text":"And do something even more crazy than that but it’s definitely undefined behavior and undefined behaviors always gonna be called runtime errors. ","width":448},{"text":"Because, again, it’s not a compile error. So it has to be a runtime error. ","width":384},{"text":"The error occurs here, at the very first use, it also means there is also an error here, because you cannot assign int to null. ","width":832},{"text":"It assign to memory location refer to by null pointer. Because it never ever have a memory for your program to access.","width":512},{"text":"It should always. I won’t make a guarantee. But it should. ","width":320},{"text":"Null pointer is never act, never valid for dereference. ","width":192},{"text":"Okay, we will start here next time. ","width":576},{"text":"A compile error happen because, right, like this type is not the same type as that. So the compiler error happens. ","width":16000}]