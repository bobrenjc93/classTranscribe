[{"text":"on empty","width":896},{"text":"full tres","width":128},{"text":"have to make sure that they are full as well","width":320},{"text":"binary trees I guess, whatever","width":384},{"text":"I could add if I have the left and the right existing but the left wasnt full, it just had one child then no thats not good. SO I want to make sure I'm clear and very very explicit","width":896},{"text":"technically you dont need that but I want to be very explicit in that both the left and the right in this recursive case when they existing","width":384},{"text":"must also be full","width":128},{"text":"okay","width":128},{"text":"that makes this definition go all the way down so if I have children those have to be full if those have children those have to be full","width":384},{"text":"and then ","width":128},{"text":"eventually you get to the case where they're empty in which case they're trivially full","width":192},{"text":"that makes sense?","width":384},{"text":"good","width":64},{"text":"alright moving on another definition these are all important definitions you do need to know them so this isn't","width":448},{"text":"just an exercise in playing with definitions these are actually important things","width":192},{"text":"a perfect n-ary tree of height h is a tree where every leaf is at height h and all internal nodes are full","width":704},{"text":"so what does it mean for an internal node to be full in that case what does that mean? Has all the children, right, good.","width":384},{"text":"so if you had a ternary tree, a perfect ternary tree has every internal node having three children only the ","width":448},{"text":"leave will have none","width":128},{"text":"okay","width":64},{"text":"and every leaf is at the same level h. What is a level?","width":320},{"text":"yeah distance from the root","width":128},{"text":"the root is at level zero, the next one is at level one, then level two level three, etc. its the same thing as the height","width":448},{"text":"it's just another way of saying it","width":64},{"text":"okay","width":64},{"text":"so again lets start off at pictures what is an example that is not have I drawn any perfect trees on this page?","width":896},{"text":"no","width":64},{"text":"right, how do you know that?","width":192},{"text":"they have children that are different levels I sad that all the leaves must be at the same level so okay","width":704},{"text":"so then","width":64},{"text":"that a perfect tree?","width":512},{"text":"yeah","width":64},{"text":"all the leaves are at that level and all internal nodes are completely full if I did that is that a perfect tree. no why not all the leaaves are at the same level. there exists an internal node that is not full. this guy. so this is perfect, but this is not","width":1728},{"text":"thats perfect, thats not","width":192},{"text":"thats not perfect either, but that is","width":192},{"text":"so","width":128},{"text":"what would the perfect tree of height -1 look like?","width":384},{"text":"you have aperfect tree of height -1","width":320},{"text":"vacuously true again","width":320},{"text":"every internal nodes, there are no internal nodes, every leaf node there are no leafs so its just true ","width":384},{"text":"right","width":64},{"text":"what is the perfect tree of height 0 look like","width":256},{"text":"so p(-1) looks like just blank","width":256},{"text":"p(0) where the subscript is the height looks like what? one node. p(1) looks like what?","width":576},{"text":"two children right good. p(2)","width":384},{"text":"this thing this is p(2)","width":256},{"text":"yeah","width":128},{"text":"and you can see how thats going to go. every time I add a new level I have to completely fill it. every internal node is forced to have two children so this is going to look like the biggestnumber of nodes I could possibly","width":960},{"text":"have in a tree of height h thats sort of important","width":320},{"text":"okay so okay","width":64},{"text":"lets write a definition for this so we're going to say that p(h) is a perfect n-ary tree with","width":832},{"text":"height","width":64},{"text":"h ","width":256},{"text":"then our recursive definition is going to be p(-1) is just empty","width":512},{"text":"our recursive definition p(h) is what?","width":576},{"text":"what must I have?","width":320},{"text":"root and a left and a right","width":320},{"text":"good I always have to have that; its a binary tree","width":64},{"text":"so I have to have a root a t(left) and a t(right)","width":384},{"text":"and what is my constraint going to be on the left and the right","width":384},{"text":"t(l) and t(r) are not empty. umm they could be empty","width":320},{"text":"in the case of h=0 thats okay","width":320},{"text":"must both be empty or both be not empty okay. they have to be empty or","width":576},{"text":"perfect","width":128},{"text":"yes","width":64},{"text":"they have to be and an empty tree is perfect. They just have to be perfect. the left and the right have to be perfect trees","width":576},{"text":"is that enough? just saying that they're perfect trees?","width":320},{"text":"eyyahahhhh","width":256},{"text":"I gotta take care of their height","width":192},{"text":"what if one was longer than the other?","width":64},{"text":"that's not perfect anymore right? if I have this case we know that this is not a perfect tree","width":576},{"text":"but","width":64},{"text":"that's a perfect tree, that's a perfect tree","width":192},{"text":"right","width":64},{"text":"but this the root the node the tree rooted at that node is not a perfect tree so I have to have the left and the right both be perfect trees of height = h-1","width":640},{"text":"that gets me what I need","width":192},{"text":"thats why we have this little h subscript so here t(l) and t(r)","width":512},{"text":"are","width":64},{"text":"p(h-1)","width":128},{"text":"and thats where our recursive definition comes in. they're both perfect trees, but they'e perfect trees of one smaller so I can define a new perfect tree based on two perfect trees of size one smaller","width":832},{"text":"and thus","width":128},{"text":"by induction I can get a tree of arbitrary size","width":128},{"text":"okay?","width":192},{"text":"make sense?","width":64},{"text":"good alright one more definition and I apologize for this this is sort of boring but hopefully I wanted you to see it in lecture and to tell me what these things are because you'll remember that better","width":896},{"text":"a complete n-ary tree is a perfect tree up to height h-1 what I mean by that I realize that's not very formal, what I mean by that is if you ignore","width":640},{"text":"the bottom level if you chopped of the bottom level you would have a perfect tree okay. at that bottom most level","width":576},{"text":"all of the children, all of the leaves at that bottom most level","width":256},{"text":"are pushed all the way to the left lets see the left right","width":384}]