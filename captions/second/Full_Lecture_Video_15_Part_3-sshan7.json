[{"text":"and note the key word here is finished","width":394},{"text":"it might be there's no two hundred and fifty six jobs left inside the queue","width":296},{"text":"but that doesn't mean that they're finished","width":64},{"text":"there still could be another thread actually working on it, actually generating this data still","width":394},{"text":"so you need in your program a concept that no no, these jobs really have finished at this level","width":394},{"text":"I've finally got all of those small bits created into larger chunks and so I'm ready to start working on the larger jobs","width":656},{"text":"now a little bit of thought will tell you that you could probably even improve upon that idea as well but then it's starts getting a little bit more complicated","width":547},{"text":"as to improving the efficiency of this, but this is a good start","width":266},{"text":"and I encourage you to do this iteratively and to use subversion so that when you got a working version","width":356},{"text":"either copy it or put it aside so that when you blow it up etc, you can at least go back to a best working version","width":555},{"text":"alright so that's our thoughts about mergesort and in working on this you're going to learn about thread pools and thinking about producers, consumers, and you'll also think about barriers","width":674},{"text":"you're stopping work from happening until something is finished","width":299},{"text":"so just like the malloc mp, this again is a rite of passage","width":270},{"text":"but it's an asynchronous rite of passage where malloc was about pointers","width":433},{"text":"this is about concurrency and parallelism ","width":318},{"text":"right so you'll be learning about barriers, thread pools and producer consumers in the next MP","width":404},{"text":"questions?","width":427},{"text":"no questions","width":113},{"text":"are you ready for unofficial?","width":283},{"text":"you can see I'm wearing green myself alright","width":384},{"text":"so that was a context switch","width":255},{"text":"we flip from one subject to another subject","width":213},{"text":"except in systems programming a context switch means something a bit more specific than just simply switching the conversation","width":521},{"text":"what we're talking about is the idea that our CPU needs to be arrested, needs to stop working on one particular process and it needs to change contexts so it can start work on another process","width":867},{"text":"we can have of course many more processes which are active than actual CPUs in our system","width":474},{"text":"but a CPU could only work on one thing at a time","width":187},{"text":"it's got a whole load of registers and one of those of course it the program counter as to hey what instructions should it work on next?","width":472},{"text":"and we've got this idea of virtual memory, that for a particular process, address blah blah blah blah corresponds to this piece of RAM where we've got this particular state in so that's all about one process","width":718},{"text":"so when we do a context switch, we've got to stop all this, we've got to suspend the current process","width":1187},{"text":"and somehow store the active state of the CPU","width":1449},{"text":"so if you take an operating systems class, you'll discover that this stuff is stored inside the process control block","width":746},{"text":"and all this is happening deep inside the operating system, inside the kernel, the very heart of the operating system","width":406},{"text":"that manages processes, that manages the actual deep resources of the system for each process","width":498},{"text":"so obviously we have to store the program counter and obviously you have to store all the data registers","width":264},{"text":"so that when we want to reinvigorate this process and bring it back to life","width":297},{"text":"we can preset the CPU and then click the pause button again and start it off and off it goes and the little process never knew that it was put on ice","width":661},{"text":"and we reuse the CPU for another process","width":417},{"text":"so we store the active state of the CPU","width":199},{"text":"right when do you think this happens?","width":413},{"text":"every tuesday?","width":552},{"text":"come on give me a guess, yes!","width":450},{"text":"okay what if I have more processes than I have number of cores","width":172},{"text":"and I want to switch my shamrock to a diff yeah","width":377},{"text":"yes? what about virtual memory?","width":695},{"text":"yes if you want to store things to disk, yeah so it happens when we want to switch one process to another ","width":425},{"text":"and that can happen if our first process blocks","width":526},{"text":"so for example, let's say you call open or you call read","width":373},{"text":"and your waiting for some bytes to arrive from the user typing something or from the bytes that arrive over the network or the bytes to arrive from the disk","width":599},{"text":"your process cannot continue","width":119},{"text":"let's say that you call pthread_join or you call waitpid()","width":449},{"text":"your process cannot execute anymore statements right? it's waiting for an event","width":381},{"text":"where's that happening? it's when your process is deep inside an operating system call","width":392},{"text":"waiting for an event to arrive","width":304},{"text":"now operating systems are not going to return immediately","width":134},{"text":"there's nothing more for your process to do right now","width":154},{"text":"so that'll be a good time to do a context switch","width":338},{"text":"alright your process is no longer able to run","width":219},{"text":"so it happened when a process blocks","width":294},{"text":"it can also happen, in some operating systems, when a little timer goes off","width":344},{"text":"I'm sorry you've had too much time with the ice cream, the ice cream being the CPU","width":341},{"text":"I'm going to give it to someone else now","width":356},{"text":"so this brings us to scheduling","width":459},{"text":"but if we were to look at this further you'd say okay, when a process has exhausted its time quanta","width":834},{"text":"so if I'm going to let you have the CPUs for 100 milliseconds and we notice that you've had it now for 100 milliseconds I'm sorry I'm going to give the CPU to someone else","width":752},{"text":"so it happened when the process blocks and when the process exhausts its time quantas is two examples for when we might see a context switch when we might give the CPU to a different process","width":761},{"text":"so what does it actually mean to give it a different process?","width":117},{"text":"okay we've talked about the CPU but of course another critical part of the process is the amazing thing called virtual memory","width":576},{"text":"and I want to spend a little bit of time today talking about virtual memory","width":192}]