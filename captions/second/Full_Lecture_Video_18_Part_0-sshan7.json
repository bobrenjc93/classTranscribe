[{"text":"I didn't get the memo that half the class would be in EOH i guess","width":345},{"text":"so for those of who are here, welcome, and congratulations for making it, also sent to myself","width":380},{"text":"right , so here's what we're gonna do today.","width":158},{"text":"we're gonna talk about virtual memory","width":161},{"text":"and uh, we're gonna look at how it is implemented in 32 bit systems and 64 bit systems, okay?","width":379},{"text":"so, we're fortunately not gonna need to design any hardware","width":362},{"text":"but we are gonna understand enough of how it works so that we can see some the advantages that it gives us","width":427},{"text":"and also see some of the considerations that you need","width":243},{"text":"when you scale from 32 bits to 64 bits","width":238},{"text":"right, so, just a, first of all, an important point","width":339},{"text":"is that uh","width":203},{"text":"let's see, if i got, if I've got 32 bit addressing","width":522},{"text":"if i got a 32 bit address to talk about","width":156},{"text":"then in 8 bit bytes then i need to oversee 4 bytes to store that pointer, yeah?","width":472},{"text":"and, if i got a 64 bit address, then just double that","width":449},{"text":"i need 8 bytes","width":142},{"text":"to represent","width":54},{"text":"a pointer or to represent an address","width":189},{"text":"so that's gonna come up again when we talk about storage relief","width":265},{"text":"because remember, for each of these entries, it depends on on whether we're talking about 32 bit system or 64 bit system","width":471},{"text":"okay, so, yeah, we're used to seeing this with pointers","width":190},{"text":"but w'ere gonna see this again in terms of our storage of addresses","width":424},{"text":"right, so, here's our first question","width":299},{"text":"so what's a page table?","width":128},{"text":"what's a page table!?","width":111},{"text":"who remembers?","width":117},{"text":"yes! thank you! yes, it's a way to translate a virtual address to a physical address","width":573},{"text":"you can imagine that if we didn't have page tables, well then we can have a HUGE associate map for EVERY possible virtual address and map it to an arbitrary physical address","width":741},{"text":"okay, how much space do we need for that map? well we'll need one entry for every possible physical address and each entry will take 4 or 8 bytes","width":741},{"text":"hold a moment, we have just invented a scheme that actually takes more memory than i actually have","width":299},{"text":"so we do better than that by dividing our memory up into pages ","width":314},{"text":"and we do this arbitrary mapping for not every possible byte but we have a map for every possible page not on memory ","width":728},{"text":"right so here's the basic idea, we got some virtual memory address","width":437},{"text":"and, we're trying to turn that into a physical address","width":725},{"text":"so on a 32 bit system we'll take a virtual memory address and conceptually split it into two parts","width":630},{"text":"these bits here are called the what? paging? paging? page number!","width":1387},{"text":"and what about these lowest bits?","width":180},{"text":"yes, they're the offset","width":628},{"text":"so if we're writing this in C code we can probably come up with a way to extract the page number from an address","width":588},{"text":"okay so if i say i got some pointer and i shift it right by 12. what have i got?","width":874},{"text":"the page number! yes","width":381},{"text":"and what about the offset","width":69},{"text":"could you write an expression for the offset","width":299},{"text":"i only care about the lowest twelve bits","width":350},{"text":"i could AND it with something yes","width":251},{"text":"so i can mask it","width":109},{"text":"how do i get the lowest twelve bits","width":192},{"text":"okay, for this ill give you a couple of clues","width":156},{"text":"everyone knows that two to the eight is 256","width":264},{"text":"and of course we also know that two to the ten is a 1024","width":203},{"text":"so two the twelve is four times that also known as 40996","width":296},{"text":"yes!","width":166},{"text":"so... i could write what","width":289},{"text":"4095, is that correct? okay.","width":972},{"text":"in other words, the bit pathing 1 2 3 4 5 6 7 8 9 10 11 12 in binary","width":755},{"text":"so that means when i AND it with this number, all of my upper bits will be disappeared, masked to zero","width":535},{"text":"so this give me the offset","width":143},{"text":"i could have written an expression here, i could have said something like: take one and shift it left eleven more times, the subtract one as well","width":755},{"text":"so we got ourselves a page number and offset","width":249},{"text":"now just like any good cooking show, this is where we take what we've made and we set it aside for later","width":400},{"text":"okay, we'll be pouring the offset back in","width":187},{"text":"at the very end","width":67},{"text":"we don't care about the offset until the very very end","width":171},{"text":"what we're gonna try to do now is convert this page number which goes from zero up to 2^20.","width":598},{"text":"how big is 2^20?","width":255},{"text":"okay, how do we work that out? well, I just told you that 2^10 is about a 1000, so 2^20 is bout a million!","width":468},{"text":"binary million","width":100},{"text":"so what a bout a million possible numbers to look up","width":259},{"text":"so we're gonna take these page numbers","width":115},{"text":"and stick them","width":232},{"text":"into just a big table","width":233},{"text":"and inside this table, i need to know where to go inside my RAM","width":333},{"text":"and in fact","width":233},{"text":"I'm gonna convert from this virtual numbers to these physical numbers","width":292},{"text":"they're called physical","width":422},{"text":"frame","width":212},{"text":"most of the time we'll never talk bout frames","width":149},{"text":"because most of the time we don't actually care about real memory","width":350},{"text":"most of the time, our programs that we write live in this virtual address space","width":376},{"text":"but today because we're actually gonna figure out how to convert virtual memory to real memory, yeah we need to talk about them","width":336},{"text":"so these are our physical frames","width":80},{"text":"so we just have a big lookup table","width":106},{"text":"ok how might that work,","width":154},{"text":"easy, let's just have a big array","width":280},{"text":"and that can give us the frame number","width":640}]