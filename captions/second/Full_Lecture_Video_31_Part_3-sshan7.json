[{"text":"and ","width":334},{"text":"actually we could write map ","width":195},{"text":"shared map, private, it doesn't matter in this case because we're just going to be reading or writing, I'm sorry, just reading from it","width":413},{"text":"and we pass in our file descriptor, here we go, and we don't need any offsets","width":390},{"text":"so something like that should work and we'll check to see if that gives us back a reasonable address pointer and if it does great i have immediate access to the bytes in that file","width":944},{"text":"don't forget at the end to use unmap and munmap or else very quickly you're going to run out of virtual memory when your WWW project becomes popular","width":1208},{"text":"okay, right so let's have a demo now of actually using this to talk to two different processes","width":1533},{"text":"great, so here's my program","width":234},{"text":"if we wanted to quit, we could print say the line number of where we failed ","width":744},{"text":"so i'm going to in here see if my mmap failed and if it did i'm going to simply quit","width":418},{"text":"and my macro quit will include the file and the line numbers so in debugging this, i can see where the problem is","width":758},{"text":"alright so let's have a go at this ","width":153},{"text":"i'm using map_anon because i'm using this on os x (on a mac) and i don't have a file descriptor to pass in because i'm just trying to communicate between a child and a process ","width":843},{"text":"okay, so once i've got the address, here's my plan ","width":221},{"text":"i'm going to treat it as pointing to some integers ","width":424},{"text":"then i call fork and now i have two processes ","width":224},{"text":"in the, in one process","width":279},{"text":"let's see what have we got","width":88},{"text":"so that's the parent process, so in the parent process i'm going to write these two values 10 and 20 and in the other process","width":671},{"text":"okay, here's my attempt at synchronization, we're just going to sleep for a second to make sure the other process has finished ","width":462},{"text":"and then we're going to read the values of shared","width":166},{"text":"so i've got two processes remember but they're sharing one frame","width":426},{"text":"okay, so we'll add those together and see what we get ","width":223},{"text":"okay, do you think this will work? let's have a plan, see what happens","width":413},{"text":"alright, so we run gcc","width":465},{"text":"invalid argument and of course we've got a crazy address","width":253},{"text":"why, what did we do wrong? ","width":806},{"text":"okay, here's what we did wrong, you've got to choose one, you've got to choose either shared or private so in our options here we","width":618},{"text":"we definitely need anon or anonymous because we don't have a file descriptor but we have to say ","width":437},{"text":"an options, so suppose we did private, what do you think the result would be","width":739},{"text":"ah, we got 0 in the other process! why? because we made it private!","width":364},{"text":"okay, what we wanted was... we shared the memory, okay so let's fix this","width":797},{"text":"and a second later, yay! great! ","width":132},{"text":"right, so there we go, we've managed to toggle information using memory mapped operations between one process and another process ","width":584},{"text":"pretty cool huh?","width":107},{"text":"well i think it's pretty cool and i think memory mapped files are fantastic when you have a lot of binary data or text data ","width":374},{"text":"and you want to be able to write simple code to read it and manipulate it ","width":322},{"text":"you'll often find it's very very easy to \"okay just map the whole file\" then call strcomp or call a regular expression on the whole file","width":601},{"text":"and we'll let the virtual memory automatically load those pages into memory for us","width":661},{"text":"okay any questions about mmap?","width":428},{"text":"okay, right, time for part two!","width":383},{"text":"this is one of the few times i'm going to use powerpoint, so sit back, relax, turn your brain off","width":397},{"text":"you know how i feel about powerpoint, but i've got a few things to say and i've got a few slides which are actually useful","width":350},{"text":"we're going to talk today about file systems from a very different perspective ","width":305},{"text":"i'm going to talk about file systems by what can we do when think beyond just a single disk and how can we make our file systems robust?","width":952},{"text":"okay, this is not a new question, and one answer to this is RAID","width":233},{"text":"so we'll talk about RAID","width":160},{"text":"and then at the very end of this i'm going to talk about well suppose your problems are bigger than just a single disk array ","width":512},{"text":"suppose you want to start a company like Google","width":277},{"text":"how can you make a file system that works even beyond a single data center? so what do some of those challenges look like?","width":468},{"text":"and i'm just going to cherry pick a few items out of that and give you a reference if you have intentions of building a file system or building a company as big as google","width":740},{"text":"right so let's talk about RAID","width":163},{"text":"you've probably heard of RAID, it's relevant today even if you're using RAID, but i'm going to talk a little about the history about where it came from ","width":461},{"text":"it comes from redundant array of inexpensive disks ","width":356},{"text":"so here's where what we got there, first of all due to moore's law where we can pack more transistors on our silicon, and so we saw CPU speeds doubling very quickly","width":990},{"text":"however, disks themselves were not increasing in speed","width":469},{"text":"yes we learned how to pack more information on them, but the time to access any one piece of information was still dominated by the speed it took for the disk to rotate around","width":827},{"text":"so you've probably heard about say 7200RPM or 10000RPM ","width":408},{"text":"this sounds like it's spinning very fast, but if you work that out in terms of milliseconds, it's still a long time before it can rotate back to the right spot","width":548},{"text":"so we have a rotation time and seek time of actually physically moving the head to the right track on the disk, it takes time","width":656},{"text":"even if you can move it very quickly you still have to allow for it to settle","width":237},{"text":"so disks are slow ","width":105},{"text":"so why don't we spread our disks over multiple disks? ","width":236},{"text":"secondly the cost of our disks started to fall dramatically","width":265},{"text":"so it became apparent that rather than having one massive really reliable disk, let's actually use cheaper more commodity hardware and instead think algorithmically of how we can improve the rather vile reliability of our data stored on disk","width":1150},{"text":"so that's just a little bit of historical backdrop","width":128}]