[{"text":"how would you compile a program using multiple cpp files we'll talk about that today","width":919},{"text":"what are you supposed to do in the lab sections, every lab will be an assignment","width":405},{"text":"i think that's pretty much","width":256},{"text":"are there any office hours besides the lab yes if you go on the course website and you click the calender tab you should see a huge calender that ","width":465},{"text":"got everything in it include ta office hours deadlines exam schedule all pretty much everything","width":661},{"text":"comparing to regular semesters is the summer course going to be harder? depends on how you define harder","width":469},{"text":"you go at an accelerated pace so it's much easier to fall behind than it is in the regular semester simply because we have less time to cover things","width":640},{"text":"there's a little bit less time for you to digest stuff, so in that sense it's a little bit harder just because we have to run at sort of  2x speed essentially","width":698},{"text":"i don't think that the material is any harder because it is essentially the same material but because we're going to quickly that definitely adds a difficulty factor to it for sure","width":1176},{"text":"so this is for prelecture two is a pointer a one way street so i was reading that as i was coming over and chuckled because that's actually a really reasonable analogy right?","width":657},{"text":"if you have a pointer to something you can go to the end of the pointer through the pointer, but it's not like if you're at the thing being pointer at that you know who's pointing at you, you have no idea right","width":787},{"text":"so the pointer is just a variable that stores the memory location of something, but it's not like the something that's being pointer at knows who's pointing at it, okay so in some sense yeah it kind of is a one way street","width":832},{"text":"(inaudible question)","width":295},{"text":"yeah you can go to the end point through the pointer but you can't go backwards","width":384},{"text":"it's not like if i have a pointer to x and i'm at x i can't figure out what's pointing at me, because a) there could be several different things pointing at a particular piece of memory right? i can have as many copes of pointer i want it's just a memory location right?","width":922},{"text":"so going backwards isn't necessarily mean anything because you may have multiple paths backwards","width":957},{"text":"so somebody asked a question whether i would always recommend always drawing a memory diagram of the stack and the heap","width":519},{"text":"yeah","width":128},{"text":"that would be my suggestion, because if you draw the right  - so there are two ways you could go about this, you coudl just try and just drill stuff until you think that you're reasonably confident that you can keep it all in your head and not mess anything up or you can draw the picture and as long as you draw the right picture you will always end up with the right instructions to make sure you've cleaned up the memory properly... so","width":1408},{"text":"if you're on like an exam i would recommend drawing the diagram so you're pretty darn sure","width":448},{"text":"even for me i still like when i'm doing when i'm checking or making a solution for the exam or for problems i draw the picture so i don't mess anything up or otherwise it's very easy to forget something or think that something is true that's not so it's definitely a lot easier to just draw the diagram out but if you think that you're a mega-expert and you don't need that crutch then fine  but i would suggest doing it","width":1796},{"text":"what are the differences between a compiler error and a runtime error good question! so compiler errors happen when you're trying to make your program. runtime errors happen when you're running the program","width":743},{"text":"okay so for example a runtime error could include a memory leak, that ones a little weird because the program wont crash but it's doing something bad and it doesn't happen when you're compiling it happens when you're running it","width":1200},{"text":"so the runtime erros happen when you're actually running your output program, compiler errors happen before you even have a program","width":405},{"text":"so in order to even have a runtime error you have to know that your code actually compile","width":320},{"text":"if your code didnt compile you cant run it","width":256},{"text":"so you can't have a runtime error","width":128},{"text":"likewise if you have a compiler error, you can't have a runtime error, because you don't have a program yet","width":320},{"text":"if you're running a program you might be running an old version of it because it didn't compile","width":256},{"text":"so it's a matter of where during what does hat error occur, when i'm making it or when i'm running it","width":512},{"text":"yeah i can give more examples it's sort of the goal of today","width":512},{"text":"the general rule what should you do to pointers that point in location in the heap that have been deleted, good practice is to set them to null, which is address 0 which is never a valid address, we'll talk about that a little bit today.","width":1344},{"text":"","width":128},{"text":"","width":64},{"text":"","width":64},{"text":"","width":64},{"text":"","width":64},{"text":"a lot of these will get more clear as we work through the examples","width":448},{"text":"","width":64},{"text":"","width":64},{"text":"alright so lets review a little bit from last time so uhhhhh","width":448},{"text":"this is the same setup as we had before we have a foo a bar we have a foo.h foo.cpp bar.h bar.cpp","width":520},{"text":"and last time we made a main that just called one of these and we just sort of showed what the compiler commands would look like to make and link a binary that ran a main that had a call to bar in it","width":890},{"text":"now i want you to change that so that it calls both bar and foo and prints the following","width":640},{"text":"in that order","width":128},{"text":"so think about what your main would have to be okay? and fill that in, and then... take a stab at writing the make file okay so remember the makefile is a series of targets, dependencies, and rules to make those targets, so this is a target the things here are gonna be your dependencies  and here is your rule to build","width":2806},{"text":"rules i think it can be multiple lines","width":429},{"text":"so.... you've got targets youve got dependencies and youve got rules to build those targets. the dependencies are the things that must be present in the current working directory before you can build the target.","width":1088}]