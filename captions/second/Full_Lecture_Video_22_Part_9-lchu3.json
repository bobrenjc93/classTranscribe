[{"text":"So then we are going to use that fact to prove this lower bound has a close form of 2^h rotations. So, we are gonna do induction h, again following sort of the prelecture, I’m not gonna say anything about empty trees because it’s inconvenient. So I’m gonna say stuff about tree applies zero at height one.","width":1664},{"text":"All right. It just saying, you know, get rid of that, it’s certainly agreed on that, replace that with minus two and that’s fine.","width":1536},{"text":"Again, I’m not gonna say anything about empty trees but I’m gonna say trees applies zero and greater. I need two base cases here. Why do I need two base cases?","width":640},{"text":"It comes from the fact that there’s a minus two here. So when I’m proving something about a tree of height h, I have to be able to talk about my inductive hypotheses as if it was true.","width":1856},{"text":"For things that are height h-1 as well as h-2. So I need to be able to get back to, if I have a case for h is zero and for case h is one, then when I’m proving when h is two, I can go back and use my base case for zero. When I’m proving when h is three, I can go back and use my base case for one.","width":1280},{"text":"When I’m proving h is 4, I can use inductive case for h is two which is in the base case for 0. So I actually need two base cases 0 cause I’m reaching back twice.","width":768},{"text":"So if h is zero, then we know S(h), S(0) is one by definition which is greater than or equal to two to the 0 over two.","width":1408},{"text":"When h is one, S(1) is... What’s the minimum number of nodes to get an AVL tree of height 1? Two nodes. And that’s greater than or equal to two to the half. That’s fine. My inductive case is gonna be h greater than one.","width":1856},{"text":"What am I gonna say what my inductive hypothesis is? Be careful here. Grading some of these inductive hypothesis after prove, I’m fixing a lot of n and k because people flipping those. What is my inductive hypothesis is going to make a claim about?","width":1088},{"text":"Everything smaller than h might hold proof. My inductive case is always arguing about h. It’s not arguing about k+1, it’s not arguing about k. It’s arguing about h.","width":1152},{"text":"So my proof is going to talk about h. My inductive hypothesis is going to say something that is smaller than h. And I’m gonna use that hypothesis to show you that it is true for h. So my inductive hypothesis is gonna look like something like for all k smaller than h, S(K) is less than or equal to 2 to k over 2","width":1600},{"text":"So I’m saying things about things that are smaller than my height h. And then I’m gonna show that base on this assumption it must true for height h as well. ","width":704},{"text":"But my proof has to argue about h, not about k or k+1. And likewise all these should be.","width":2240},{"text":"So we know by definition that S(h) is greater than or equal to S(h-2). Just from algebra. Then we can apply our inductive hypothesis because h-2 is something smaller than h. So our inductive hypothesis of twice of s","width":1600},{"text":"So this is gonna be 2 times 2 to the h minus 2 over 2. We just plug in the value pf their closed forms after we apply the inductive hypothesis. This is going to be 2 to the h minus two over two plus one. And so we got a minus one there and a plus one here. So they are gonna cancel for us nicely. So we are gonna have 2 to the h over two here, which is all we wanted to show.","width":4096},{"text":"So now we know S(h) is greater than or equal to 2^(h/2) for all h. We want to argue that the height of the AVL tree is agreed with it. So in other words, what is S(h)? Number of nodes we are talking about our AVL trees is N and the number of the data elements involved.","width":1664},{"text":"So in other words, this is saying that n is greater than or equal to the function of h which is 2^(h/2). So let’s just solve this for h. So we solve this for h we do a log of both sides and get rid of that two. So it’s h over 2 multiply by 2 if h, right? So now we’ve got h is smaller than or equal to 2logN.","width":2048}]