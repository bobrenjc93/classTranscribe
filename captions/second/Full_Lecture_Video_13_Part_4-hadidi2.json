[{"text":"And use banker's method. So what was the banker's method for doing amortized analysis?","width":832},{"text":"Yeah, I couldn't see where that came from. That's exactly right. If I want to use banker's method to prove that something is constant amortized time, I want to supply a fixed budget or allowance or cost to each operation that I'm doing.","width":1408},{"text":"And then, I'm going to call those dollars, so I'm going to get an allowance of k dollars for each operation. What do I use those dollars to do?","width":832},{"text":"What are those representing? What is the analogy?","width":320},{"text":"Dollars, so I must be paying for something...but what am I paying for? In the prelecture we were looking at a binary counter. And the thing we were paying for, the elementary operation, was doing a bit flip.","width":960},{"text":"Changing a bit from either 0 to 1 or 1 to 0.","width":256},{"text":"And that was something that cost us something. It took some time or whatever.","width":320},{"text":"That was an elementary operation, a bit flip in that case is an elementary operation. You're increasing this binary counter. You're flipping a bit-that is something that you incur cost for. A fixed, constant cost that probably takes the machine so many clock cycles or so  many nanoseconds to flip a single bit in a counter.","width":1344},{"text":"So, in general, I'm going to assign a fixed dollar amount that I can use for every aggregate operation or big operation- the operation that I'm looking at on my data structure-and the dollars that I'm getting are to be used for primitive or elementary operations. What is the primitive or elementary operation in our case here when we're copying things out of these arrays?","width":1664},{"text":"A data copy.","width":896},{"text":"That's our elementary operation. That's the thing that's costing us! How did you know that?","width":448},{"text":"What did I just spend the last two or three problems writing a recurrence or formula for?","width":768},{"text":"The number of copies","width":128},{"text":"So, that is fundamentally the thing we care about. That's what we're paying for.","width":256},{"text":"In this analysis, we're doing push back onto some array based container structure","width":448},{"text":"The thing we're paying for is a data copy. And we're going to assign some fixed dollar amount to every single push back operation.","width":576},{"text":"So that we can pay for the data copy operation for that push back.","width":448},{"text":"An optionally save some for later to bank it for when we need more money later.","width":448},{"text":"So we're going to pick some constant amount such that we have enough to both do the operation for whatever the push back is currently happening and also enough to save aside so that when we need to do an expensive operation, we have enough saved up to do so.","width":768},{"text":"Another way of looking at this is like health insurance. Everytime you're doing a data copy, you'll put some money in the pot. When the accident happens, the array resizing, you take the money out of the pot and you use it to pay for that resize","width":1152},{"text":"So what does this look like then?","width":320},{"text":"I'm going to tell you, the way you figure out the correct allowance amount, I don't have a nice formula for. You just have to play around with it. Push back will be given an allowance of three dollars. So my allowance will be three dollars.","width":1216},{"text":"Per push back.","width":320},{"text":"And that my elementary cost is one dollar per data copy.","width":704},{"text":"And now, to do this right, we have to think about exactly what we're doing with all the money at every step.","width":1024},{"text":"So we'll start with an array of size one.","width":192},{"text":"No money, no dollars. We're broke.","width":512},{"text":"We're going to do some work now, so we'll get some allowance to do some work. We'll get three dollars to do an insert. To do push back of one. So I need to spend one of those dollars to actually do the data copy. So put in one, I spent a dollar. I have two dollars leftover. One of my dollars doesn't matter here.","width":1344},{"text":"I'll save one of these dollars and steal the one that doesn't matter. I'm going to save one of these dollars in the array for later. So I'll associate one dollar in that array cell. I'll just keep it there so I can keep track of where those things are, so I know how much money I have left at every point.","width":1600},{"text":"So now I have one dollar on the board, none in my pocket.","width":640},{"text":"Now, I'm going to do another insert.","width":192},{"text":"I've been given three dollars to do the insert.","width":256},{"text":"I need to resize, unfortunately.","width":192},{"text":"I need to get a new array.","width":256},{"text":"And I need to copy over the other data elements.","width":576},{"text":"So what I'm going to do is I'm going to use the dollar I've stored at this old data element.","width":512},{"text":"To move it down. I'm going to spend the dollar at the one to move the one down.","width":320},{"text":"Now, I no longer have that dollar at the one.","width":512},{"text":"I still have my three dollars from my allowance. I got three dollars in my allowance. I just used the money I had leftover, I haven't spent my three dollars yet.","width":448}]