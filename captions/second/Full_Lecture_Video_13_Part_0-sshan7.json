[{"text":"...","width":10883},{"text":"Good morning! If some of you don't know who  I am, I'm Robin Kravets. I'm a professor in the CS department. I have taught CS241 many times in the past although Lawrence Angrave has taken over and I don't get to torture you guys anymore. So it's not as much fun anymore. But he is out having fun in warm sunny California for the next two classes which means you are stuck with me. For better or worse","width":2066},{"text":"Anyway, he gave me all the information to teach you guys. I didn't even have to give you the quiz that was done already. So we are going to focus today on some of the synchronization problems that he started on. ","width":924},{"text":"And get through hopefully deadlock on Wednesday. ","width":292},{"text":"So he left you talking about the reader-writer problems, producer-consumer problems, and one of the things that was assumed was that to make these entities talk to each other that there is some shared space between them. And I don't think there was any restrictions put on how he told you what this space would be. So in the best of all worlds we might just have an infinite buffer where we have somebody put some data in on one side and somebody taking it out on the other side and I could infinitely put in as much data as I want and take out as much data as was put in","width":3243},{"text":"But in reality we know that infinity is never infinity. We can't implement infinity in a system","width":598},{"text":"So what we want to talk about today is understand what kind  of data structures and what kind of resources we can use to implement these shared data applications.","width":749},{"text":"So where one application is writing into a buffer and another application is reading from a buffer.","width":340},{"text":"...","width":5088},{"text":"So if we're dealing with entities where we have a producer and a consumer ","width":990},{"text":"And they are putting data into some buffer and the consumer is taking data out of there. What kind of limitations do we have if we're going to implement in this way? What's the first thing?","width":1783},{"text":"Well at some point once I've filled up the queue I can only take things out as fast as the consumer is consuming them","width":544},{"text":"Vice versa I can only consume as fast as they're produced. But this is not an infinite buffer","width":461},{"text":"So what happens is the producer puts something in and puts a couple of things in and now the consumer is going to take them out","width":1207},{"text":"And we put some more things in","width":312},{"text":"Now I want to put something else in. What do I do?","width":227},{"text":"I've hit the end of my buffer","width":417},{"text":"We can rotate around and wrap","width":197},{"text":"So let's let the producer now say let's go all the way back there and I can put my next thing in here","width":576}]