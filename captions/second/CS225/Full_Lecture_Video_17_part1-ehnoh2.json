[{"text":"So I apologize. It's definitely due tonight, the other thing that's going on in this window of time, I don't know what window it is exactly, but if you go into Siebel Center, it is filled with people, most notably alums. So yes, it's all their companies and stuff like that, but the cool thing for me is that it's people who were sitting in your seat just a few years ago.Â ","width":4422},{"text":"So they're doing the recruiting thing and you're nervous about talking to them, but they're just like you, just a couple years farther on.","width":486},{"text":"So, be inspired by them, enjoy talking to them, don't be nervous talking to them, because we can break the chain of nervousness.","width":599},{"text":"They are, really, take it from me, I've known them and I know you, they're just like you. Maybe not even quite as smart.","width":726},{"text":"I'm just kidding. There's a million different definitions of smart, so when I say that I don't even know what I mean. Should I stop talking?","width":643},{"text":"Yes, yes. Okay.","width":220},{"text":"Last time we were talking about a new abstract data type called a stack.","width":595},{"text":"We're going to finish up that discussion today, and also complete discussion of another data type called a queue, that's right.","width":680},{"text":"So it turns out that stacks and queues are lumped together in almost every data structures book ever written.","width":640},{"text":"And the reason for that is because they're both constrained access linear structures. And a lot of the implementation issues that we talk about are the same between the two of them.","width":689},{"text":"What's very different about the two of them is their applications.","width":254},{"text":"So as we go on through the semester we'll see applications of each of them and we'll be pretty careful to distinguish one from the other in those contexts.","width":697},{"text":"Notably, MP4 helps you see some differences between them, how they work in the different application.","width":547},{"text":"Alright. So we were implementing a stack with an array, and I wanted to just ask you to revisit that. I understand that this is completely warm-up, but frankly, I need a warm-up.","width":882},{"text":"You might not, but I do.","width":166},{"text":"So, um, the stack had the following public interface, or abstract data type, both of those are sort of interchangable in terms of expression","width":847},{"text":"The function \"push\" which is a specialized notion of inserting into the structure and the notion of \"pop\" which is a specialized notion of removing something from the structure.","width":925},{"text":"It's a linear structure that is the data, that is, the data is all lined up, in our understanding of that data not necessarily in memory, but you know, we can sort of think of it as being lined up in memory.","width":940},{"text":"As such, when we insert and remove from this linear structure, we're going to take advantage of this idea of the data being next to each other.","width":695},{"text":"Specifically when we push onto the stack, so pretend 8 wasn't there, we're going to push it onto the stack, the notion of next is generated there.","width":1000},{"text":"Because the next data after 8 (8 becomes the first data element then), the next data element is 6, and the next one for 6 is 3, and the next one for 3 is oh, I don't know, nothing.","width":977},{"text":"There is no next one for 3, 3 is the end.","width":201},{"text":"Okay, so this idea of a next element is what creates this linearity in the structure itself.","width":552},{"text":"Similarly, when we pop from the stack, or when we remove elements from the stack, we exploit this notion of next, because standing behind this 8 ready to take its place is a value just sitting there, the next value takes its place.","width":1306},{"text":"When 8 is removed.","width":136},{"text":"Alright, for the details of an array-based implementation, you take a look at the data contained in the private section and you see","width":760},{"text":"I'm going to start at the bottom. What is this? Not literally, but what does it mean?","width":498},{"text":"It's a dynamic array, good, we'll talk about that in a second, what's this one, what does it communicate?","width":448}]