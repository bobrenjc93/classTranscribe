[{"text":"...was ten times faster. So that right there is the benefit of using arrays, assuming they all are going, you know, they don't have poor hashing behavior which you'll learn about in a different class. Arrays win every single time. If you can think of a clever way of implementing something using an array, do it. Okay? All right! Uh, but the analysis here is array-based implementation of a stack is a constant time pop, is a constant time push if there's capacity. Uh, the cost over n pushes is big O of n for an average of big O of one per push. When you take the, um, algorithms course, uh, CS 374, instead of calling this average, they're going to call it amortized analysis. Um, it's just an issue of, they have a different use of the word 'average'. They're taking an average over a different probability space. It's okay for us to call this average in this context. All right! So why consider an array? Heh. It's faster, duh. And, um, and that's just because the way the system handles memory allocation. All right! Any question about it?","width":5824},{"text":"Okay, let's talk about a queue. Yea! Uh, so this is a stack. Um, it's cons- it's linear constrained access. Often times people will refer to a stack as a last-in-first-out linear structure, linear structure. Okay. They might even refer to it as a last-in-first-out queue. Ah! Okay, we're not going to be so ambiguous about this. For us, we're going to say the term queue for a first-in-first-out structure. Now I cannot- I can't go forward without making this point. I can never remember whether this is first-in-first-out, like whether the colloquial, um, the colloquial description of a queue is first-in-first-out or last-in-last-out. And I like this one better. I don't know why. LILO, right? Um, but I-I think that the world imagines you'll say this one. I don't know. It doesn't matter, right? They're the same. Okay! So how does the queue work? It's fair. It's profoundly fair. It's the way you line up in the dining halls, right? Oh wait. Do you- are your dining halls cafeteria style or buffet style? Buffet? Oh, maybe you'll still have to line up for a buffet. We don't have to talk about this very much. Uh, probably a more interesting use of a queue is to line up events in some time-driven application like a video game for example. Um, and if- and there is an explicit event queue in that case. So that means probably a little more, uh, useful if you're not hungry. Okay! So what is the queue ADT? There are different ways of specifying it. The language we are going to use is enqueue and we're going to enqueue an item. Dequeue will return an item of some kind. And then we're going to have this boolean function that allows the client to detect whether or not, uh, the queue is empty, thereby freeing us of the responsibility of including that code. Okay? Any question about it?","width":10944}]