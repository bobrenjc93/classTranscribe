[{"text":"Alright, so whats going on","width":256},{"text":"yeah?","width":192},{"text":"yeahhhh, very good, so the output of this, is to print only those animals in the zoo that are big","width":768},{"text":"alright? So from the example of last time that would be the giraffe","width":384},{"text":"and the bear","width":192},{"text":"ok, the giraffe and the bear and the penguin will not be printed","width":192},{"text":"Ok!","width":128},{"text":"Ok, so should we untangle it?","width":64},{"text":"Alright, so, printifbig (Oh, wrong pen), printifbig is called myFun","width":448},{"text":"So the name of the function we gonna pass around is called myFun","width":384},{"text":"Last time it was frog but here we gonna use myFun","width":256},{"text":"As in my functor","width":64},{"text":"Ok, then I'm gonna call, simply call funtion print","width":320},{"text":"Ok, so that's the top function up there","width":192},{"text":"Now what does print needs?","width":128},{"text":"It needs two types and three parameters","width":306},{"text":"Two types and threeparameters","width":192},{"text":"Here are the two types","width":128},{"text":"Ohhhh, it's an animal list iterator","width":256},{"text":"And the type of the functor","width":448},{"text":"Ok? and now it needs three parameters, what is the first parameter?","width":508},{"text":"Oh it better be of this tupe and the intention is that the processes going to go from one to the other","width":704},{"text":"So it make sence that we are gonna walk forward through the zoo.","width":320},{"text":"So make sence that we would choose zoo begin, which is just a member function of the zoo class that returns an iterator","width":512},{"text":"One of these","width":256},{"text":"Right? Something of that type","width":64},{"text":"Zoo end, and then whatever I called that fuction","width":512},{"text":"Name for that fuction.","width":128},{"text":"Ok! So what does it do? ","width":128},{"text":"It applies this function to every element of the zoo between these two iterators.","width":512},{"text":"And print it out if it is big","width":192},{"text":"Ok?","width":177},{"text":"Any question about that?","width":192},{"text":"Yes?","width":64},{"text":"Oh, so we are printing out the very last element, because it's going to go while the first is not equal to the second","width":768},{"text":"So it's gonna keep going until it becomes the same as the second. ","width":443},{"text":"Ok? and then","width":124},{"text":"Oh, end is one pass for last","width":192},{"text":"End is one passable last from that time, that's the key point there.","width":405},{"text":"Ok any other questions","width":98},{"text":"Either question about this?","width":178},{"text":"Ok, so, you know","width":256},{"text":"I am not as eduminded probably as you are but I will tell you how I respond to this","width":448},{"text":"And maybe, maybe you will be a little born mentally flexable","width":384},{"text":"Every time I dont have a mechanism for remembering exactly how this goes every time.","width":384},{"text":"I had to think very hard and very carefully about how to set this up","width":384},{"text":"But what's important is that you know it can be done.","width":192},{"text":"That is you know you can define a function that you can pass around and apply to members of the container.","width":640},{"text":"Ok, that's what is important tha you know, Ok? ","width":320},{"text":"And untangling exactly how to do that every time is a matter of practice","width":320},{"text":"You had to do that everyday you realize that","width":128},{"text":"Oh yeah all you gotta do is declear a couple of iterators .etc","width":704}]