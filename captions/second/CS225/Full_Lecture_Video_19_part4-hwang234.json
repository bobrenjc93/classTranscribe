[{"text":"Hi! What's going on?","width":275},{"text":"Yeah?","width":203},{"text":"Yeaaaaaah. Very good!","width":254},{"text":"So the output of this is to print only the animals in the zoo that are big","width":508},{"text":"So from the example of the last time that would be ","width":281},{"text":"the giraffe","width":181},{"text":"and the bear","width":128},{"text":"giraffe and the bear","width":85},{"text":"Penguin will no be printing","width":126},{"text":"Ok. So should we untangle it?","width":64},{"text":"Alright, so, print big","width":267},{"text":"Oh wrong pen","width":98},{"text":"printIfBig is called myFun","width":192},{"text":"so the name of the function that we're gonna pass around is called myFun","width":246},{"text":"Last time it was Frog, but here we're gonna use myFun","width":284},{"text":"as my fuctor","width":93},{"text":"Ok.","width":119},{"text":"Then we're gonna call, simply call function print, okay?","width":256},{"text":"so that the top function of their","width":197},{"text":"Now what does print mean?","width":118},{"text":"It means two types and three parameters","width":301},{"text":"Two types and three parameters","width":177},{"text":"Here are the two types, oh","width":196},{"text":"It's an animal iterator","width":294},{"text":"and a type of the functor","width":256},{"text":"okay?","width":311},{"text":"And now I need three parameters","width":125},{"text":"What is the first parameter?","width":125},{"text":"Oh, it better be of this tupe and the intention is that the processes going to go from one to the other","width":688},{"text":"so it make sense that we are gonna walk forward through the zoo.","width":407},{"text":"so make sence that we would choose zoo begin, which is just a member function of the zoo class that returns an iterator","width":506},{"text":"one of these","width":203},{"text":"right? something of that type","width":141},{"text":"zoo end, and then whatever i called that fuction","width":361},{"text":"name for that function","width":226},{"text":"ok! so what does it do?","width":96},{"text":"it applies this function to every element of the zoo between these two iterators.","width":472},{"text":"and print it out if it is big","width":210},{"text":"here, ok?","width":235},{"text":"any question about that?","width":85},{"text":"yes?","width":121},{"text":"oh, so we are printing out the very last element, because it's going to go while the first is not equal to the second","width":6650},{"text":"so it's gonna keep going until it becomes the same as the second.","width":576},{"text":"ok? and then","width":384},{"text":"oh, end is one pass for last","width":128},{"text":"end is one passable last from that time, that's the key point there.","width":192},{"text":"ok any other questions","width":448},{"text":"either question about this?","width":128},{"text":"ok, so, you know","width":128},{"text":"i am not as eduminded probably as you are but i will tell you how i respond to this","width":448},{"text":"and maybe, maybe you will be a little born mentally flexable","width":256},{"text":"every time I don't have a mechanism for remembering exactly how this goes every time.","width":384},{"text":"i had to think very hard and very carefully about how to set this up","width":448},{"text":"but what's important is that you know it can be done.","width":384},{"text":"that is you know you can define a function that you can pass around and apply to members of the container.","width":192},{"text":"ok, that's what is important tha you know, ok?","width":576},{"text":"and untangling exactly how to do that every time is a matter of practice","width":256},{"text":"you had to do that everyday you realize that","width":448},{"text":"oh yeah all you gotta do is declear a couple of iterators .etc","width":384}]