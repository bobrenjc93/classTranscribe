[{"text":"OK, so the comment is , the comment is, I believe, you have to correctly find the bad name matches this name. And that is absolutely domain. It's probably the most important point, because what I am really doing here is creating the code that will make that declaration on the left work. Ok, it's creating the code that we will say what happens when that function is invoked. Ok fine, I am too surprised about that, anything else here. Like look wired. Ok, look back, i didn't do that when I declare this here. So that's different, I am gonna talk about it in a minute. What else look unfamiliar? Yeh. What the hack is the double code about. Ok. That's called a scope resolution operator. And here is what that says. That says, that this setRadius is the setRadius declared in the sphere class, it's not the one declared in the circle class. It's not the one declared what else has a radius. The arm class, you get it? Isn't your arm has a radius? The broken arm set the radius. Ok, fine. So, this setRadius is the one associated with the sphere class. You saw something here that was a attach to be this scope resolution operator to other class, is not the one you are interested in. I am not gonna talk about const yet, I will talk about it in a minute. The scope resolution operator attaches or associates a function to a class. All right, so let's set the radius. What code do you think we will have to do. If some one tells you there is a radius. How would I said, the radius to be that value? Very good. That's it. That's the code.They can be. But they are not inside the same code block. Now, so there is the they can be. But that make you think may be they can't be too. Now, by convention not because we have to, but by convention, we stick these implementations into different. Remind me to talk about that again. All right. Are you happy with that implementation? Yes? I might want to, because what this allowed is I can say bball.setRadius=(-4.7). So this is our chance. This is our opportunity to do some ere handling here. Maybe I want to say, if new red is greater than zero. Otherwise, the radius which should be a default radius. Yes? Ye, maybe one. Or just leave it, don't make it changed. But than you want to tell somebody you are doing it. In any case, this is not exactly how you handle error. So i will make a comment here. In this class, we are not gonna talk about exception handling. We have too much to do, and we are not technically software engineering class. C++ has mechanism exception handling, you can google them. You'd better google it after the first week of the course. Wait, let us handle exceptions like kind of novice way now, if you have question about it later, we can discuss about it. Yes?","width":20480}]