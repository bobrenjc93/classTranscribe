[{"text":"Okay, let's work.","width":384},{"text":"We were talking about inheritance we are still talking about spheres.","width":128},{"text":"Mattox, the other instructor for the course, came up to me this morning and said you do love spheres, don't you?","width":768},{"text":"We all love spheres. Who doesn't love spheres?","width":320},{"text":"But we're almost done talking about spheres.","width":192},{"text":"Alright, so we had two classes last time.","width":384},{"text":"One of them was this sphere class and the other was the ball class.","width":320},{"text":"Do you remember the way we described the sphere class and the context of inheritance in c plus plus?","width":384},{"text":"Base class, that's right.","width":192},{"text":"So the sphere class is the base class.","width":192},{"text":"And how about class ball? It is referred to as the derived class. Good.","width":640},{"text":"They key thing to observe here is that basically we are exercising code reuse.","width":640},{"text":"That is if we already have a sphere class, then we can avoid reimplementing a lot of these functions if we just say that we intend to use them via inheritance.","width":896},{"text":"This is largely an issue of code reuse.","width":256},{"text":"Okay.","width":128},{"text":"Let's see.","width":64},{"text":"So there are a few little behaviors that we should talk about.","width":320},{"text":"We talked about them in here a little bit last time.","width":256},{"text":"But I didn't get to them for the other class.","width":128},{"text":"So I'm going to review them for you as well.","width":256},{"text":"The other thing that I intended to say here is that. From a design, I want to talk about these two classes in particular from a design perspective for just a second. Notice that the ball, a ball is a more specific sphere.","width":1536},{"text":"So, it's a sphere with more information.","width":256},{"text":"Furthermore, observe that the functions that are associated with the ball are concerned primarily with that added information.","width":896},{"text":"So, from a design perspective, it's reasonable to think about: what's the functionality of the ball as it relates to the data? ","width":576},{"text":"That is what functions do I need in order to make that data accessible, usable, etc.","width":448},{"text":"And leave to the sphere class all the functionality that every sphere might need.","width":448},{"text":"And most of those have to do with its data.","width":192},{"text":"I just want to bring it up because there's this design checklist coming up.","width":576},{"text":"Where you can ask yourself, okay, so I need this function.","width":320},{"text":"Should this go here or here?","width":64},{"text":"Largely, this decision is made up on what kinds of data each of the classes holds.","width":320},{"text":"And how general use the function itself is.","width":320},{"text":"That said, let's be more concrete here.","width":256},{"text":"I'm gonna declare a sphere, declare a ball.","width":256},{"text":"You know what that means.","width":128},{"text":"It's certainly okay to declare a sphere, because that's just our stupid sphere class.","width":384},{"text":"That we've talking about since day one.","width":128},{"text":"So it's okay to declare one of these.","width":256},{"text":"Declaring a ball also perfectly fine.","width":192},{"text":"This is not unlike the image class and the PNG class from MP2, for example.","width":448},{"text":"Okay, now this assignment statement.","width":256},{"text":"What do you think?","width":64},{"text":"Do you like it?","width":128},{"text":"Assume the assignment operator is well defined.","width":384},{"text":"So even if there were dynamic memory associated with these things.","width":320},{"text":"No, the dynamic memory would be handled responsibly.","width":384},{"text":"Each of these has a well-defined assignment operator.","width":192},{"text":"Okay?","width":64},{"text":"That being the case, who's assignment operator would apply here?","width":320},{"text":"Sphere, that's right.","width":192},{"text":"So it's sphere's assignment operator.","width":256},{"text":"So, what is the result here?","width":128},{"text":"S stays a sphere, right? S is a sphere. It is as if and it's value is exactly like B's value, except this part isn't there.","width":896},{"text":"The sphere part of the B. Any question about that?","width":448},{"text":"So this works. This is fine.","width":128},{"text":"S is the sphere part of B.","width":704},{"text":"Okay?","width":128},{"text":"Now, how about this one?","width":128},{"text":"Now, I have the B. I have a ball and I wanna assign to it the value of a sphere.","width":832}]