[{"text":"The name is the only thing missing. The type has to be integer","width":576},{"text":"And the value- oh geez- how do we give it value now?? because we no longer have x right? Here's how we give it value:","width":576},{"text":"we say the value of p equals 42. So you go to p, you follow the pointer","width":576},{"text":"and you put the value inside. or in other words, p is a pointer,","width":576},{"text":"we ask for new integer, it has no name but it is a box- we assign that one to p and then when ","width":576},{"text":"you do this statement (*p = 42;) that says go to p, follow the arrow, give it value 42.","width":576},{"text":"(*question asked*) that's right - you still have to assign value to it otherwise it is garbage!","width":640},{"text":"in fact, all constructor rules apply here. (*question asked*)","width":384},{"text":"Possibly yes - and also so the system is going to decide when you are done with p based on the scoping, like when you're done using p or when your function execution stops","width":1280},{"text":"p is going to be gone. This won't be. This will persist until you say you're done using it. ","width":576},{"text":"(*question asked*) If I have the right constructors made- I can - so if I have a sphere constructor that takes a radius, I can put a radius there. ","width":896},{"text":"I think the best way to get to speed with this material is just to practice","width":384},{"text":"so we'll spend a few minutes practicing. (*question asked*) Yes! I'll say this:","width":512},{"text":"\"new\" is just a function in C++. It takes an argument - the int - the type- is an argument to the new function","width":704},{"text":"What does \"new\" return?  ","width":384},{"text":"A something pointer! How do you know that? because on the left hand side, you have to have a pointer. ","width":640},{"text":"So you know the \"new\" will return a new pointer type. (*question asked*) Ohhhhhhh","width":576},{"text":"Now you're asking for me to keep going :) !!! All right. I want to show you something very fun and ","width":576},{"text":"it's just part of your cultural heritage (?). (*Pointer Binky video plays!!!!!*) ","width":448},{"text":"***loading Pointer Binky Youtube Video...Technical difficulties  happening.. awkward silence**","width":1920},{"text":"*Pointer Binky plays!!*","width":448},{"text":"Man:\"Hey Binky, wake up! It's time for pointer fun!\" Binky : \" WHat's that?? Learn about pointers?? OH goodie!\"","width":576},{"text":"Man: \"Well to get started, I guess we're going to need a couple pointers!\" Binky: \" OK, this code allocates two pointers which point to integers!\"","width":512},{"text":"Man: \"OK , well i see the two pointers, but they don't seem to be pointing to anything!\" Binky: \" THat's right! Initially, pointers don't point to anything! The things they point to are called Pointees! And setting them up is a separate step!\"","width":704},{"text":"Man:\" Ohhhh right right I knew that. the Pointees are separate. So how do you allocate a pointee?\"","width":384},{"text":"Binky: \" OK, well this code allocates a new integer Pointee, and this part sets the x to point to it!\"","width":384}]