[{"text":"Because of the assignment statement that's right so.","width":320},{"text":"Zoo is the list class thing.","width":256},{"text":"Is begin public or private? ","width":128},{"text":"Public that's right this is client code and we're using that function so begin is a public function in the list class.","width":640},{"text":"Returns something of type iterator. Where the heck did that come from?","width":448},{"text":"Where did iterator come from? It's a type where does it live?","width":384},{"text":"Also in the list class. That's it's a new type of thing. Lives in the list class. Is it public or private?","width":512},{"text":"Public. Has to be we're using it right? So the standard template libraries list class is actually much much much more sophisticated than ours because it's got all this extra stuff","width":960},{"text":"It has this iterator class that we get to use if we want.","width":320},{"text":"And these other functions that help us set up our iterators.","width":320},{"text":"Aright fine.","width":128},{"text":"Just as if it were an integer. We allow ourselves within the for loop to increment our iterator.","width":960},{"text":"So we can increment the iterator just like we would if it were an integer.","width":384},{"text":"But, but there are other things we can do with an iterator. Take a look at the next row.","width":704},{"text":"What on Earth is going on here?","width":256},{"text":"What on Earth is going on here?","width":256},{"text":"We dereferenced an iterator? What do you expect that to get you? If we're asking for a name what do you expect to come out of here?","width":832},{"text":"An animal right? An animal. Who's animal where was it?","width":448},{"text":"It's in the list class, it's in the class.","width":256},{"text":"Okay so, what is an iterator? It's something that is stepping through the list. It allows us to move it, and it allows us to dereference it. It allows us to ask for its value.","width":1088},{"text":"That's cool. Yea?","width":192},{"text":"So is an iterator an address or something?","width":384},{"text":"Raise your hand if you agree with that question if your like what the heck about this.","width":384},{"text":"So here's the thing. You don't get to ask.","width":448},{"text":"You don't get to ask how it's implemented. Think about this for a second. He's asking on behalf of all of you he is asking about the implementation and i'm saying you don't get to know how to it's implemented.","width":1984},{"text":"Encapsulation that's right. The implementation of that iterator is encapsulated away. All we know is how to use it.","width":640},{"text":"Okay? So swallow that pill, swallow it.","width":256},{"text":"Yes, there is this notion of next there is this notion of next now in the list class we have this adjecancy.","width":1024},{"text":"You have this notion of first and second and third but we will see structures where the idea of next is a little more ambiguous. Which one is the next one? And an iterator promises it will give you your stuff back in some order.","width":1344},{"text":"For a list it promises to step through from beginning to end in a predictable order.","width":448},{"text":"Okay. So let's talk implementation for just a second.","width":576},{"text":"How do you think this happens? What do you think this implementation kind of looks like?","width":320}]