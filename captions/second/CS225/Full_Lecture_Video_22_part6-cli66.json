[{"text":"Is it public? Did you guys make your subclass tree node public or private?","width":320.4},{"text":"Hey Mattox, was the tree node class public or private?","width":640.4},{"text":"The node class. Ok. Ahaha. Ahaoh. Gotcha. Meheheheheh. Gotcha. Alright, so, because the tree node class was private this cannot be a public function alright?","width":1280.4},{"text":"So what you do if you have reason to believe that the user of your class is going to need to preorder, um, that is, if their going to need to say T dot preorder of where T is binary tree, then, you just make a public wrapper.","width":648.4},{"text":"Ok, and what I mean by that is a public version of preorder, that simply calls this private version with parameters... root.","width":1920.4},{"text":"Which is private inside the class.","width":448.4},{"text":"I want to give you an application","width":704.4},{"text":"So suppose I give you binary tree and I want you to make a copy of it for me.","width":448.4},{"text":"The copy constructor the assignment operator","width":512.4},{"text":"So we're going to make a copy of the binary tree and notice again that for this one again we're making a private helper function","width":704.4},{"text":"So copy constructor and assignment operator are going to use this","width":128.4},{"text":"If I want to make a copy of this tree, then what am I going to do for an empty tree?","width":1152.4},{"text":"Just return NULL right?","width":512.4},{"text":"And otherwise my algorithm is going to do what?","width":512.4},{"text":"Otherwise, I'm going to make a new node and who's left subtree is a copy of that one's ","width":1280.4},{"text":"And whose right subtree is a copy of that one","width":704.4},{"text":"Th","width":448.4},{"text":"If this is A then this is a copy of A if this is B this is a copy of B","width":384.4},{"text":"Any questions about that","width":64.4},{"text":"Kinda makes sense right?","width":192.4},{"text":"Okay, so lets do everything that I just said","width":512.4},{"text":"We admit no matter what that we are going to need to return a tree node pointer","width":512.4},{"text":"thats what this thing is asking for ","width":192.4},{"text":"returns a tree node pointer","width":128.4},{"text":"so I'm going to declare that thing from the start ","width":256.4},{"text":"treeNode * t and I'm going to give it a default value that makes my life easy","width":640.4},{"text":"I'm going to give it default value NULL","width":320.4},{"text":"because the next thing I'm going to do is check to see whether my parameters is NULL","width":576.4},{"text":"Going to use next moment to differentiate between the base case and the recursive case of this recursively defined structure","width":576.4},{"text":"So what does that mean? ","width":128.4},{"text":"It means the next letter I'm going to write is an 'I'","width":256.4},{"text":"if (croot ! ","width":448.4},{"text":"if (croot != NULL) then I'm going to do some stuff","width":640.4},{"text":"What did we do? We built a root so tee equals new tree node ","width":1216.4}]