[{"text":"How many items are on the stack? Probably one way of saying it was this one.","width":375},{"text":"Size of the array. That's right. Or how many items could be on the stack.","width":320},{"text":"Ok, good. So we completely understand this implementation.","width":286},{"text":"Let's look at the function themselves.","width":448},{"text":"The way we have this set up, is so that the bottom of the stack in the array is at the front, or in position zero in the array.","width":727},{"text":"Okay, now, think about what that means.","width":128},{"text":"It means that, ","width":128},{"text":"position sizes will alwasys be one past the end of the data. Yes?","width":640},{"text":"Alright, so if you are gonna push something on, where are you gonna push it?","width":256},{"text":"In to postion size, that's where you gonna push it, and then you increment size.","width":512},{"text":"So size becomes an indicator for the top of the stack. ","width":384},{"text":"It is the location for the top of the stack or one path.","width":256},{"text":"So it indicates, ","width":384},{"text":"top of stack.","width":192},{"text":"Any question about that?","width":128},{"text":"Is that clear?","width":64},{"text":"Okay.","width":128},{"text":"That's what this push code does.","width":529},{"text":"Except for this part.","width":192},{"text":"Which is what we gonna talk about in a second.","width":260},{"text":"Let's talk about pop for just a second.","width":242},{"text":"Before we go on.","width":92},{"text":"Notice that pop returns the value ont he top of the stack, and then moves the top of the stack.","width":550},{"text":"What am I going to fill in here, the retun value, the thing that we are gonna return, lives where? ","width":512},{"text":"Make sure you can answer this, make sure you can answer it.","width":320},{"text":"Where does it live?","width":128},{"text":"Size minus one, that's right.","width":128},{"text":"The one before the sizeof() elements.","width":256},{"text":"What's missing there? I left the line, what's missing there?","width":320},{"text":"Decrementing size. Very good.","width":256},{"text":"Notice that simultaneously, I wrote code that says decrement the size.","width":576},{"text":"But what's really happenning is, I move the top of the stack down,","width":320},{"text":"the top of the stack is being moved down.","width":128},{"text":"Any question about any of that?","width":128},{"text":"I had quesitons for you.","width":192},{"text":"What's the running time of this thing?","width":192},{"text":"Running time of this one?","width":128},{"text":"Constant time?","width":256},{"text":"Absolutely.","width":64},{"text":"How about the running time of that one if you ignore the blue circle thing?","width":278},{"text":"The running time of this one if you ignore the blue circle thing,","width":320},{"text":"is also constant time","width":156},{"text":"Now that blue circle thing, the blue topological circle, is topologically a circle.","width":640},{"text":"is a source for concerns.","width":311},{"text":"I am gonna spend the next slide, alieviating your concerns of the cause of growing the array.","width":694},{"text":"So we spent a good portion of time last time.","width":212},{"text":"Deciding on an algorithm of growing the array.","width":229},{"text":"And the analysis that we did, let us to dispicture.","width":576},{"text":"I'm gonna remind you.","width":192},{"text":"Our staring position is with in a array of size one.","width":309},{"text":"We put data into it bacause we can and it causes us almost nothing.","width":374},{"text":"But we have a problem when new data comes along.","width":256},{"text":"At that point, the algorithm is to,","width":576},{"text":"I'm gonna put a little dot by it. What does that dot mean?","width":402},{"text":"I'll use a word \"allocate\". You finish the sentense.","width":276},{"text":"Somebody raise their hand.","width":192},{"text":"Allocate...","width":134},{"text":"Please.","width":64},{"text":"Yes?","width":192},{"text":"A new array? Good. How big?","width":203},{"text":"Double the size. Twice as big.","width":192},{"text":"That's right.","width":64},{"text":"So we gonna allocate a new array, twice as big and then the bad news is we copy the data into it. That's right.","width":768},{"text":"We gonna  take this data element and copy it, and now, the cool part is now there is nice space for out new data.","width":547},{"text":"Hey that's our algorithm.","width":128},{"text":"I'm gonna pretend that we did that for a while.","width":307},{"text":"And look what happen when this array is full and new data comes along.","width":576},{"text":"Okay?","width":254},{"text":"The algorithm was, allocate new space, copy data.","width":495},{"text":"I am doing this so it reenforce that you have to wait a long time.","width":346},{"text":"For me to even copy that data, right?","width":320}]