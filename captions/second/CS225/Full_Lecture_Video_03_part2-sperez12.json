[{"text":"Okay, now will the compiler like it?","width":64},{"text":"Will the compiler like it?","width":192},{"text":"Raise your hand if you think yes.","width":128},{"text":"Raise your hand if you think no","width":256},{"text":"Okay somebody who says no tell me why","width":256},{"text":"Why won't the compiler like it?","width":128},{"text":"A semicolon ( ; ) that's right! Very good. Hopefully I left the cursor in the right spot. You will get caught by that bug!","width":512},{"text":"Somebody will get caught by that bug and post to Piazza. Okay? It's not unusual. So I'm going to save it, and then go compile it. Bang C.","width":896},{"text":"Bang C here just says, \"take my history, look at my history of commands and do the last one that's started with a C.\"","width":576},{"text":"Okay - \"Do the last one that started with a C.\" And so,","width":256},{"text":"That invokes clang++ demo.cpp","width":256},{"text":"Okay? Compiler liked it. There were no errors.","width":166},{"text":"*Gasp* We can declare a sphere that is vacuous. It has no data associated with it. It has no functions associated with it. It was perfectly fine.","width":564},{"text":"Okay? Any question about it?","width":128},{"text":"At all?","width":64},{"text":"Uhh what happens when we go... that!","width":384},{"text":"Nothing! All we did was declare something we don't expect to be able to see. Now, it is true that things did happen in memory and that's going to be the substance of the lecture slides today, but for now we're still in the experiential mode.","width":960},{"text":"Okay so now, let's go make a sphere class that does some things","width":256},{"text":"All right, I didn't think about this part","width":209},{"text":"too much","width":128},{"text":"But I do want to go ahead and uhh... umm. Tell me the name of that function?","width":704},{"text":"Constructor, that's right.","width":128},{"text":"You look at it and you go, \"It's a sphere, duh.\" But this one has a special, more general name called a constructor and I can tell that it is so because it has the same name as the class name. Um the only other function that I'm going to take the time to instantiate or declare here is... uhh getDiameter.","width":1280},{"text":"And it will return a double, it needs nothing and if you recall, we specifiied that it had to have a const.","width":555},{"text":"And then we uhh represented our sphere using theRadius.","width":384},{"text":"All right so I think that this should be okay, umm...","width":320},{"text":"So let's compile... okay? You ready to compile?","width":447},{"text":"All right.","width":149},{"text":"Uh, first before we compile... maybe I'll do this first. What happens when you have no constructor? Well, yeah we'll leave it like that for now.","width":640},{"text":"UUuumm...","width":256},{"text":"C okay? Syntactically, we're in good shape.","width":389},{"text":"Am I surprised by that?","width":320},{"text":"Are you surprised by that?","width":320},{"text":"Why are you surprised?","width":142},{"text":"How about this?","width":128},{"text":"How about this?","width":64},{"text":"Umm what if I now say, umm double b = apple.getDiameter();","width":833},{"text":"I was a little surprised by that, could you tell?","width":133},{"text":"I had to do a little debugging here","width":195},{"text":"Now, now I'm in danger zone kay?","width":182},{"text":"This is a true shared experience um because friendships are especially good when you have shared experiences, which are kind of tense","width":507},{"text":"And you have to like, you know, deal with a, deal with an unknown and uh","width":266},{"text":"that's this moment soo","width":75},{"text":"Raise your hand if you think the compiler's going to yell at me.","width":192},{"text":"Okay, raise your hand if you don't think the compiler will yell at me because after all ","width":304},{"text":"I haven't really changed things very much","width":128},{"text":"Okay, I'm not sure. Um, I hope it yells at me. Okay? uhhh...","width":448},{"text":"Ohh Yeess look, yay okay! Do you see what happened here?","width":487},{"text":"The compiler said, hey you tried to use getDiameter, you tried to use getDiameter and there is no getDiameter! It made for me no getDiameter so the lesson here is that you can declare a function without implementing it as long as, somebody volunteer to finish that sentence...","width":1319},{"text":"As long as?  Yes? Right","width":256},{"text":"Right you don't use it.","width":128},{"text":"Pretty much period. pretty much you never call it","width":192},{"text":"The way to finish that sentence in a meaningful way is \" in client code \" because that's another little piece of vocabulary. The code that uses this object is client code.","width":674},{"text":"For the moment, the only client that we have here is main, okay.","width":256},{"text":"Any questions about that?","width":68},{"text":"Are you good?","width":64},{"text":"It's Okay? All right","width":109},{"text":"Uhh let's go","width":90},{"text":"So that says boy we better implement getDiameter","width":301},{"text":"Let's do that very quickly","width":192},{"text":"Uhh I need to connect getDiameter to the sphere class. It needs to be specified as const and I've already forgotten my return type there.","width":909},{"text":"Okay...","width":128},{"text":"*typing return 2.0 * theRadius; under getDiameter*","width":512}]