[{"text":"Um, so the, the, uh, name is going t- is the only thing missing. The type has to be integer, and the value, oh jeez, how do we give it value now? Because we no longer have x, right? Here's how we give it value.","width":1024},{"text":"We say: the value of p equals 42. Ok, so you go to p, you follow the pointer, and you put the value inside.","width":960},{"text":"Or in other words, p is a pointer. We ask for a new integer. It has no name, but it has, but it is a box. Okay?We assign that one to p, and then when you do this statement - when you do this - that says go to p, follow the arrow, give it value 42.","width":1472},{"text":"Yes, that's right. You still have to assign value to it, otherwise it is garbage. ","width":512},{"text":"And in fact, a constructor has gone - all constructor rules apply there. All right, yes?","width":320},{"text":" ","width":448},{"text":"Possibly, yes. And also, so that your data - so this memory - so, so the system is going to decide when you are done with p, based on the scoping.","width":896},{"text":"Like when you're done using p, when your function execution stops, p is gonna be gone. This won't be. This will persist, until you say you're doing using it, okay? ","width":640},{"text":"Yes?","width":128},{"text":"Um, if I have the right constructors made I can.","width":320},{"text":"So if I have a sphere class constructor that takes a radius, I can put a radius there.","width":576},{"text":"Ok, are we good? We're okay? I think the best way to get up to speed with this material is just to practice. So we're gonna spend a few minutes practicing, yes?","width":448},{"text":"Yes, so new - so I'll say this, because I think it's helpful.","width":320},{"text":"new is just a function in C++. It takes an argument. The int, the type, is the argument to the new function.","width":640},{"text":"Okay? What ki- what does new return? What does new return? Yeah?","width":384},{"text":"A something pointer. That's right. How do you know that?","width":320},{"text":"Because on the lefthand side you have to have a pointer. On the lefthand side of the assignment statement, you need a pointer.","width":384},{"text":"So, you know that new will return you a pointer type. Yes?","width":448},{"text":" ","width":64},{"text":"Oh, okay now you're asking, now you're asking for me to keep going. All right. ","width":576},{"text":"Um, I want to show you something that's very fun and that, um, is just part of your cultural heritage. ","width":320},{"text":"Uh, before we go on though...","width":384},{"text":" ","width":768},{"text":"Ok, oh.","width":256},{"text":"I'm much smoother about this this hour. Nope, nope, nope, nope. I don't want you... I want you. And...","width":896},{"text":"K, ready? Kay.","width":384},{"text":"Hey Binky, wake up. It's time for Pointer Fun.","width":192},{"text":"What's that? Learn about pointers? Oh, goody.","width":320},{"text":"Well, to get started, I guess we're gonna need a couple pointers.","width":192},{"text":"Ok, this code allocates 2 pointers which can point to integers.","width":320},{"text":"Ok, well I see the two pointers, uh, but they don't seem to be pointing to anything.","width":256},{"text":"That's right. Initially, pointers don't point to anything. The things they point to are called pointees. ","width":320},{"text":"And setting them up's a separate step. ","width":128},{"text":"Oh, right, right. I knew that. The pointees are separate. ","width":192},{"text":"Er, so... how do you allocate a pointee?","width":192},{"text":"Ok, well, this code allocates a new integer pointee, and this part sets x to point to it. ","width":448}]