[{"text":"You sitting down there's an exam and says ok, write a function that computes a tree. How would you do that?","width":595},{"text":"Go to web browser www.google.com? Better not do that on my exam. Alright yah. ","width":526},{"text":"Yeah. So it's longest path from root to the leaf. So to do this recursively, you're gonna have to think about ok, what's my base case? ","width":980},{"text":"Well if you get a NULL, that's a zero height tree. Now, what's your recursive case is gonna look like.","width":461},{"text":"You have a node that's not NULL, you go down the left side take its height, go down the rightside take its height. ","width":473},{"text":"What are you gonna do with that information? Come on, yell it.","width":427},{"text":"Yah compare them. And you're gonna take the biggest one right? ","width":406},{"text":"SO just take the max, and add one for the root that's your holding onto now, the nodes you're holding onto now and that's it.","width":512},{"text":"So, you return zero for the NULL, you take one plus max of the heights of the two children. How's that?","width":832},{"text":"Does this make sense to you everyone? Any questions? ","width":640},{"text":"You probably noticed by now, my lecture sounds very different than Cinda's. I like to do life codings, so if you have any questions or wanna see an example, we can just type it up and run it and see what happens.","width":965},{"text":"Ugh, so here move it down little more. So here's a tree, so 10 is the root, then 20 is one child then 15 and 25s. We want height. ","width":704},{"text":"Let's do this. Take this, paste it in. It's fun showing off. Come on.","width":1664},{"text":"Actually I'm not gonna be very good at showing off. I haven't programmed the C++ since I was undergrad here. So I actually don't remember half of this stuff that we used to do. I don't even remember there's actually a max function.","width":1664},{"text":"There it is, that's good. It'll look something like this. So, if we have something in here, we're just gonna return one plus max of the two things. Otherwise, we'll just return 0. ","width":1344},{"text":"Let's see if it compiles. It compiled, that means it works, right?","width":832},{"text":"uhm... well, let's move on actually. Oh you want me to run it? ","width":576},{"text":"That said three, uhm... that's right this time. Looks like it worked. Let's hook it to the space shuttle.","width":1472},{"text":"Alright now how about the sum of a tree? Pretty similar, right?","width":768},{"text":"Though, here it's NULL. That we'll wanna do for the NULL? No, you'll get a seg fault right? Null, you probably wanna return 0.","width":1024},{"text":"Uhm.. Otherwise, you return a data + sum of the left and sum of the right. ","width":640},{"text":"Good so far. Alright, your turn. On your handout, there's this crazy function that asks you to write. ","width":960},{"text":"So here's what we'll do. Spend maybe 2,3 minutes. Don't feel like that you gotta get every bit of syntax just right, but try to figure how to do it in about two minutes three minutes, I'll say something and then turn to your neighbor, compare your solution. Then after that we'll talk.","width":1472}]