[{"text":"How is this one implemented if you had to describe this implementation, how would you describe it? ","width":576},{"text":"Someone raise their hand and speak for the crowd. Yeah? It's a linked list, chained memory put together we're using it now to implement ListClass. Is there anything special about it?","width":960},{"text":"its not like MP3, we do not have previous pointers here.","width":448},{"text":"Typical way to describe this that you might have seen in your earlier class is a singly linkedlist","width":576},{"text":"We will refer this as a singly linkedlist implementation of a adt list","width":512},{"text":"Alright, lets see what we have then.","width":192},{"text":"We have a wave holding onto the front of it.","width":256},{"text":"A number of elements that it includes.","width":256},{"text":"This little find function that we're going to find helpful, that will be helpful to us. ","width":512},{"text":"Here is the implementation. Yes I changed the variable name but otherwise meh. ","width":576},{"text":"the compiler will help me so I don't worry about it, but do you see my bug here? These things are in the wrong order. ","width":1024},{"text":"And then we have this class defined. I was thinking about this last night and I think I should have been explicit. ","width":704},{"text":"When I demanded that our base cases be NULL, I should have actually assured you that we intended to have a no argument constructor for the list node class.","width":832},{"text":"I should have assured you of that.","width":192},{"text":"Alright, so this is an implementation of the ListClass together with one of the singly linked list together with one helper function.","width":896},{"text":"Now I have a question for you that I don't think you can answer yet. But I want you to think about it.","width":320},{"text":"We put this helper function in the private section of the list class definition. The question is why?","width":832},{"text":"Why is find() in the private section of the list definition. ","width":448},{"text":"Find is in private, why?","width":512},{"text":"Yeah? Right we don't want the user to know the implementation. Look this find() function completely betrays our implementation. Right?","width":2368},{"text":"It shows them we got a pointer base structure and you know built of nodes and furthermore, the way we have this set up, they can't access it. ","width":1088},{"text":"Because listNode is also private. So this listNode class that is so important to navigating our list, our implementation of the list.","width":1088},{"text":"It isn't even useful to the clients. That's ok they don't need to know that. They only need to know the positions inside the list. ","width":576},{"text":"Any questions about that?","width":256},{"text":"So why is find private? The answer is because it relies on the details of the implementation for its functionality and that implementation is hidden away from the clients. ","width":1024},{"text":"Anything else? Any questions about this? ","width":192},{"text":"Ok, lets see what is left on this page. Hold on.","width":384}]