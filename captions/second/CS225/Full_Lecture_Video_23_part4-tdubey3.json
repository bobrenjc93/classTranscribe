[{"text":"Um.. is going to be the people who's stuff is in the locker.","width":384},{"text":"ok?","width":64},{"text":"Now, I have a question for you.","width":192},{"text":"Given data that looks like this, what would be kinda of a reasonable implementaion for a dictionary","width":320},{"text":"What would be a reasonable implementaion for a dictionary","width":219},{"text":"And I'll give you a hint ... That the, uh, particular example suggests an implementation","width":591},{"text":"The particular example suggests an implementation","width":320},{"text":"What did you say?","width":172},{"text":"No?","width":64},{"text":"Suggestion was string and I said no?","width":209},{"text":"Yeah?","width":128},{"text":"A list of pairs no?","width":149},{"text":"Yeah?","width":64},{"text":"An array why?","width":128},{"text":"(silence)","width":192},{"text":"Because, say it louder Nathan.","width":192},{"text":"Yeah, very good, so we're indexing by an integer value moreover these values are pretty small","width":399},{"text":"And do not even tell me that you didn't walk through your high school locker room and go..","width":322},{"text":"Oh look I'm inside and array!","width":192},{"text":"(disappointing laughter)","width":93},{"text":"You didn't?","width":61},{"text":"Ugh...","width":128},{"text":"You will now!","width":148},{"text":"Next time you're in the locker room","width":109},{"text":"Ok, so, perfectly reasonable, perfectly reasonable, implementation of the dictionary","width":389},{"text":"Think how easy it would be to implement insert ","width":192},{"text":"If we had a private member called \"a\" you could say a[k] equales","width":503},{"text":"The name","width":51},{"text":"Right?","width":36},{"text":"D here","width":64},{"text":"For example, whoo hoo, that's cool","width":192},{"text":"The problem is we're not always so lucky","width":260},{"text":"We're not always so lucky that our keys are smallish integers","width":351},{"text":"so the thing that makes this possible is that these are smallish integers","width":470},{"text":"Ok? Rather we're going to be faced with situations where our keys come in arbitrary types, like, oh, camera models","width":658},{"text":"Or colors","width":64},{"text":"or","width":64},{"text":"Fight numbers, they've got, or URL's for heaven's sakes","width":256},{"text":"Right? These are not numerical values","width":157},{"text":"Now, we could convert them, probably, to integers, but that's a different, but that's a different question","width":448},{"text":"Because then, converting, them to an integer that's small enough to use an array for is a whole nother puzzle","width":590},{"text":"So, here's what we're going to do","width":211},{"text":"We're going to use a binary tree as a dictionary","width":256},{"text":"Ok? So I want to say... Oh, and here's how to intrepret this binary tree","width":421},{"text":"The contents in the nodes are keys","width":215},{"text":"So, this 8 right here is the key","width":256},{"text":"And behind every vertex there's like a bubble","width":320},{"text":"Ok? Say, it's space in memory, we can think of it as a bubble, where the data dwells.","width":448},{"text":"Or the value dwells. Ok? So, the data associated with every key is accessible if you find the key.","width":704},{"text":"Moreover, we're going to assume, that key's are unique.","width":384},{"text":"Ok?","width":320},{"text":"Alright. And the datas are.. datas are associated","width":320},{"text":"The data is ... datas are ... ugh.. data is available","width":512},{"text":"Given a key","width":256},{"text":"We don't care how","width":192},{"text":"We don't care how, it's the data in the array","width":192},{"text":"For example","width":72},{"text":"So we're going to implement these things, we're going to implement these things using a binary tree.","width":362},{"text":"Maybe it's that the node contains the node class contains a data field","width":354},{"text":"That's what you need to hear","width":64},{"text":"Ok","width":64},{"text":"So, here's what I want","width":102},{"text":"I want you to do a \"find\" of 4, returning the node associated with key value \"4\"","width":577},{"text":"What's your algorithm look like?","width":140},{"text":"Traversal? Very good. I heard somebody say traversal.","width":336},{"text":"So, we're going to go looking for a \"4\"","width":169},{"text":"(Cinda dropping beats)","width":80},{"text":"I don't see any fours","width":165},{"text":"Oh there it is!","width":192},{"text":"Here it is!","width":128}]