[{"text":"Size of the array! or how many items could be on the stack","width":576},{"text":"OK good, so we completely understand this implementation","width":192},{"text":"Then, finally, let's look at the functions themselves. ","width":512},{"text":"The way we have this set up, is so the bottom of stack in the array is at the front ","width":512},{"text":"or in position zero","width":256},{"text":"of the arrary","width":64},{"text":"OK, now, think about what that means","width":128},{"text":"It means that position, size. postision, size will always be one past the end of data, yeah?","width":704},{"text":"Alright, so, if you are going to push something on, where are you going to push it?","width":320},{"text":"into position size, right? That's where you going to place it, right?","width":384},{"text":"And you increment size","width":128},{"text":"So, size becomes, then, an indicator of the top of the stack","width":384},{"text":"It is the location of the top of the stack, or one pass. Whatever","width":256},{"text":"right? so it indicates top of stack","width":576},{"text":"any question about that?","width":128},{"text":"Is that clear?","width":64},{"text":"OK, uhg..That's essentially what that push code does.","width":704},{"text":"except for this part, which is what we are going to talk about in a second.","width":320},{"text":"Ok, lets talk about pop for just a second, before we go on.","width":448},{"text":"Notice that pop returns the value of the top of the stack","width":384},{"text":"and removes the top of the stack","width":128},{"text":"OK? so, what am I going to fill in here, the return value the thing we are going to return","width":512},{"text":"where? make sure you can answer this. make sure you can answer it.","width":384},{"text":"Where does it live? ","width":128},{"text":"size minus one, what's right. one to four","width":256},{"text":"size this element. ","width":128},{"text":"Alright, what's missing?","width":128},{"text":"Here, I left this line, what goes there? ","width":192},{"text":"decrementing size, that's good.","width":256},{"text":"and notice, that simultaneously, yes, I wrote code that says decrement size.","width":576},{"text":"What is really happening is, i move the top of the stack down","width":320},{"text":"The top of the stack is moved down","width":64},{"text":"OK, any question about any of that?","width":192},{"text":"I have a question for you. ","width":192},{"text":"uhmm. What is the running time of this thing?","width":192},{"text":"Running time of this one?","width":128},{"text":"Constant time. Absolutely.","width":256},{"text":"how about the running time of that one if you ignore the blue circling thing?","width":320},{"text":"the running time of this thing if you ignore the blue circling thing, is also constant time. ","width":576},{"text":"Now, that blue circling thing, that blue topological circle, topologically a circle. ughmm.","width":576},{"text":"So, yeah, is ugh, is a source for concern? ","width":320},{"text":"So, I am going to spend the next slide, the next slide alleviating the concern over the cost of grow array.","width":640},{"text":"OK? alright. So, we spent a good portion of time last time deciding on an algorithm for growing the array","width":512},{"text":"and the analysis that we did, I will be in hurry, the analysis we did led us to this picture.","width":576},{"text":"I am gonna remind you that our starting postion is an arrya with size of 1.","width":448},{"text":"We put data into it, because we can. That costs almost nothing.","width":448},{"text":"But, we have a problem when new data comes along.","width":256},{"text":"new data comes along. ","width":256},{"text":"OK? At that point, the algorithm is to, I am gonna put a little dot by it.","width":448},{"text":"What does that dot meam?","width":128},{"text":"I will use the word allocate, and you finish the sentence. ","width":320},{"text":"Allocate, somebody raise their hands","width":192},{"text":"to finish it.","width":64},{"text":"Allocate, these. Yes? A new array? yes, good! ","width":512},{"text":"how big?","width":64},{"text":"double the size, twice as big, that's right.","width":256},{"text":"So, we are going to allocate the array, twice as big, and then, the bad news is","width":512},{"text":"we, copy the data into it. That's right. So we are going to take this data element and copy it. Now","width":512},{"text":"the cool part of it is, Oh, there is a nice space our new piece of data.","width":320},{"text":"That's our algorithm.","width":128},{"text":"Alright, now, I am going to pretend it we did that for a while","width":320},{"text":"and look at what happens when this array is full. ","width":448},{"text":"and new data comes along. ","width":192},{"text":"OK? The algorithm was allocate new space, copy data, OMG.","width":640},{"text":"OK, I am actually doing this, so that it reinforces that you are having to wait long time for me to even copy that data","width":640},{"text":"right? OK. ","width":192}]