[{"text":"uh ha","width":128},{"text":"xu...","width":128},{"text":"very good two key points","width":192},{"text":"we need the client to be able to use this function to give it the insert date into the structure dot","width":448},{"text":"and when you look at the parameters they are public variable none of them are private to list class okay","width":512},{"text":"now let's talk about elegance, last time when we talked about our first implementation of inserting into this linked memory implementation of a list","width":832},{"text":"we had a complexity with inserting at the front of the list ok so","width":512},{"text":"every place cells inserting every place cells other than the front was a matter of ","width":448},{"text":"positioning a pointer before the node we want to insert and creating the new node readjusting pointers that set up","width":704},{"text":"but there is a special case in the case of inserting at the front so I am gonna write it down for a second ","width":448},{"text":"so our old technique","width":192},{"text":"for inserting","width":320},{"text":"creates a special case","width":384},{"text":"out of inserting at the front","width":768},{"text":"now the way we diagnose that the special case is by putting in the conditional","width":640},{"text":"the whole code was if ","width":192},{"text":"this okay that's a problem","width":256},{"text":"later on in your suffering generic experience you learn about a uh...","width":576},{"text":"a contact called cyclematic complexity and it basically has to do the conditional branching the amount of conditional branching in your code","width":640},{"text":"every time you can redo an if statement every time you can get rid of the neat conditional and a if statement ","width":704},{"text":"you reduce the cyclematic complexity or the branching of the program magziqusion of your code ","width":448},{"text":"now you might not care about this until I tell you","width":256},{"text":"that when you writing code, you have to write a test case","width":320},{"text":"for every possible conditional branch in your code","width":384},{"text":"now I","width":64},{"text":"don't know about you but I hate writing test cases","width":512},{"text":"It's tidious I don't want to think about it","width":192},{"text":"and so if you don't this many that is cyclematic complexity if your code is lower then you relive yourself of that responsibility ","width":576},{"text":"okay so think what we did even in this case, we don't have to write a test case for inserting at the front of the list different from inserting anywhere in the list because","width":640},{"text":"everywhere we insert is the same now how do we do this","width":256},{"text":"ideal, how do we make it happen the answer is we put a node, a sentinal node","width":768},{"text":"at the start of our list","width":192},{"text":"now what is this node It's nothing","width":128},{"text":"It's data is garbage","width":384},{"text":"there is nothing meaningful in it in fact we can't put anything in ti because it's just a list node","width":576},{"text":"if is a list node and we don't know what kind of thing list node hold","width":320},{"text":"so we just let that be garbage we don't care what its data is okay? all right","width":448},{"text":"so it's called the sentinal node we put it the start of the list gives in the insertion that means it gives us the fact that inserting is the same no matter where we are going to do it","width":960},{"text":"in the first in an a whatever any question about that","width":256},{"text":"said okay is it better?","width":320},{"text":"I hate tail","width":64},{"text":"ok all right what's the process for inserting is I say inserting into position 1 element eight","width":768},{"text":"eighty-five just to make sure difference then what is this code do","width":448},{"text":"is takes that many steps forward from the start so this is still head","width":640}]