[{"text":"Any Questions, About it? Alright, Alright fine.. ","width":384},{"text":"Then to remind the system to tell the system that uh you want to free or get rid of or ","width":448},{"text":"I would give back to the system for reallocation","width":256},{"text":"a block of memory, you put the square brackets here","width":192},{"text":"ok... I believe the compiler catches if theres incompatibility","width":320},{"text":"If you used square brackets up here but you didnt use them there, I believe clang catches it","width":384},{"text":"Yes?","width":256},{"text":"Sure? What?","width":384},{"text":"Yup you can still use square brackets, yup, if you've used square brackets in your declaration or in your request for space","width":576},{"text":"If you've used square brackets in your new statement, you can use square brackets  to find your elements of your array, Yes?","width":448},{"text":"Um, if you go passed it, probably a segfault","width":640},{"text":"okay?","width":64},{"text":"Its not as, it doesn't know exactly what you're trying to do, but you probably going to access memory that isn't allocated there, okay?","width":512},{"text":"Yes! ","width":128},{"text":"Ahhhhh okay, so the question is, well that looks kind of static right? We said how big we wanted it to be and we asked for it and how do we change that and the answer here is we explicitly are going to ask for the larger space, so if all of a sudden we decided we needed 3000 of these integers instead of 3, our algorithm- and well talk about this explicitly later- but our algorithm is going to be to ask for 3000 copy the values over and then we've got 2997 extra okay? So that's, that's our  algorithm here, there is","width":2368},{"text":"We don't use a graceful way of extending the space cause we don't know what the heap looks like, we don't actually know if there is space to extend. Right?","width":640},{"text":"Alright, uhh, lets see, one more thing I wanna say here, umm, that will get at your reasoning about this, My question for you is simply","width":704},{"text":"What happ, jeez, you guys are gonna like get whiplash, ouch","width":448},{"text":"Uhh, what happens if you say cout, uhh, the value of x","width":448},{"text":"What're you gonna get? Yeah?","width":384},{"text":"Ohh, you would wish","width":192},{"text":"right?!","width":64},{"text":"You wish it prints the whole array!","width":192},{"text":"Optimistic soul, thats a rep reflection of an optimistic soul","width":320},{"text":"What do you think it does? What?","width":192},{"text":"No. Yeah?","width":192},{"text":"Yeah? Only the first value, thats right! If I covered up","width":384},{"text":"If I covered, If we weren't talking about arrays and I covered up all of this, then this cout statement would say, find your variable x of integer pointer type, right? deference it","width":960},{"text":"and show me the value thats there, the value thats there is 3! So thats what we would get","width":576},{"text":"Now, would we ever do this? That would be weird, instead we would do","width":384},{"text":"Cout << x[0]  << endl because after all it is an array","width":640},{"text":"Okay? Any Questions? Yes!","width":512},{"text":"Where? Here? Oh! So his question is, his question is, you don't have to dereference x, x is the pointer. And my response is I did dereference it, I did dereference it! That Square bracket is a dereference and 0 steps forwards","width":1152},{"text":"Okay? So, yes I do have to have dereference it, I did!","width":192},{"text":"Okay? Alright, did question, any other questions? Yes?","width":384},{"text":"What does the delete statement do? What do you hope it does?","width":256},{"text":"Gives back the entire array to the system to be used for future allocation! Okay? So the next time somebody asks for some, yes?","width":832},{"text":"Ahan, what did you say? ","width":448},{"text":"If I had 2x as the address of x[1], oh boy so that would be, ummmmm, ","width":512},{"text":"The address of x[1], like this, probably","width":384},{"text":"You don't usually have a reason to do that, You are usually interested in the values on the heap, okay?","width":448},{"text":"But, That is what you would do its still just a way of referring to that block of memory","width":448},{"text":"Okay? Alright, how are we, yes?","width":256}]