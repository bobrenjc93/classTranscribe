[{"text":"OK. umm. OK, here we go. ","width":960},{"text":"So I redirected the memory and reassigned it to work perfectly fine. ","width":640},{"text":"Alright, yes, you're free to ask questions now  ","width":320},{"text":"That's right. Q no longer has as it's same target, P. It's still pointing off to where it was before, it didn't follow along.","width":640},{"text":"Okay? That's actually a really good point. Let's draw this picture really quickly","width":640},{"text":"That's actually a totally valid point.","width":320},{"text":"Alright, so, P = new int","width":448},{"text":"We delete P.","width":576},{"text":"Set P = null. Nice.","width":320},{"text":"And now we reuse P. So now, we say \"Okay we changed our mind, we'd like to use P again\"","width":512},{"text":"And we're going to put 42 in there. Q still points over here.","width":384},{"text":"Q is still just a pain in our side. Kay? So. How do we solve that?","width":320},{"text":"This should be a gimme at this point. How do we solve the Q pointing there? q = null, that's right.","width":448},{"text":"And a reasonable place to do that would be at exactly the same place we said P = NULL","width":384},{"text":"So, the minute you couple the two variables via an assignment, you want to keep note of that fact. Yes?","width":512},{"text":"Oh, geez, then it's working for no good reason!","width":384},{"text":"Right? So, then your things are tangled up still, but they happen to work correctly ","width":448},{"text":"So this issue of being responsible with your memory is actually quite deep.","width":448},{"text":"Yes?","width":64},{"text":"","width":512},{"text":"Yeah, you can, so you can mess up your friends, yes.","width":192},{"text":"And this is a security flaw, this is a common... when people are looking for exploitation of C code this is the kind of thing they look for.","width":704},{"text":"Access to pointers that haven't been cleaned up.","width":192},{"text":"Yes.","width":64},{"text":"","width":384},{"text":"Yep. Because then they're just sitting there and they're both separate.","width":192},{"text":"","width":256},{"text":"Then that couples them back together","width":256},{"text":"Oh! If P is equal to.. is q already null?","width":256},{"text":"","width":128},{"text":"Yeah, that's fine. That sets q equal to null.","width":256},{"text":"So then they're decoupled.","width":64},{"text":"Right, that's right.","width":128},{"text":"NULL breaks everything. NULL breaks all association. It is a perfect place to start and end with your pointer variables. Yes?","width":576},{"text":"","width":576},{"text":"Yep","width":64},{"text":"Yep","width":64},{"text":"Yep, so from the start you're kind of toasting yourself. Oh! And this is a good reason...","width":576},{"text":"Novice programmers, new programmers like to assign extra variables for everything.","width":576},{"text":"Like \"Oh I don't have something pointing to that, I'll just make one.\"","width":192},{"text":"And the danger in doing so is that you do lose track of the way that things are coupled. ","width":384},{"text":"We test you on this in MP3. MP3 has a crazy confusing function in it that is really only crazy confusing if you give yourself 150 extra variables","width":1216},{"text":"and it's very tempting to do so, but you don't have to. ","width":128},{"text":"So, using fewer references or pointer variables is a good idea.","width":384},{"text":"Use the ones you have. Understand what they're for. Don't do gratuitous variables just because you think you might need them.","width":448},{"text":"Okay","width":64},{"text":"Yes?","width":64}]