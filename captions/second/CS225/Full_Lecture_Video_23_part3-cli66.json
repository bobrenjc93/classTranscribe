[{"text":"Because this worked, because we is that right? Yes we didn't do a dereference there","width":576.4},{"text":"Yes we do yes we do oh no we don't ","width":704.4},{"text":"No cus its while its not empty","width":320.4},{"text":"OH","width":64.4},{"text":"We absolutely do, I'm confusing my empties with my NULL","width":320.4},{"text":"We absolute do need it because what you're thinking what I'm thinking that by putting NULL there the tree is still empty but its not","width":640.4},{"text":"So on that, darn it, on that first iteration, on that first iteration, here, the queue is not empty right?","width":704.4},{"text":"its not it has a null on it cus we put it there","width":256.4},{"text":"So the question is about how how quickly these things evaluate how do you know that onqueue and dequeueing doesnt happen super quickly","width":3968.4},{"text":"So we're talking about the difference between constant factors here, asymptotic ","width":384.4},{"text":"The actual difference between empirical running times depends on you know whether you are running this in the cloud if you have implemented your queue as an array or linked list","width":1152.4},{"text":"constant factors","width":192.4},{"text":"So I'm saying that inherent value of the algorithm which we measured ignoring constant factor is not different one way or the other","width":832.4},{"text":"It's always reasonable when you have two equivalent asymptotic algorithms to give them a head to head run simulated run in your context if it really matters how fast they are ","width":1088.4},{"text":"You do have to have a condition and the conditional should be around whatever you put in the queue","width":1664.4},{"text":"sorry","width":128.4},{"text":"the conversation we just had about binary trees and about traversals was really more one of implementing an algorithm we're going to step back for a second and talk about an abstract data type I think I am coming to believe or coming to feel perhaps that this abstract data type is the most important one that we use at sort of day to day programmers","width":2304.4},{"text":"and this genesis of my feeling about this dictionaries comes from my affection for python and getting things done","width":640.4},{"text":"classic understanding that will play into it that when you are programming in other languages","width":1344.4},{"text":"im so glad I know this stuff","width":128.4},{"text":"so the abstract data type that we're going to be interested in is a dictionary","width":320.4},{"text":"The interface to a dictionary is at the bottom we're going to insert remove and find by an user identifier","width":576.4},{"text":"commonly refer to a key","width":256.4},{"text":"so the abstract data type itself is consists of the data looks like key, value, pairs, and the interface the functionality of the ADT by the unique identifier","width":1408.4},{"text":"I want to speculate for a second, on if I have the following data, how would we reasonable to implement a dictionary?","width":1216.4},{"text":"My data here is a locker number this is my ","width":512.4},{"text":"this is my key ","width":320.4},{"text":"and the values that I'm going to put into","width":192.4},{"text":"the dictionary or attach to each identifier, I'm going to refer to here as my data though its commonly referred to its value","width":768.4}]