[{"text":"You have k. And then I'm going to do this thing too. And I'll explain it a little bit more","width":512},{"text":"It's because I want to look at what happens","width":384},{"text":"Ummm.","width":320},{"text":"OK! Any questions about any of this code? Yes?","width":512},{"text":"Oh probably. Where? Oh in my implementation.","width":320},{"text":"*gasp* You're my compiler! Yay! Thank you! What's your real name?","width":640},{"text":"I don't think you go by clang right?","width":64},{"text":"It would be a good name though right?","width":64},{"text":"Who are you?","width":64},{"text":"Kevin nice to meet you","width":128},{"text":"Ok, alright, yes, you make a correction you run the risk of public, and now we're friends cause we have a shared experience! ","width":512},{"text":"Ok, alright, any question about any of this code? Yes?","width":512},{"text":"Isn't that the question on the board? Kay, lets go back to our discussion on constructors","width":832},{"text":"Let's think ahead of time here. Go back to our discussion on constructors.","width":256},{"text":"If we don't give a constructor, the system provides us one,","width":384},{"text":"But we didn't control how the object was constructed","width":256},{"text":"I actually don't know, standing here, what clang will do. It's a compiler specific thing","width":512},{"text":"I think it's virtual C++ does always really nice things which means that people who format their first language tend not to program very defensively. It's like training wheels  for your life, right?","width":896},{"text":"So not to disparage it, it's nice. It's nice to have a controlled environment.","width":192},{"text":"And so, I'm sitting here, having messed with this particular compiler which version of clang it is.","width":576},{"text":"So I'm going to go check just with you, to see what clang does upon that initialization that I had no control over","width":448},{"text":"Uhh, let's go see!","width":192},{"text":"Ok, it liked it","width":256},{"text":"We had no syntax errors, no type errors","width":128},{"text":"a.out!","width":192},{"text":"Oh and it gave us zero","width":192},{"text":"So it happened to have initialized that particular double","width":128},{"text":"to be zero","width":128},{"text":"I don't know what would happen if we tried to do math on it","width":384},{"text":"I don't want zero to be the default value","width":256},{"text":"So, any question about that? So clang kind of played nice there","width":448},{"text":"You cannot count on it doing so. Yes?","width":320},{"text":"Yes. It's supposed to be. It's so supposed to be","width":256},{"text":"So the virtual machines that we give you for this class and is part of the download for the laptop labs","width":384},{"text":"should contain the environment, the same environment that the engineering workstations use","width":448},{"text":"So clang should be. I think we didn't upgrade to 3.6 so I think it's 3.5","width":512},{"text":"I dont rememver","width":128},{"text":"For which, for main?","width":448},{"text":"Um, so here's what happens, if you don't specify a return value, one is inferred unless you try to use it.","width":640},{"text":"So for example, if I didn't try to assign from getDiameter, I think this is true, it wouldn't have mattered, had I put it there","width":640},{"text":"In any case, those kinds of errors are compiler errors","width":192},{"text":"So the compiler will say yo! You forgot your return type and I need it so that's an easy one. You go \"That's an easy one! I fixed all my bugs\"","width":512},{"text":"So, that's a case where and I dont even necessarily know, I just count on the compiler to tell me what it needs.","width":576},{"text":"Ok, lets see, so, lets implement a constructor","width":448},{"text":"Um, where can I define the constructor? Where can I implement the constructor?","width":448},{"text":"Where can I implement it?","width":128},{"text":"Could I implement it down here?","width":256},{"text":"Let's try it","width":128}]