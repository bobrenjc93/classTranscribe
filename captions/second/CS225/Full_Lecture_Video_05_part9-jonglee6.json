[{"text":"We get faster execution. Right. One on the right really does have extra work being performed . Any questions? ","width":668},{"text":"So, we prefers stacks memory when we can. ","width":320},{"text":"Alright Let's keep going.","width":130},{"text":"So the most of what we have been talking about today refers to primitive type. So I want to spend a couple of minutes talking about pointer as it relates to user-defined types. ","width":768},{"text":"So I created a new little class appear. it has three private variables. Name Picture, and Boolean function to indicate if it gets done or not. I don't even know what that means","width":896},{"text":"I guess I could ask you. Are you done? Tim are you done today?","width":327},{"text":"You are done attribute is true. But we are not done So I am gonna keep talking","width":605},{"text":"Alright So now, question is what is the behavior when we are talking about objects. Let's review that happens if there is not pointers. Here is a little bit of summary.","width":820},{"text":"We have face A and face B declared. And I am going to initialize B. Raise your hand if your name starts with B","width":768},{"text":"Okay What is your name?","width":128},{"text":"Brian. Okay . B is Brian","width":433},{"text":"Your picture, Are you smiling Brian? YES now he is. ","width":418},{"text":"There is a picture. Brian are you done? So true..","width":320},{"text":"Now What we are curious about. what happens when we do that assignment statement.. In C++, it's so awesome","width":926},{"text":"A member-wise copy is made of the object. ","width":704},{"text":"So, ","width":64},{"text":"Each of these members are copied as it knows how to copy itself. So string knows how to copy themselves. Part of string class definition, we will talk about it later.","width":1216},{"text":"And so Brian's name is copied to the space","width":283},{"text":"P and G knows how to copy themselves.","width":448},{"text":"Know every pixel associated that P and G copied over presumably that is how it is done","width":417},{"text":"Similarly, copy booleans are super easy.","width":303},{"text":"And now when we refer to a dot set name. We are referring to that memory location. ","width":640},{"text":"Presumably, we can change A's name and Brian look alike, but they are not.","width":707},{"text":"Any question about that? Anything surprising or issues?","width":320},{"text":"Let me ask you this. How long does this take. Do you like this?","width":465},{"text":"You know, it is kind of unavoidable. But copying pictures might take awhile","width":453},{"text":"So there is that issues. But otherwise, that is just fine. Let's contrast it if we have things to do declare pointers instead","width":743},{"text":"So we have face pointer C, and face point D. Raise your hand if your name starts with D","width":512},{"text":"What's your name? David. So we are going to initialize the value of D, David and are you happy?","width":836},{"text":"Yea, you are happy and you are wearing glasses. Okay. And are you done?","width":547},{"text":"Yes, you are done. And that means D's values are pointing to it. ","width":631},{"text":"So presumably D equals new face. ","width":172},{"text":"* dot set name david is etcetera","width":412},{"text":"Now we are going to do C equals D","width":304},{"text":"So C's pointer points to same thing D does. ","width":320},{"text":"C gets the value of D","width":256},{"text":"And now, when we say C set name to Carlos.","width":576}]