[{"text":"Alright. Any question about it? Yeah?","width":320},{"text":"Oh yeah this only applies to a singly linked list. I just want you to think okay?","width":512},{"text":"Plus, who wants to keep track of all those extra pointers when we don't have to. It's just gonna mean that you're gonna have bugs, okay?","width":640},{"text":"Alright, let's see. What's the running time of on queue then? Constant time if we set it up correctly Oh no it's dequeue","width":704},{"text":"Either way. So constant time either way. What is the running time of dequeue? Constant time if we are careful. ","width":704},{"text":"Alright. And that's all what I am going to say about the linked list implementation of a queue. Is that okay? I am assuming that this time you can write the code because it's just about like inserting at the front. Yes?","width":1024},{"text":"Um. So this is a queue. So, the entry point is gonna be  the opposite of what you choose for exit. So if we have to be careful with the exit and the entry is the other one. Now, what you might be asking about or what is relevant question is what if you have some structure that allows entry and exit at either end and that's called a dequeue or double ended queue. And it's a real thing. I mean it's like I think of it as a perfect test question. Because it's something that we don't spent much time on but it's perfectly within your grasp in terms of reasoning about how you should implement it. ","width":3264},{"text":"So, that issue that you bring up even though you didn't intended is actually germane. Okay?","width":512},{"text":"So any other question about this?Yes?","width":448},{"text":"I am gonna throw that to the crowd okay? cause it's a great question. So the question is if we augment our structure, and the choice of ink color here is a clue. If we augment our structure with a tail before tail. ","width":2560},{"text":"If we augment it with that do we eliminate the problem of having to reset the tail pointer? Well, we do but then, we have a problem because we have to reset the throw back thursday pointer right?","width":1152},{"text":"So, yeah it solves one problem but creates another.","width":576},{"text":"Alright, any question about it? Okay. Let's see. So, the array based implementation of the queue... ","width":1920},{"text":"Just observe this. Meditate for a second. Get in touch with the arrayed based implementation of a queue. I do know what I was gonna say about it. Okay, so any question about the set up here?","width":832},{"text":"You can look at it. Oh she must've copied and pasted it right?","width":384},{"text":"This slide looks a lot like a stack. Interface has all the same data associated with it. The question is what might we be talking about here? So, let's spend a few minute kinda speculating on how we might we use an array for the queue. ","width":1344},{"text":"Now, just like we did for the linked list implementation we need to decide where is going to be the entry and where is going to be the exit for our data, okay? Um, let me make sure I don't do something stupid here","width":1472}]