[{"text":"yeah?","width":192},{"text":"right","width":320},{"text":"we have to return a value or grab this value","width":320},{"text":"for returning and then decrement the size, that is","width":320},{"text":"pop, piece of cake","width":128},{"text":"alright so now let's talk about this issue of growing the array some how","width":384},{"text":"of ","width":128},{"text":"ok","width":128},{"text":"so this discussion were about the have applies not just for stack but also for queue","width":640},{"text":"any structure that uses a dynamic arrary","width":128},{"text":"list too I just opposite it for list I said we are not gonna talk about it","width":448},{"text":"so here is the scheme","width":128},{"text":"suppose your array is full and another piece of data comes along","width":512},{"text":"the idea is going to be","width":384},{"text":"that we are going to allocate some new space","width":320},{"text":"copy over the data from the old space","width":320},{"text":"copy the data from the old space","width":320},{"text":"and then insert the new space in its position in this large array","width":384},{"text":"and then of course free up your space and rename the new space","width":384},{"text":"okay","width":64},{"text":"do you like this?","width":192},{"text":"...","width":128},{"text":"okay","width":128},{"text":"the whole copy the data thing","width":256},{"text":"that should make you creanch","width":192},{"text":"copy the data that hurts ","width":64},{"text":"so our goal is to make the copy the data something that is rare","width":448},{"text":"our goal is to make it rare and somehow still make it","width":384},{"text":"so that we can accommodate flexible data size","width":192},{"text":"okay","width":64},{"text":"so how do we do this resizing","width":192},{"text":"let's look at three different options","width":192},{"text":"okay?","width":64},{"text":"for simplicity all of these resizing scheme are going to start with an array of size one","width":448},{"text":"then go build from there","width":192},{"text":"we are always gonna start with an array of size one ","width":128},{"text":"after it fills ","width":128},{"text":"we'll do copying moreover in analyzing this particular resizing shceme","width":448},{"text":"we are only care about the copying that happens","width":384},{"text":"the inserting new data would have to happen anyways","width":192},{"text":"so it's sort of the extra work we gonna count for","width":192},{"text":"alright so ","width":128},{"text":"let's say that our resizing scheme says ","width":384},{"text":"if new data comes along if your array is full and new data comes along","width":448},{"text":"it is supposed to look like a person did you get that?","width":256},{"text":"can you tell","width":64},{"text":"if your array is full and new data come along","width":320},{"text":"then what you gonna do is make an array just big enough","width":384},{"text":"then copy and insert","width":192},{"text":"that's the first scheme","width":128},{"text":"and the question is how does this scheme do","width":320},{"text":"over a sequence of and pushes to the structure ","width":384},{"text":"so this bottom role is suppose to indicate n","width":320},{"text":"alright","width":256},{"text":"so let's look at this ","width":256},{"text":"in the first case","width":64},{"text":"one thing get copied in the second case","width":192},{"text":"two things get copied","width":256},{"text":"in the third case three things get copied","width":192},{"text":"so we can write a expression that capture the amount of copyings","width":448}]