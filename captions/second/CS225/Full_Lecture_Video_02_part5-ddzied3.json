[{"text":"Okay, so the comment is, I believe, you'll have to correct me if I am wrong, that that name matches this name.","width":768},{"text":"And that is absolutely germane. It's probably the most important point because what I am really doing here is creating the code that will make that declaration on the left work.","width":704},{"text":"Okay, it's creating the code that will say what happens when that function is invoked. Okay fine, I am not too surprised about that.","width":704},{"text":"Anything else here? Yes, okay look at, this wasn't here. You can look back - I didn't do that when I declared this here. So that's different, I'm gonna talk about it in a minute.","width":1152},{"text":"Okay, what else looks weird here? What else looks unfamiliar?","width":448},{"text":"What the heck is the double colon about?","width":320},{"text":"Okay, that's called a scope resolution operator.","width":320},{"text":"And here's what that says. That says that this setRadius is the setRadius declared in the sphere class.","width":1280},{"text":"It's not the one declared in the circle class.","width":192},{"text":"It's not the one declared in the arm class.","width":384},{"text":"You get it?","width":128},{"text":"Doesn't your arm have a radius? Yes, okay.","width":256},{"text":"Like if you have a broken arm, you set the radius, right?","width":448},{"text":"Fine.","width":64},{"text":"Tough crowd.","width":128},{"text":"Okay fine, so this setRadius is the one associated with the sphere class. So if you saw something here that was attached via the scope resolution operator to another class, it's not the one you are interested in. Okay.","width":960},{"text":"I am not going to talk about const yet, I'll talk about it in a minute. Suffice to say that the scope resolution operator attaches, or associates, a function to a class.","width":960},{"text":"Alright, so let's set the radius.","width":320},{"text":"What code do you think we would have to do if somebody tells you \"here's a new radius\". How would I set the radius to be that value?","width":704},{"text":"That's it, that's the code!","width":832},{"text":"It can be, it can be.","width":448},{"text":"It can be but they are not inside the same code block.","width":256},{"text":"By convention, not because we have to, but by convention, we stick these implementations into a different file. Remind me to talk about that again before I advance the slide. Alright.","width":1472},{"text":"Yes?","width":192},{"text":"Yeah, I might want to because what this allows right now is I can say bball.setRadius(-4.7). Right? And so this is our chance, our opportunity to do some error handling here.","width":1664},{"text":"So maybe I might want to say","width":128},{"text":"If newRad is greater than zero do this, otherwise theRadius - what should be a default radius?","width":1088},{"text":"Yeah?","width":384},{"text":"Yeah maybe one","width":128},{"text":"Or just leave it. Don't make a change, but then you'd want to tell somebody you are doing that. In any case, this is not exactly how you handle errors.","width":640},{"text":"Alright, so I want to make a comment here. In this class, we are not going to talk a lot about exception handling.","width":512},{"text":"Okay?","width":64},{"text":"We have too much to do, and so, we are not a software engineering class, so.","width":512},{"text":"C++ has mechanisms for exception handling. You can Google them. ","width":320},{"text":"You'll be better at Googling them after you go through these first four weeks of the course.","width":320},{"text":"So, wait, let us handle exceptions in kind of a novice way for now and if you have questions about it later, we can discuss it.","width":768},{"text":"Okay","width":64}]