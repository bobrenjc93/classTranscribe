[{"text":"The name is the only thing missing.","width":508},{"text":"The type has to be integer, and the value, oh geez!  How do we give it value now because we longer have x right?","width":519},{"text":"Here's how we give it value.  We say the value of p equals 42.  So you go to p, you follow the pointer and you put the value inside.","width":881},{"text":"In other words, p is a pointer, we ask for a pointer, it has no name but is a box.","width":493},{"text":"Ok, we assign that one to p, and then when we do this statement, that says go to p,","width":496},{"text":"And then when you do this statement, follow the arrow, give it value 42.","width":532},{"text":"Yes, that's right.  You still have to assign value to it otherwise it is garbage, and in fact all constructor rules apply there","width":802},{"text":"Yes ....... possibly.... yes, and also this memory, so the system is going to decide when you are done with p based on the scoping","width":1243},{"text":"so when your done using p and your function execution stops, p is going to be gone.","width":589},{"text":"This won't be.  This will persist until you say that you are done using it.","width":147},{"text":"Yes, if I have the right constructors made, I can. So if I have a sphere constructor class that takes a radius, then I can put a radius there.","width":836},{"text":"Ok, are we good?  I think the best way to get up to speed with this material is to just practice.  ","width":620},{"text":"So we are going to spend a few minutes practicing.  ","width":360},{"text":"Yes, so I'll say this because I think it is helpful.  So new is just a function in C++. ","width":331},{"text":"It takes an argument.  The int , the type, is the argument to the new function.","width":411},{"text":"What does new return?  What does new return?  Yes, ... a pointer.","width":501},{"text":"How do you know that?  Because on the left hand side you have to have a pointer.","width":358},{"text":"On the left hand side of the assignment statement you need a pointer, so you know that new will return you a pointer type.","width":414},{"text":"Yes? .......... Ohhhhh ok, now you asking me to keep going ok?  I want to show you something very fun that is just part of your cultural heritage.","width":1062},{"text":"Before we go on though....","width":366},{"text":"Ok...","width":701},{"text":"I'm much smoother about this hour.  I don't want you, I wan't you.","width":773},{"text":"And...          Ok, ready!  Ok!","width":256},{"text":"*POINTER VIDEO BEGINS*","width":64},{"text":"Hey Binky!  Wake up! Its time for pointer fun.","width":1015},{"text":"What's that?  Learn about that? Learn about pointers? Oh, goodie!","width":284},{"text":"Well to get started,we will need two pointers.  Ok, this code allocates two pointers which can point to integers.  Ok, well, I see the two pointers but they don't seem pointing to anything","width":668},{"text":"That's right.  Initially pointers don't point to anything.  The things they point to are called pointees.","width":224},{"text":"Setting them up is a seperate stem.  Oh, right.  Pointees are separate.  How do you allocate a pointee?","width":384},{"text":"Ok, well this code allocates a new integer pointee, and this part sets x to point to it.","width":489}]