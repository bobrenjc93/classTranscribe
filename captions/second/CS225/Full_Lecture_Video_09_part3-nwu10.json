[{"text":"okay. Alright, fine, so help me debug this","width":192},{"text":"Couple different ways you can debug it","width":192},{"text":"I think","width":64},{"text":"It would be relevant","width":192},{"text":"Clearly, there's a type mismatch","width":192},{"text":"Right?","width":128},{"text":"Yeah?","width":64},{"text":"Right that's right. So we want to be looking at the memory address, right? The location in memory, the only time this is really truly broken is if they refer to the same location in memory","width":960},{"text":"So, we're gonna say, the address of the right hand side, so this is not the same as the address of the right hand side","width":512},{"text":"We'll talk about that in a little bit","width":128},{"text":"Ok, we're going to clear out the left hand side, gee, we have written this code before","width":384},{"text":"So I'm gonna go head and do it, we're just going to delete ","width":320},{"text":"The attributes","width":192},{"text":"Do I need to go through that array and free up the space associated with the string? ","width":448},{"text":"No, because they're just strings. They are not string pointers that we allocated the memory for, they're just strings","width":576},{"text":"each string might have dynamic memory associated with it, but it's not our responsibility to deal with it","width":512},{"text":"The string class can deal with it","width":128},{"text":"Okay? Any questions about that?","width":64},{"text":"Alright, fine, and now we need to copy the right hand side ","width":320},{"text":"So let's see if I can do this, um, the radius ","width":320},{"text":"equals right hand side","width":320},{"text":"the radius","width":128},{"text":"yes somebody told me about that","width":320},{"text":"woah","width":192},{"text":"numAtts equal right hand sides","width":704},{"text":"numAtts ","width":128},{"text":"atts equal new ","width":704},{"text":"string ","width":64},{"text":"how many of them do I want","width":192},{"text":"Good","width":128},{"text":"and then, for i int equals zero","width":512},{"text":"less than numatts, I don't know why I am narrating this","width":384},{"text":"Okay. Yes? ","width":960},{"text":"You write it faster than I did?","width":192},{"text":"Haha","width":192},{"text":"Okay","width":128},{"text":"So, while I was doing this, I had that feeling that you should have when you write code and you're writing code that you have written before","width":576},{"text":"If you're writing code that you have written before, you should be going, why am I writing this again? Why am I doing this again? And you should make for yourself a function that you can invoke in each case","width":704},{"text":"In fact, we're going to do that here. We're going to ","width":320},{"text":"Go ahead and pull this out, and put it into a member function called copy","width":576},{"text":"Uh, who's return value what kind of return value do we want for it? ","width":512},{"text":"Nothing. We don't need anything. ","width":256},{"text":"And it's code is merely this, ugh, that code ","width":384},{"text":"So this goes right in here","width":128},{"text":"Now, I have a question for you.","width":128},{"text":"Okay? Any questions about it? ","width":128},{"text":"Yes","width":64},{"text":"I don't know what you're talking about","width":1024},{"text":"Alright. Any questions about it? Is it okay? I have a question for you","width":704},{"text":"So this is a sphere class member function, which means when we actually do the implementation we're gonna scope it to the sphere class, much like those are. Now if this is a sphere class member function, it means that it needs to be declared inside the sphere class itself","width":1088},{"text":"Is it public or private","width":128}]