[{"text":"It is not called insert because it is not a generalized notion of inserting into the structure.","width":384},{"text":"We do not have the flexibility of putting the data wherever we want","width":512},{"text":"It has to go at one end of the linear structure.","width":192},{"text":"Similarly for pop, pop is a remove that it is not a generalized remove at all.","width":256},{"text":"It's going to give you a particular value from the stack that is the thing happens to be on top","width":768},{"text":"Now this is the interface or the abstract data types struct.","width":512},{"text":"You may see some modifications of this ","width":128},{"text":"For examples, sometimes pop does not actually return the value","width":448},{"text":"sometimes it just remove it","width":128},{"text":"sometimes there's an additional function called peek","width":256},{"text":"that allows you to look at the top value","width":256},{"text":"almost every implementations of stack i've ever seen has had a function that will tell you whether not the stack is empty","width":704},{"text":"and then you know possibly there are the big three depending on the implementation","width":512},{"text":"alright so three though are classic and part of the abstract data type","width":320},{"text":"now notice that that means we can use the structure now","width":256},{"text":"because if you write code like this you can tell at any given point what the data structure looks like","width":512},{"text":"so i mean this is just, i will warn you again if i go to this","width":384},{"text":"so i mean this is just, i will bore you of o go through this","width":64},{"text":"I'm going to push a three","width":64},{"text":"push an eight, push a four, do a pop","width":384},{"text":"and 4 is returned, do another pop","width":128},{"text":"and eight is returned ","width":128},{"text":"push a six, so right here the appearance of stack is like this, okay?","width":512},{"text":"any questions about that?","width":320},{"text":"alright, so do you feel like you understand how this thing works","width":128},{"text":"okay so know let's talk about this part, the elephant in the room","width":384},{"text":"how we gonna make this happen, how we gonna implement this","width":192},{"text":"it is a linear structure, it is the stack itself is a linear structure","width":448},{"text":"like I said the data there's a notion of the next one","width":256},{"text":"so that suggests particular implementations ","width":320},{"text":"what are some ideas, how could we implement this","width":256},{"text":"what kind of structure do we know about that we can use to support that interface ","width":384},{"text":"somebody raise their hands and have a conversation with me.","width":128},{"text":"nope?","width":320},{"text":"if i close my eyes and point to sombody? you","width":320},{"text":"233333333","width":256},{"text":"what are some ideas can we do","width":192},{"text":"I can use a linkedlist","width":256},{"text":"right very good  I can use a linkedlist ","width":64},{"text":"is that the only alternative?","width":256},{"text":"raise your hand if you were kind of wanting to suggest linkedlist ","width":128},{"text":"but you are glad I pointed him instead of you, okay?","width":256},{"text":"raise your hand if you might have another idea for implementaion","width":384},{"text":"could use an array right, so any time at this point","width":256},{"text":"anytime you have a linear structure that is a structure where your data","width":192},{"text":"falls right next to each other your two alternative consider ","width":384},{"text":"are linkedlist and array","width":64},{"text":"now the technical detail are yet to be discussed,","width":256},{"text":"we have not talked about if it is a dynamic or static array","width":64},{"text":"we have not talked about if it is a singly link or doubly link","width":256},{"text":"or crazily linkedlist?","width":128},{"text":"but nonetheless it is pretty easy to have a conversation about the two and in fact","width":384},{"text":"those are the two we gonna consider for this okay?","width":256},{"text":"any questions about that ? so just out of curiosity","width":320},{"text":"raise your hand if you think, well, if you prefer linkedlist","width":320},{"text":"your favorite choice is linkedlist here, raise your hand high, come on this is fun","width":384},{"text":"and raise your hand if your are sort of array-centric ","width":192},{"text":"if you'd rather use an array in this context","width":256},{"text":"look it is about fifty-fifty ","width":64},{"text":"there's no right answer here both of these are good options","width":256},{"text":"alright, so it turns out the first one i decided to talk about is a linkedlist","width":448},{"text":"and here's how we gonna implement it","width":192},{"text":"we are going to prepare a stack node ","width":256},{"text":"it should look pretty familiar to you, you've seen this before okay?","width":384},{"text":"and we gonna keep a hold on the stack","width":128},{"text":"be at the top that is we are just going to call that pointer that holds towards data on the top","width":512},{"text":"okay? hm.. and we are going to keep track of its size","width":512},{"text":"okay so just because it is a .. any questions about that part at all?","width":704},{"text":"okay is the constructor implemented there? ","width":384},{"text":"no it is not","width":320},{"text":"i'm going ahead and do this","width":192},{"text":"the stack","width":128},{"text":"top equals  null","width":128},{"text":"implements the constructor there","width":320},{"text":"size equals zero","width":256},{"text":"top equals null okay?","width":192},{"text":"I thinks that should leads to a question","width":320}]