[{"text":"Otherwise, do we need to write down this final conditional?","width":362},{"text":"No, because we cover all possible other cases.","width":192},{"text":"Right?","width":64},{"text":"Otherwise, we are going to return the find of cRoot. right?","width":591},{"text":"Yes, what's your question?","width":192},{"text":"Oh, very good.","width":84},{"text":"Sorry,","width":59},{"text":"So, I messed up the arguments here.","width":448},{"text":"[blank]","width":432},{"text":"Any question about that it?","width":192},{"text":"Alright, I'm ask you to about the running time of this, and then let you answer.","width":553},{"text":"So, the running time of this algorithm depend on what characteristic of the tree.","width":832},{"text":"The running time of this part of algorithm depend what characteristic of the tree?","width":384},{"text":"The height of this tree, that's right.","width":192},{"text":"Now, we don't know necessarily what the height of the tree is at any given instance.","width":640},{"text":"We don't know whether it's an almost nice looking tree, like this one.","width":265},{"text":"Where the about the same height on either side.","width":192},{"text":"We don't know whether is like that, whether is dramatic spill.","width":192},{"text":"So, we are going to for now report the running time in term of this parameter whose value we don't yet totally understand.","width":768},{"text":"So, the running time here is big-O of h, where h is the height. ","width":448},{"text":"And notice that the reflecting running time this way does capture accent of the algorithm","width":576},{"text":"It does capture the fact the algorithm start at the top and works way down until it find a leaf perhaps ","width":640},{"text":"Or, in the worst case it find a leaf.","width":128},{"text":"It does't in contrast, it does't explore the whole structure.","width":384},{"text":"That is little bit different than traversal we saw before.","width":256},{"text":"Any question about that?","width":128},{"text":"Ok, fine.","width":256},{"text":"I think the future semester I'll change the order of this because I'll actually like for you to written some code.","width":384},{"text":"But, this one it a little dicer.","width":256},{"text":"So, it would be better to have switch them.","width":128},{"text":"Alright, so, we were going write code for insert. ","width":448},{"text":"And, this one return nothing.","width":256},{"text":"Again, it's a binary search tree member function. ","width":256},{"text":"Now, keep in mind that we might be use BST to actually implement the dictionary.","width":448},{"text":"So, we still got this responsibility to deal with dictionary kind of things.","width":512},{"text":"It's name is insert.","width":256},{"text":"And the parameter include the key in data together with a root to the structure.","width":512},{"text":"So, cRoot insert might be call on root and might be I am inserting number 0.","width":832},{"text":"I don't know 65 was not there, might be we should put it there.","width":192},{"text":"And, data....","width":384},{"text":"I don't know, d.","width":128},{"text":"can be clever there.","width":64},{"text":"Alright, any question about that?","width":192},{"text":"So, this is how would look?","width":64},{"text":"I have a question really quickly before we write the code.","width":192},{"text":"Is insert public or private?","width":64},{"text":"Private because refer to the root, the tree node pointer right.","width":513},{"text":"It refers to the root, it has root as the parameter.","width":192},{"text":"And, you can't expect the client code necessarily know that.","width":256},{"text":"But, it does not said it couldn't insert root, it just have to build a public wrapper for its.","width":384},{"text":"Like we did last time.","width":64},{"text":"Ok, so, it's cRoot is equal to null.","width":352},{"text":"don't think about anything else other than if the root is equal to null, and I want to insert something ","width":704},{"text":"What do I do?","width":128}]