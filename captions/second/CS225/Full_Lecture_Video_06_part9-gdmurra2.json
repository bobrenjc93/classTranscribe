[{"text":"[Video Starts]","width":64},{"text":"Of pointers splats and there is one other teeny teeny teeny tiny issue here.","width":704},{"text":"Its subtle. ","width":128},{"text":"And it is a potential bug here.  When we pass around pointers.","width":832},{"text":"I am going to write a little piece of code and you are going to respond. [writing code]","width":704},{"text":"Yes?  [Student talking]. Yeah right.  If you pass NULL pointers to that function what happens?","width":704},{"text":"Yeah its a segfault so how would you fix that if you were righting that function.  You would have to put a conditional there right and you would have to handle the issue there if it is a pointer.","width":768},{"text":"So another advantage here is that the pass, the fastest pointer passing without the complexity of dealing with pointers but also it can never be NULL.  It will always have a value.","width":1216},{"text":"So this is like a pointer that cannot be NULL.  So we loooooooooooove it.","width":1024},{"text":"Okay.  So I am writing in red.  So any questions about that?","width":576},{"text":"[Student talking].","width":192},{"text":"No.","width":128},{"text":"[Student talking].","width":256},{"text":"No.  Nope! So the question is all about the heap.  None of this involves the heap.  All of these parameters are set up in local memory.","width":640},{"text":"Okay sorry in stack memory.  All of the parameters are like local variables they are like stack variables.  So nothing happens with the heap as you pass the parameter.","width":768},{"text":"Now uhhhhhhh, this could have been oh... this could have been, uhhhhh lets see.  How does this go?","width":768},{"text":"This could have been asterisks c and then we pass the address of c.  In which case that memory location would be renamed s.  Right?  The memory location would be renamed s so we can refer to it directly.","width":1152},{"text":"Alright any questions about it?  Oh look at that theres 2 more minutes sit back down.","width":640},{"text":"Alright.  So there is one more little tiny piece, and we are going to spend most of next time talking about it.  Now is  a good time to talk about it because the issues are analogous.","width":960},{"text":"When you return control back to the calling function that is when you say return something all the same issues exists.","width":832},{"text":"You can return by value or return a pointer by value or  you can return by reference.  So the mechanics are effectively the same and next time we will talk about the consequences of that fact.  Now you can go.  Happy Friday!","width":2176},{"text":"[end of class]","width":7872}]