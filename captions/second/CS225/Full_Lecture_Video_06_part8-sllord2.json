[{"text":"Okay, so let's trace this code for just a second.","width":256},{"text":"um, notably, I'm declaring a student.","width":256},{"text":"I am declaring a student, raise your hand if your name starts with C.  Yes, what's your name?  Crystal.","width":704},{"text":"Is that how you spell Crystal?  That's one of my- you know how everybody has a word that's hard for them to spell?  Shouldn't there be an h in there somewhere?  But no.  Okay.","width":832},{"text":"Yeah. No.  Like Christmas, it's almost like Christmas but not. Okay.","width":576},{"text":"'Cus that's gonna be on a test.  Alright.","width":256},{"text":"Uh, Crystal you're happy and you have not yet been printed, yes?  I'm sorry to impose emotional status on you but there we go.","width":512},{"text":"Okay, alright, so now this is a student in the stack and we give it value just like we normally would for this thing.  However that user defined type allows us to do so.","width":768},{"text":"In this case, it would just be c.name = Crystal, etc.","width":320},{"text":"Alright, so now let's trace this, we're going to call a function whose name is print_student3.","width":448},{"text":"It has as its parameter a student reference.","width":448},{"text":"Okay.","width":256},{"text":"Slightly different.","width":64},{"text":"Now, here's what we mean by that.","width":359},{"text":"We mean ","width":142},{"text":"take wherever s is set up","width":256},{"text":"wherever s lives, whatever s is, and rename it","width":391},{"text":"to I'm sorry - c - sorry - wherever c is","width":348},{"text":"okay, wherever c is take it and rename it as s","width":412},{"text":"okay, so give it another name which is s","width":289},{"text":"Okay?","width":320},{"text":"Now, when you write this code, if it's not the case that S is printed","width":512},{"text":"is it printed?  is S printed?","width":203},{"text":"No","width":72},{"text":"Then, uh, output it's name.  Can we refer to its name?","width":384},{"text":"Yes.","width":64},{"text":"That's Crystal.","width":128},{"text":"And moreover","width":192},{"text":"we can use s to refer to the contents of c","width":256},{"text":"so we can say s.printed = true here","width":339},{"text":"Change this to T.","width":117},{"text":"Okay?","width":287},{"text":"And when we get back out here what do we get?","width":362},{"text":"True","width":192},{"text":"Alright.","width":148},{"text":"Any questions about it?","width":192},{"text":"Yes?","width":192},{"text":"yes.","width":254},{"text":"And usually we will actually.","width":140},{"text":"Okay, there's not the uh there are software engineering issues here with changing the value of the variable","width":524},{"text":"underneath it within a function but we're not talking about that here","width":178},{"text":"we're talking about mechanics","width":72},{"text":"Yes?","width":128},{"text":"It's an ampersand before the s, yes","width":220},{"text":"that's right","width":79},{"text":"yes?","width":64},{"text":"Why don't we have to ampersand c?","width":240},{"text":"c is a student","width":95},{"text":"c is a student","width":143},{"text":"okay raise your hand if you feel uncomfortable with this","width":192},{"text":"because you feel why can somebody articulate why very precisely why","width":273},{"text":"you feel uncomfortable with this.  yes?","width":146},{"text":"Yeah, so it looks like","width":448},{"text":"a","width":64},{"text":"type mismatch right?","width":192},{"text":"it looks like a type mismatch. so","width":256},{"text":"two things to say.  number one the ampersand used in this context is not","width":341},{"text":"the address of argument","width":141},{"text":"you should not think of it that way, okay?","width":160},{"text":"you should think of it as a flag passed by reference","width":298},{"text":"number two","width":103},{"text":"the apperance of a type mismatch","width":182},{"text":"is to be overcome","width":109},{"text":"so take a few minutes","width":100},{"text":"and do some meditation","width":141},{"text":"and get rid of the of that feeling of type mismatch okay","width":319},{"text":"because in this context it's just a flag","width":230},{"text":"now","width":64},{"text":"what's really happening","width":127},{"text":"I shouldn't even tell you, right?","width":128},{"text":"yeah I don't want you to clutter your mind with it, but I will tell you. Yes?","width":240},{"text":"is it functionally different than passing by pointer","width":321},{"text":"that was exactly what I was going to say and the answer is no","width":206},{"text":"it's the same effectively effectively you are pasing a pointer but it's the way you refer to that variable","width":415},{"text":"thats different","width":74},{"text":"okay","width":54},{"text":"so the speed the cost of passing by reference is the same as the cost of passing a pointer by value but the syntax of it is completely different","width":733},{"text":"and so you're much less likely to induce bugs","width":192},{"text":"imposed by ","width":87},{"text":"the use of pointers when you write code like this","width":178},{"text":"okay","width":41},{"text":"any questions about that","width":97},{"text":"so","width":54},{"text":"this is ","width":80},{"text":"as fast as pointer passing","width":320},{"text":"but without the syntax complexity","width":448}]