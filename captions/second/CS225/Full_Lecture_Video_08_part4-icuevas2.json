[{"text":"Yes right, because those go off the stack.","width":384},{"text":"Those are freed for you. ","width":64},{"text":"Yes?","width":64},{"text":"Um yeah, because it's an array. ","width":256},{"text":"You need the brackets because it's an array.","width":128},{"text":"If it were just a pointer, ","width":192},{"text":"if we had instantiated this as just a string pointer, a pointer to a word. ","width":576},{"text":"Then you wouldn't need the brackets, you would just delete it. ","width":192},{"text":"Ok, so in general, your deletes should match your news.","width":384},{"text":"Whatever kind of new statement you use to create the thing,","width":192},{"text":"usually in your constructor. ","width":128},{"text":"You're going to use a similar thing in your destructor.","width":192},{"text":"Any questions about that?","width":128},{"text":"Is it good, yeah?","width":64},{"text":"It's called right after the return, it's as this execution completes and control is passed back to the calling function. ","width":960},{"text":"Alright, any questions, you good?","width":320},{"text":"Ok, I'm going to show, yeah?","width":128},{"text":"Oh my gosh, there is so much book-keeping going on for you.","width":448},{"text":"We are so lucky. ","width":64},{"text":"Right? Like your grandfathers, my parents.","width":384},{"text":"I shouldn't have said fathers there. Look at that, look at me do that. ","width":256},{"text":"Your grandparents in computing. My parents in computing. ","width":320},{"text":"Um, they think life is way too easy for us. ","width":384},{"text":"Actually, it's probably my grandparents, your great-grandparents.","width":192},{"text":"They think computing is way to easy for us. ","width":320},{"text":"And in fact, you know, the fact that we don't actually have to keep track of what variables we're using ourselves is just ugh.","width":704},{"text":"You know, we're not authentic programmers. ","width":128},{"text":"So, the early days of C, were pretty harrowing, I think. ","width":320},{"text":"So, there's a ton of book-keeping that goes on, ","width":128},{"text":"and part of what they keep track of is, what amount of memory is associated with each variable. ","width":384},{"text":"Alright, and you'll learn about it in future classes,","width":256},{"text":"Because of course, that's was generations do right?","width":256},{"text":"We have to inflict the pain of the previous generations on the current. ","width":192},{"text":"Alright, any other questions about it, you good?","width":256},{"text":"Ok, I have another story to tell you here, ","width":192},{"text":"I'm gonna take you through another little piece of code.","width":192},{"text":"Um, this is how this piece of code, goes. ","width":256},{"text":"This time, I'm going to declare a sphere pointer. ","width":320},{"text":"b, so here's b. ","width":320},{"text":"And I'm going to ask for a new sphere. ","width":192},{"text":"Now, we made a constructor for a sphere, we made a constructor for a sphere. ","width":448},{"text":"That sets up a default sphere to look like this. ","width":384},{"text":"So when I say, new sphere. ","width":192},{"text":"That constructor is called for us. ","width":192},{"text":"So at the end of this statement. ","width":256},{"text":"It's perfectly reasonable for me to draw this picture. ","width":256},{"text":"Making note of the fact that the sphere constructor was invoked for us.","width":448},{"text":"Not the copy constructor, the no argument constructor. ","width":320},{"text":"Ok, any question about that?","width":576},{"text":"Ok, now let's look at what happens when we say, delete b.","width":576},{"text":"What do you hope happens when you delete b?","width":256},{"text":"When you say delete b, what do you hope happens by default?","width":256},{"text":"What do you hope happens?","width":192},{"text":"All of this memory, all of this memory, is given back to the system, right?","width":448},{"text":"By default, without the destructor, only this part is given back.","width":448},{"text":"No dynamically allocated memory, no memory allocated with a new is given back.","width":448},{"text":"So, again. We're responsible for writing a destructor that makes that happen. This is the same destructor its just used again.","width":640},{"text":"So if you remember that code looked like...","width":128},{"text":"this.","width":128}]