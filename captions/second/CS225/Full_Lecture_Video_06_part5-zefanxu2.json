[{"text":"Yes","width":255.857142},{"text":"here? not that's not. that's not printed then printed, the code is  intended to be pretty simple","width":1151.857142},{"text":"what the hack is the struct? ","width":255.857142},{"text":"that's right","width":127.857142},{"text":"notice here","width":63.857142},{"text":"oh","width":127.857142},{"text":"oh","width":127.857142},{"text":"what is it look lot like?","width":191.857142},{"text":"if you kind of squeeze you eyes, what does it look like?","width":447.857142},{"text":"the struct is a class","width":63.857142},{"text":"struct by C++ compiler, struct is interpreted is a class where all the members by default is publioc","width":1023.857142},{"text":"exactly the same thing, why did I choose struct in this case? because I want to save screen space","width":319.857142},{"text":"and I only have data associated with it, I have no function, and so it will be familar to somebody who speaks C","width":831.857142},{"text":"yes you can, you can define functions, the c++ compiler will do the right thing with it","width":319.857142},{"text":"so if you take c code and you put it in C++, you know, you can mess with it","width":447.857142},{"text":"nathan?","width":127.857142},{"text":"speaking somethinbg","width":511.857142},{"text":"em","width":383.857142},{"text":"a boy using typedef because you are using a class oh yeah you can just use it directly, but you can use in C too, right?","width":767.857142},{"text":"ok","width":255.857142},{"text":"I will look at it and make sure I answer correctly","width":127.857142},{"text":"but suffice to say you can do this it's fine and use it just like a class","width":319.857142},{"text":"ok","width":127.857142},{"text":"alright","width":63.857142},{"text":"any other question about this?","width":255.857142},{"text":"ok","width":63.857142},{"text":"alright","width":127.857142},{"text":"we will look at the details of what's happening here","width":127.857142},{"text":"this is largely replication of, look at you flip the page, we are like flying through the lecture today","width":511.857142},{"text":"all the knowledge","width":319.857142},{"text":"so this is largely replication of the examples of previous page","width":319.857142},{"text":"and I an gonna tell you some vocabulary associated with parameters passing in C++ by default","width":639.857142},{"text":"parameter passing is pass by value","width":255.857142},{"text":"so","width":63.857142},{"text":"default C++ is passing by value","width":575.857142},{"text":"and here is what that mean","width":255.857142},{"text":"it means when you set up student A","width":319.857142},{"text":"they have a name","width":127.857142},{"text":"they have a picture","width":255.857142},{"text":"and they are not they are gonna be initialized to be not be printed","width":575.857142},{"text":"ah","width":255.857142},{"text":"ok, here is what happens when we make a function ncalls","width":639.857142},{"text":"we gonna make a function call to print student one of A","width":191.857142},{"text":"look inside the function, A is interpreted as s","width":447.857142},{"text":"here is what really happened, s is also set up like the local variable on the stack and value of A is copy in to the new space on the stack allocated for s","width":895.857142},{"text":"so string know how to copy themselves so n gets copyed over, PNG knows how to copy themselves","width":1023.857142},{"text":"and boolean know how to copy themselves","width":319.857142},{"text":"so we have completely independent copy of A in the stack for s on which to operate","width":447.857142},{"text":"we can write code looks like this, if its not the case s is printed, then output the name and here is what ","width":1151.857142},{"text":"em","width":63.857142},{"text":"here is what we cannot do","width":255.857142},{"text":"we could do s.printed","width":255.857142},{"text":"= true","width":127.857142},{"text":"here","width":63.857142},{"text":"what's the problem with that","width":255.857142}]