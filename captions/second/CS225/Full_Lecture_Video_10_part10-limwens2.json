[{"text":"You're so sweet. :)","width":64},{"text":"Um, what I'm gonna say is,","width":64},{"text":"I want you to look at this and tell me what you think of this for next time,","width":192},{"text":"that's where we'll start next time.","width":320},{"text":"Kay, so respond to each of these","width":384},{"text":"for next time.","width":64},{"text":"[Student] Um, on the previous slide...","width":384},{"text":"Yeah?","width":64},{"text":"[Student] Er, you said, well, first you go to print(?) B","width":192},{"text":"Yup. [Student] 'Cause the virtual was not there.","width":192},{"text":"Right. [Student] So if we add virtual here...","width":192},{"text":"It will do all four.","width":64},{"text":"[Student] All four. [Cinda] Yup. [Student] Ok.","width":192},{"text":"[Student] Um, so what do you mean by having more than one?","width":384},{"text":"[Student] 'Cause in the previous lectures, the class didn't -","width":384},{"text":"Right. They didn't - we've never seen an abstract base class til today.","width":192},{"text":"So this one - this one is our first abstract base class.","width":320},{"text":"[Student] So every abstract base class will contain...","width":256},{"text":"Yes. At least one.","width":64},{"text":"Any. That says, any class containing","width":256},{"text":"greater than or equal to one pure virtual function is an abstract base class.","width":256},{"text":"Ok?","width":64},{"text":"[Student] So all you have to do is type virtual infront of this, or what else-","width":256},{"text":"Yup. Yup, that's it. Mhm? [Student] And what does that change?","width":192},{"text":"It tells the system to look for additional destructors.","width":320},{"text":"[Student] Um ok, so it's gonna say, like, if it's a derived class","width":256},{"text":"[Student] that it's gonna call the base - er, no, sorry -","width":320},{"text":"[Student] the derived class and what if it's like the base","width":128},{"text":"[Student] class it won't care [Cinda] Yup.","width":64},{"text":"It doesn't care for it. For the functionality of the base class, it ignores it basically.","width":320},{"text":"[Student] All you need to do is add virtual to the class. [Cinda] Yup.","width":64},{"text":"[Student] So the virtual class destructors call all of the superclass destructors?","width":320},{"text":"Erm, no, the sub- ones.","width":192},{"text":"[Student] All of the sub- ones.","width":64},{"text":"You put it on the base class. That is- it's kind of - [Student] Oh, ok right.","width":256},{"text":"[Student] So then, here, when we change","width":192},{"text":"[Student] when we put virtual in front of here - ","width":128},{"text":"It was this one. We did it in front of this one. [Student] Right.","width":107},{"text":"[Student] So then it will print - it will call both of these destructors","width":256},{"text":"Yup. [Student] whenever we want them. [Cinda] Yup. Yup, exactly.","width":128},{"text":"[Student] We don't have virtual here so we are only triggering - [Cinda] Yes. ","width":256},{"text":"[Student] Is it just not so - a drastic impact - I mean ","width":256},{"text":"Is it what? ","width":96},{"text":"[Student] Is not - we like, we like always(?)","width":166},{"text":"Right, we probably don't - we probably don't want that action.","width":256},{"text":"Like if you had written something that had invoked a constructor","width":320},{"text":"You want it's destructor, just in case.","width":152},{"text":"'Cause you dunno what the constructor did, so you want its destructor too.","width":171},{"text":"So back - [Student] This is bad(?)","width":192},{"text":"Yes. So right. Back here...","width":192},{"text":"This - this was - destructors can and should be virtual.","width":256},{"text":"[Student] Oh. [Cinda] Ok. What's up?","width":128},{"text":"[Student] Don't they already inherit those functions,","width":128},{"text":"[Student] so why would it be important to have them?","width":128},{"text":"Um, they're not implemented here.","width":192},{"text":"So it's admitting, in the base class,","width":256},{"text":"that those functions probably have to be different in all the derived classes.","width":320},{"text":"They're gonna mean - they'll explicitly mean something different.","width":256},{"text":"In each of the derived classes.","width":128},{"text":"Like, drawing a blossom is going to be a different process","width":192},{"text":"for a carnation, than, for whatever, right? [Student] Yeah.","width":256},{"text":"They're just very different. And, so,","width":192},{"text":"And there is no default flower, right, like","width":192},{"text":"there is no flower that you could draw","width":128},{"text":"and implement in drawBlossom that is","width":192},{"text":"like the average flower or something, like it kinda doesn't make sense.","width":256},{"text":"[Student] So you wouldn't execute(?) this function if you wouldn't","width":128},{"text":"[Student] call on like, just from its base class.","width":151},{"text":"That's right, right. And in fact, um,","width":128},{"text":"what we're gonna start with next time,","width":128},{"text":"is that box where I've declared a flower,","width":192},{"text":"(whispering) and you're not allowed to do that.","width":128},{"text":"There is no flower class.","width":128},{"text":"The flower class actually needs","width":192},{"text":"derived class, it does.","width":64},{"text":"That's right.","width":108},{"text":"But it doesn't have those functions.","width":99},{"text":"[Student] Why couldn't this be just an empty class?(?)","width":128},{"text":"It is essentially an empty class.","width":128},{"text":"I - well, no it isn't, it might","width":139},{"text":"have data associated with it it might","width":86},{"text":"have a string that it's name, it might, you know","width":169},{"text":"it might have data associated with it","width":153},{"text":"but we can't draw anything about it because we don't know what it looks like","width":192},{"text":"So, so yeah, I mean","width":290},{"text":"it can be a full - in fact, we could have all of them except the blossom","width":273},{"text":"we could have all the functionality except the blossom","width":192},{"text":"but you still can't declare one.","width":128},{"text":"Nope, it has to be more specific.","width":128},{"text":"Ok?","width":171},{"text":"[Student] You said that initally that for the definition of pure virtual functions","width":431},{"text":"[Student] That means that in one of it's derived classes that it's defined, like","width":192},{"text":"[Student] This function is gonna be defined. [Cinda] Yes. Yes.","width":128},{"text":"[Student] But even if somebody else asked, they said, ","width":128},{"text":"[Student] that, suppose you say, a rose,","width":109},{"text":"[Student] and then you say, daisy, and each one of","width":96},{"text":"[Student] these, it has to be defined. So","width":128},{"text":"Yes. No, no. Yeah, so it's","width":128},{"text":"greater than or equal to one that isn't implemented here - [Student] Oh -","width":256},{"text":"and that","width":64}]