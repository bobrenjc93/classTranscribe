[{"text":"There we go, ok? And it's executable code. ","width":192},{"text":"Ready to be linked with anybody who would like to use it.","width":256},{"text":"Alright, fine. Well, I know somebody who would like to use it.","width":320},{"text":"This main would like to use that compiled code.","width":192},{"text":"All that has to be done, is sphere.h has to be included, oops.","width":448},{"text":"Sorry. #include, sphere.h here. And then these two, are effectively compiled together.","width":1024},{"text":"Into main.o. And, how do we get sphere and main linked?","width":512},{"text":"Yeah, the linker does it for us. ","width":384},{"text":"So, it's the linker that creates the union between main and sphere.","width":320},{"text":"Ok? And, that whole process is sort of orchestrated for you by the makefile.","width":704},{"text":"That's the whole point of the makefile.","width":64},{"text":"So, that you could do all that seperately, and then put it all together.","width":192},{"text":"And, not have to type it out every time. ","width":128},{"text":"When you're trying to compile your code. ","width":192},{"text":"Now, the world is a little bit different.","width":256},{"text":"In the case of compiling templates.","width":128},{"text":"So, again we've got sphere.h and sphere.cpp and main.cpp.","width":512},{"text":"But, if you noticed on the previous page, the compiler detected.","width":384},{"text":"The compiler could detect.","width":128},{"text":"That it didn't have a plus operator for integers and strings.","width":448},{"text":"And what's going on there.","width":448},{"text":"Is that the compiler needs to know ahead of time,","width":256},{"text":"exactly how, and so you got a compiler error.","width":320},{"text":"The code for the addEm function, was not created.","width":384},{"text":"Now, the reason that that happened is because,","width":256},{"text":"The code for all of the use of your template functions,","width":384},{"text":"Must be visible to the compiler, all at the same time.","width":320},{"text":"That means that, main cannot be compiled separately from sphere.cpp. ","width":640},{"text":"And more importantly sphere.cpp cannot be compiled separately from main.  ","width":512},{"text":"More importantly sphere.cpp cannot be compiled seperately from main. ","width":320},{"text":"Because, in order to make the sphere class. You need to know how spheres are used.","width":448},{"text":"The type of thing that you're passing in to spheres.","width":192},{"text":"To use for its radius, I don't know.","width":128},{"text":"The parallel falls apart a little bit here. ","width":192},{"text":"Ok, so what do we do?","width":128},{"text":"The main principle is that we do not expect different behavior from the client codes.","width":384},{"text":"The client code is still going to say #include sphere.cpp, ok?","width":512},{"text":"H!","width":384},{"text":"Geez, sphere.h. We don't want the client to have to change.","width":512},{"text":"So, the client is still going to say sphere.h.","width":256},{"text":"But it can't just be sphere.h, it also has to be the implementation.","width":448},{"text":"So, how are we going to do that? What are we gonna do here? ","width":192},{"text":"Hmm....","width":128},{"text":"When we compile this, we have to compile it all together, and the code has to be all visible.","width":320},{"text":"And we don't want to client to change code, change behavior.","width":576},{"text":"Yeah?","width":64},{"text":"Yeah.","width":320},{"text":"Look at this.","width":64},{"text":"The only thing we're including is sphere.h. So that's the only code we get.","width":320},{"text":"So the only way that that include statement can include all the sphere class definition.","width":512},{"text":"Is if we say, #include...","width":192},{"text":"sphere.cpp at the bottom of sphere.h.","width":320},{"text":"And now when you do this #include sphere.h, you actually get all the code.","width":448},{"text":"And then, you compile main.cpp, and all the compilation happens at once. ","width":576},{"text":"There's no use for the linker, in this case.","width":64},{"text":"Yes?","width":64},{"text":"Because the declaration of the class has to come first. ","width":384},{"text":"So you have to have the class declaration, the implementation of the member functions, and then the client code that uses them.","width":384},{"text":"Ok?","width":64},{"text":"Alright, yes?","width":128}]