[{"text":"Oh. Going backwards you'd have to come forward and find the next one by coming through the forward. Okay fine.","width":795},{"text":" What if your encapsulating an array? You're iterator helps you step through an array. How would you keep track of where you were?","width":629},{"text":"Just an integer right? An integer index. I'll call it k.","width":452},{"text":"How do you move forward?","width":293},{"text":"You increment it and lets pretend your array was named 'a'","width":503},{"text":"How would you get your data out?","width":152},{"text":"Your overloaded operator would return a k right?","width":512},{"text":"What if your.. Oh boy. What if your memory were arranged like this. Into some hyper cube. These are still the questions you'd have to ask.","width":820},{"text":"You'd say okay. How do I keep track of state? How do I determine what the next one is? How is my data represented inside? Those are the exact same questions you would have to answer in designing this thing.","width":1024},{"text":"Alright any questions? You good? Okay!","width":320},{"text":"We already talked about a lot of this, but we're gonna go through it again so that you have it all in one place.","width":458},{"text":"I have made a list out of the things that you need to implement an iterator.","width":576},{"text":"I have made a list of the things that you need to implement an iterator. And I wanna remind myself what do they return here?","width":717},{"text":"Here's what I want to know. Where does the iterator class go? You remember? Where am I going to define there is gonna be this class iterator. Where does it go?","width":1063},{"text":"Public or private?","width":153},{"text":"Yeah everybody agree? I heard public is that true? Yes! Because in fact we are writing it for the client to use. That's the whole point!","width":722},{"text":"So... class iterator is going to be an inner class. We call it an inner class to in the public section. Kinda like list nodes but not private.","width":1024},{"text":"We may also have list nodes here who knows.","width":192},{"text":"Okay. Where are begin and end defined and what is their return type?","width":640},{"text":"They are public. ","width":256},{"text":"Begin has no parameters.","width":204},{"text":"What does it return?","width":128},{"text":"It returns something of type iterator. That's right!","width":384},{"text":"Where a re these operator++","width":486},{"text":"and Operator* overloaded?","width":256},{"text":"Inside the iterator class and are they public or private? Public good!","width":448},{"text":"Public inside here you have operator ++ and operator * etc. And where is the private member associated with the iterator?","width":1344},{"text":"Where is the private member that helps you keep track of where you are?","width":448},{"text":"Oh it's private. Duh. Inside what class?","width":384},{"text":"Think you keep it here. Yeah.","width":704},{"text":"Right? You wanna keep track of where you are in whatever is defined in this structure.","width":512},{"text":"So you got a list like this.","width":384},{"text":"Like this and you got something that you're gonna keep track of one of those.","width":374},{"text":"Might as well store it there.","width":256},{"text":"Yeah? No. It's an inner class.","width":640},{"text":"This is an inner class.","width":384},{"text":"Alright. Yes?","width":320}]