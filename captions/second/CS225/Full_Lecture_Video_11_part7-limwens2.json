[{"text":"Welcome to the rest of the semester.","width":179},{"text":"Er, how do you do that syntactically?","width":128},{"text":"Much like you do for functions, you","width":161},{"text":"preface the class definition","width":243},{"text":"with a template syntax, ok you warn it(?).","width":256},{"text":"And then anywhere you see a T","width":238},{"text":"inside, anywhere you see a T inside the class","width":268},{"text":"it is replaced with whatever you happen to put in.","width":192},{"text":"K? Alright, so let's look at this code in a little bit more detail.","width":320},{"text":"Right, so I'll pull out my list so I don't forget anything important and it's been a while.","width":384},{"text":"So...","width":64},{"text":"My notes are fantastic. They tell me","width":420},{"text":"\"Start with the blue code\"","width":167},{"text":"Yay, okay!","width":124},{"text":"I'm gonna start with the blue code.","width":118},{"text":"Ok?","width":52},{"text":"Er, so I'm declaring one of those things","width":192},{"text":"and I'm recognizing that it needs a type.","width":192},{"text":"Now you can tell from the name that it's a pair of integers.","width":256},{"text":"Ok?","width":64},{"text":"The variable","width":128},{"text":"is - so this is the variable name, so","width":163},{"text":"variable twoNums has type ezpair of integers","width":393},{"text":"What is this? What's going on here?","width":192},{"text":"What's going on here?","width":192},{"text":"I'm - right. I'm using a constructor.","width":207},{"text":"Right? I'm using a constructor.","width":120},{"text":"So I should look up here and go, oh yay,","width":128},{"text":"the ezpair class has a constructor that accepts these two things.","width":384},{"text":"Now at this point I think, you can probably guess what that constructor does","width":320},{"text":"it simply, takes the two arguments and","width":256},{"text":"uses them to instantiate all the member variables.","width":256},{"text":"Ok? That are right here.","width":117},{"text":"So this, comes from there. And the constructor. Any question about that?","width":256},{"text":"So far.","width":64},{"text":"I think you will have questions, but let's keep going.","width":192},{"text":"Alright, so now we also have declared getmax.","width":320},{"text":"What does this version of getmax return?","width":256},{"text":"What does it return?","width":192},{"text":"A T? It's not a T.","width":192},{"text":"This code doesn't know anything about Ts.","width":320},{"text":"Right? It doesn't know anything about Ts. So what does it return?","width":256},{"text":"An integer. That's right.","width":192},{"text":"That returns an integer.","width":241},{"text":"Ok. Er... let's see...","width":146},{"text":"So I wanna emphasise that point.","width":320},{"text":"That this code, once you instantiate the template,","width":361},{"text":"you don't have to use that again.","width":128},{"text":"Right? You've already told the class that you want an ezpair of integers.","width":320},{"text":"It is as if, now,","width":192},{"text":"this is the name of the class.","width":192},{"text":"You don't have to keep reminding it that you're talking about integers","width":256},{"text":"It's like this is the name of the class.","width":192},{"text":"If we had said ezpair char,","width":128},{"text":"that would have been the typename","width":174},{"text":"and if I had said getmax","width":128},{"text":"and this was an ezpair char there would have been no ambiguity.","width":256},{"text":"K? Just like display, there would have been no ambiguity. Yeah?","width":320},{"text":"Um, so I think the compiler, so","width":256},{"text":"if you just said ezpair here the compiler would infer","width":320},{"text":"what you mean so you wouldn't have had to do this","width":229},{"text":"but I actually - when I read code it helps me a lot","width":292},{"text":"to have that there.","width":88},{"text":"So yes, it's optional for functionality,","width":164},{"text":"but it's, erm it's important for maintainability.","width":232},{"text":"K?","width":64},{"text":"Alright, so lets see... So let's talk about","width":320},{"text":"getmax. So if you execute this code what do you get?","width":192},{"text":"You execute this code what do you get?","width":192},{"text":"Take a look at what getmax - oh, getmax is funky","width":384},{"text":"What would you expect if you couldn't see that code up there what would you get?","width":312},{"text":"A hundred that's right. Now lets go look","width":192},{"text":"Now let's go look at the code.","width":115},{"text":"Alright. So getmax is implemented","width":165},{"text":"to return an integer, right or","width":192},{"text":"to return whatever the parameterized type is","width":204},{"text":"and, er, it sets up a value for return","width":252},{"text":"What is this?","width":64}]