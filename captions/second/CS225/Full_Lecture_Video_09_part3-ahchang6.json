[{"text":"","width":64},{"text":"","width":64},{"text":"","width":64},{"text":"Okay","width":64},{"text":"Alright fine","width":128},{"text":"So help me debug this, couple kind of ways you can debug this","width":512},{"text":"Clearly there's a type mismatch","width":192},{"text":"Yeah?","width":64},{"text":"","width":128},{"text":"Right","width":64},{"text":"That's right","width":64},{"text":"So you want to be looking at the memory address","width":320},{"text":"The location in memory","width":128},{"text":"The only time where this is truly broken","width":64},{"text":"Is if they refer to the same location in memory","width":256},{"text":"So we're going to say the address of the right hand side","width":320},{"text":"We'll talk about that","width":192},{"text":"Okay we're going to clear out the right hand side","width":320},{"text":"Gee","width":64},{"text":"We have written this code before","width":192},{"text":"So I'm going to go ahead and do it","width":192},{"text":"We're just going to delet","width":128},{"text":"the Attributes","width":192},{"text":"Do I need to go through that array and free up the space associated with each string?","width":448},{"text":"NO! Because they're just strings, they no string pointers","width":576},{"text":"Each string might HAVE a dynamic memory associated with it but it's not our responsiblilty to deal with it","width":576},{"text":"Any questions?","width":256},{"text":"Now we need to copy the right hand side","width":320},{"text":"LEt's see if I can do this","width":128},{"text":"The radius","width":64},{"text":"equals","width":64},{"text":"right hand side","width":192},{"text":"The radius","width":64},{"text":"ugh","width":128},{"text":"WOOOOOAW","width":512},{"text":"","width":448},{"text":"NUmatts equal right hand side","width":256},{"text":"Num atts........","width":256},{"text":"","width":256},{"text":"Atts equal new","width":192},{"text":"string...how many do I want?","width":320},{"text":"Good","width":128},{"text":"","width":128},{"text":"for i int equal zero and less than numAtts","width":704},{"text":"I don't know why I'm narrating this","width":192},{"text":"","width":704},{"text":"Okay, yes?","width":128},{"text":"You wrote it faster?","width":192},{"text":"","width":320},{"text":"So while I was doing this","width":192},{"text":"I had that feeling that you should have when you write code","width":256},{"text":"and you're writing code that you've written before","width":192},{"text":"You should go why am I writing this again?","width":512},{"text":"You should write for yourself a function you can invoke for each case","width":384},{"text":"In face we do","width":128},{"text":"We're going to go ahead and pull this out","width":256},{"text":"and put into a member function","width":256},{"text":"called copy","width":64},{"text":"","width":128},{"text":"Whose return value, what kind do we want?","width":384},{"text":"Nothing. We don't need anything","width":320},{"text":"And we its code is merely ","width":256},{"text":"that code","width":64},{"text":"Now I've a question for you","width":384},{"text":"Any question?","width":256},{"text":"yes","width":64},{"text":"","width":64},{"text":"","width":512},{"text":"I don't know what you're talking about","width":192},{"text":"Alright","width":320},{"text":"any question about it?","width":128},{"text":"This is okay?","width":128},{"text":"I've a question for you","width":128},{"text":"So this is the sphere class member function","width":256},{"text":"So when we actually do the implementation","width":256},{"text":"we're going to scope it to the sphere class","width":320},{"text":"It means it needs to be declared inside the sphere class itself, is it public or private?","width":512}]