[{"text":"can't clean up after itself, right? Aghhh! That's almost certainly not what you intend.","width":384},{"text":"Alright any other questions about this?","width":128},{"text":"K","width":64},{"text":"Alright","width":192},{"text":"Uh take a look at the square in the upper left hand corner","width":320},{"text":"and tell me what's interesting about it","width":128},{"text":"Tell me what's different","width":384},{"text":"It's the flower class, what's different?","width":256},{"text":"This is an easy one","width":128},{"text":"What is \"drawBlossom\"?","width":384},{"text":"It's just a....","width":64},{"text":"...function.. right?","width":128},{"text":"It's just a function, happens to be virtual, so we get the idea that this is intended to be a base class,","width":448},{"text":"so what's weird about it is...","width":192},{"text":"...that assignment statement","width":192},{"text":"Here's what that assignment statement is: ","width":256},{"text":"It's, it's, it's it means that","width":256},{"text":"drawBlossom is a pure virtual function.","width":384},{"text":"So, pure virtual function.","width":384},{"text":"And what does that mean? It means a function that is not implemented here","width":448},{"text":"but will be implemented in some derived class","width":384},{"text":"K?","width":64},{"text":"So a pure virtual function is a function not implemented","width":448},{"text":"in the base class","width":320},{"text":", but rather in a derived class.","width":448},{"text":"K?","width":256},{"text":"Alright","width":64},{"text":"So here's the cool thing about it:","width":256},{"text":"Basically, in the base class, the base class now is prescribing what the derived classes have to look like","width":576},{"text":"If you want to implement a \"flower\", you have to, or I'm sorry, you want to derive from a flower you have to implement the drawBlossom function,","width":832},{"text":"so it ends up being prescription for the functionality of the derived class, or effectively an interface.","width":448},{"text":"Okay so let's see, an abstract base class is the name we give to any class that has at least one pure virtual function","width":512},{"text":"; any class containing greater or equal to one pure virtual function.","width":960},{"text":"K? Any question about that?","width":192},{"text":"Yes?","width":256},{"text":"Yep, yep, that equals 0 is sortof like it's an indication that I'm not implementing here","width":768},{"text":"function is nothing","width":128},{"text":"Any other questions about this?","width":320},{"text":"Maybe put it on the Piazza, a question like that, cause I don't really know Java that well, so I might not be able to answer anyway","width":1088},{"text":"Any other questions?","width":320},{"text":"Yup, multiple derived classes all have to implement drawBlossom, so look at this","width":768},{"text":"In fact we've done that here","width":128},{"text":"We've got class \"Daisy\"","width":256},{"text":"and it implements drawBlossom, drawStem, and drawFoliage","width":384},{"text":", but we could have class Rose or class Tulip or class Aster","width":384},{"text":"we could have any of those flower classes and they would all have to implement drawBlossom","width":384},{"text":"I have one more thing to say though","width":64}]