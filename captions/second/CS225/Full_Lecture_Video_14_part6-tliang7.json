[{"text":"so how do i get the one before it","width":448},{"text":"yeah?","width":448},{"text":"ohh!","width":128},{"text":"did u all hear that?","width":128},{"text":"ohhh!","width":64},{"text":"ohhh!","width":512},{"text":"hey ready?","width":128},{"text":"so here's what he suggested","width":192},{"text":"he said hahahaha","width":128},{"text":"first of all","width":64},{"text":"grab this data","width":320},{"text":"copy into the current node","width":192},{"text":"and then  use the current node pointer to delete the next node","width":320},{"text":"ok? wait ","width":128},{"text":"i know i know","width":64},{"text":"the reason ur raising ur hand","width":128},{"text":"its bec.. i mean there are couple reasons","width":128},{"text":"lets write the code that does this and then talk about it","width":384},{"text":"ok?","width":64},{"text":"alring","width":128},{"text":"alright","width":64},{"text":"so i got curr and i got curr next","width":192},{"text":"lets write this","width":192},{"text":"so curr's data, first thing we are gonna do is curr's data equals curr's next's data","width":1088},{"text":"if that should ring an alarm bell all over the place already","width":320},{"text":"just swop the alarm for a minute, u shouldn't be alarmed by that","width":384},{"text":"and then i wanna grab hold the next one, so listNode pointer t equals curr next,whatever","width":1152},{"text":"so i have a hand on it","width":256},{"text":"then curr next equals t next ","width":512},{"text":"and then delete t","width":128},{"text":"so heres t ","width":640},{"text":"curr next is gonna look at this and get that value, whatever it is","width":576},{"text":"and it goes here","width":256},{"text":"and then delete t","width":192},{"text":"so we get rid of this one","width":192},{"text":"criticize go ahead","width":256},{"text":"open it up!","width":128},{"text":"the which part?","width":256},{"text":"uhh very good","width":192},{"text":"the  reason we made ur data const for ur mp is u couldn't do stuff like this","width":576},{"text":"not necessarilly","width":384},{"text":"yeah?","width":64},{"text":"very good ok","width":64},{"text":"one of the problem here is","width":128},{"text":"what if we are trying to remove 8, and we dereference the next data","width":576},{"text":"theres a easy way to solve this","width":256},{"text":"a sentinal node","width":64},{"text":"oh u guys are so smart","width":64},{"text":"ok","width":64},{"text":"so pretend i did that","width":256},{"text":"pretend we have a sentinal node","width":320},{"text":"ok","width":448},{"text":"im gonna put a little x there","width":256},{"text":"so we can solve the problem by putting a sentinal node there","width":128},{"text":"now imagine what the constructor's gonna look like for that","width":576},{"text":"what else is the problem","width":192},{"text":"very good","width":128},{"text":"any time ur copying around data u should go ohhÔºÅ ","width":704},{"text":"because data could be really big","width":256},{"text":"this could be an expensive proposition, moreover you may not have a copy constructor","width":192},{"text":"or a ","width":64},{"text":"im sorry","width":64},{"text":"an assignment operator","width":256},{"text":"this line u should of course","width":192},{"text":"this should be okay","width":64},{"text":"functionally","width":128},{"text":"and u don't necessarily know how expensive","width":320},{"text":"because this is a parameterize tpye","width":192},{"text":"u dont even know for sure","width":192},{"text":"what u r copying","width":128},{"text":"so this could be expensive","width":192}]