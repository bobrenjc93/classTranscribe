[{"text":"What do you think happens here? What do you think happens there. Cat-dog is right. Wait a minute, how come it does not line up the arrays and take the character values and add those up. That would be a legitimate way of doing addition. So how does it know that in C++, how is it true that addition is concatenation rather than some kind of numeric operation? How does it know the + is different there. The + is defined to behave differently for strings. And it is just a function. So in this case the + is just a function that takes 2 arguments and does something with them. In the case of integers it adds them up. In the case of strings it concatenates them. So you use operation overloading all the time. And that is implemented in the string class. It is a part of the string class' responsibility to implement addition. Okay fine, what about this? Sphere a(5); Sphere b(8). Let us go back to our stupid spheres where there is only a radius. How should that work? ","width":7040},{"text":"That is right, we have not defined how it should work. What we have got now is that 'a' is a sphere and 'b' is a sphere but we kind of want to add them to each other. The way we make that happen is that we declare a sphere class member function whose name is operator+. So this right here is the function that implements this symbol. So we can do it no problem. So let us have a design moment. What should it mean for 2 spheres to be added to one another together? ","width":3904},{"text":"Let's just add their radii. You could find their volumes and add that together, but for the sake of illustration, we are going to design an addition operator for spheres that simply adds their radius together. So let's do that. Oh, and can you speculate on what this thing is for? Can you speculate on what that return value is for. You have to return one that is the sum. We are going to return a sphere. We are going to declare Sphere t for return. ","width":3392},{"text":"And then we can say t.theradius = ... What do we have here? We are defining what happens here. This one is the parameter, so this one is s.theradius + ... this one is the current object, so this + is a member of the sphere class, so it will be called on the sphere class object, so the current one is a. So it is just s.theradius + theradius and then we are going to return t.","width":3968},{"text":"Yes.","width":320}]