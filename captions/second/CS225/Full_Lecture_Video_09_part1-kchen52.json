[{"text":"Okay, let's get started.","width":256},{"text":"Can you guys in the back hear?","width":85},{"text":"Yes, no?","width":136},{"text":"No?","width":215},{"text":"How about now, now, now, now?","width":195},{"text":"Can't have it be a multiple of three","width":151},{"text":"Okay that's good","width":64},{"text":"Alright, um sooo MP2 is due tomorrow night.","width":320},{"text":"Um, there have been grading runs every night, for the past, you know, five days or so.","width":373},{"text":"Um, it's looking like things are going really well. ","width":287},{"text":"Um, the only thing is I get an autograder, an autograder message from last night.","width":448},{"text":"Did anybody get a result from last night? Yeah?","width":384},{"text":"Okay, alright so I didn't get the message.","width":192},{"text":"Maybe I'm just not done with my MP","width":128},{"text":"Um, alright and then I want to rest assured, I want to rest you, I want you to be rest assured that, um, if you don't get 100% on tonight's run, and you try and make a change and you get a 0 for whatever reason, some compile error, we're taking the maximum of tonight's and tomorrow night's.","width":1558},{"text":"So, you can, you don't have to stop tonight with your 92, you can keep trying to perfect it if you like, k?","width":448},{"text":"Are there any questions about grading for MPs at this point?","width":320},{"text":"Okay","width":64},{"text":"So um an MP3 is going to come out pretty much immediately.","width":506},{"text":"If I had to assess a relative difficulty of MP3 over the whole semester, I'd say it's not conceptually the most difficult, but you are likely to spend the most time debugging on it.","width":963},{"text":"So, prepare to spend more time on MP3 than you might spend on some of the other MPs of the course.","width":640},{"text":"Okay, we were talking about, will you remind me what were we talking about?","width":384},{"text":"What's a concise way of stating what the subject was last time, last Friday when we met?","width":529},{"text":"Operator overloading and in particular, we were going to overload, operator overloading is what I was going for, and in particular we are going to overload the blank operator.","width":818},{"text":"What's blank?","width":91},{"text":"Assignment operator, very good, okay so","width":192},{"text":"for example, if I do something like declare, oh I'm just not going to be friends with technology - look I got nothing.","width":601},{"text":"Here.","width":335},{"text":"Okay, if I were to declare, ugh, ack.","width":718},{"text":"d here.","width":366},{"text":"My family watched ghostbusters last night on the way home from Chicago.","width":271},{"text":"I'm thinking that like, I like set up some poor karma between me and ghosts everywhere.","width":408},{"text":"So if I declare spheres 'a' and 'b' and create 'a' to be something interesting perhaps.","width":512},{"text":"And then make the assignment 'b' gets the value of 'a', then what the things that you told me last time that I need to be sure to do, are to free up the space previously occupied by 'b', the dynamic part of the space previously occupied by 'b',","width":1589},{"text":"and then explicitly copy over the values, oh oops, of 'a', k?","width":600},{"text":"And that means, that means that I need to allocate new space that in the end looks just like 'a' space.","width":848},{"text":"K, any question about that at all?","width":190},{"text":"I'm going to separate that out into two, uh, sortof subtasks.","width":406},{"text":"There's the clear task and the copy task. ","width":347},{"text":"Now the clear task should feel a lot to you like another function that you've written, which one is it?","width":479},{"text":"The destructor, that's right.","width":108},{"text":"The clear task should feel a lot like the destructor, and the copy task should feel a lot like the copy constructor, that's right.","width":670},{"text":"Now, do you just call those functions? ","width":130},{"text":"No you do not, but we'll talk about that in a minute.","width":192},{"text":"Alright so there're these two tasks: there's clear and there's copy","width":386},{"text":"Okay, now there are some little teeny tiny, and we're gonna write the assignment operator to do these two things, but there are some additional considerations that would really only occur to you during debugging, but which we're going to be explicit about, k?","width":960},{"text":"So now what I wanna know is what happens upon assignment if 'b' and 'a' already refer to the same memory address?","width":768},{"text":"Now this can happen in lots of different ways.","width":131},{"text":"It can happen because we've passed something by reference or it can happen because 'a' is a dereference of some pointer that has another name.","width":636},{"text":"So there're, there're several different ways where two things can be referring to the same memory address; can be names for the same memory address, k?","width":721},{"text":"So now what I want to know is what's the problem?","width":218},{"text":"What's the problem here, remind me, I think we got this far, but I want you to remind me.","width":320},{"text":"K? yeah?","width":128}]