[{"text":"ask about the inverse assignment","width":576},{"text":"Ok, fine, this first page is warm-up","width":192},{"text":"Ok, I think, I think we should be able to kinda crank(?) through this based on what we have already seen","width":384},{"text":"Ok, so what type is q? raise your hand if you think it is a pointer type","width":384},{"text":"you know, you would hope right? but it turns out the asterisk actually modifies the variable","width":448},{"text":"So,  in this example, q is an integer . If you want it to be a pointer, you have to say int pointer p pointer q","width":896},{"text":"and this changing is fine, it just sort of, this is a little, idiosyncratic thing that you need to know about","width":192},{"text":"Ok, so lets do this next one really quickly , I am gonna draw the pictures, it is very similar to what saw","width":576},{"text":"integer pointer p is declared , integer x is declared ","width":448},{"text":"p is the address of x, makes p points to that space, the value of p, so we follow the pointer p got 6","width":960},{"text":"now what happens when we output x?","width":192},{"text":"it is a 6 right, we have changed the memory associated with x underneath it","width":512},{"text":"Alright, what if we output p, what would I get, I am outputing p, the next line, oh man I don't even want to know what I get","width":1664},{"text":"ok, this is a terrific hex number which represents the memmory address of p","width":704},{"text":"Alright,  write the statement whose output is x using variable p, I am gonna do this one really quickly, you could race me if you like","width":832},{"text":"asterisk p, that \"endl\" is just a new line, yes?","width":512},{"text":"Emm, did I say memory address , I mean dereference, em, sorry c out the value of p","width":640},{"text":"write the output whose value is x, oh, yeah, sorry","width":1024},{"text":"you catch, I'd like to say I did that one purpose , giving you a chance like engage but that would be a lie","width":704},{"text":"Alright, good,  how would I , how would I output the memory address of p, how would I make that correct , oh I should thougt of this","width":576},{"text":"I don't know what you are talking about , and I would have done what","width":192},{"text":"yeah, the & p.  c out & p gives you  address of p , ok","width":896},{"text":"Alright, any surprises? Anything on this page surprising, now lets get to some ...........","width":768},{"text":"Alright, so I have these two pointer variables, you can probably go all the way down to here, lets meet here, I will do it and I will talk aloud, but you can tune me out if you would ilke to think seperately from me ok?","width":1024},{"text":"So, this code says make me a pointer p and a pointer q","width":512},{"text":"give p an integer and point to it, make q point to the same space, using q to give value 8 there, and now output the value p, what will we get","width":1216},{"text":"8? yeah, ok. I strongly encourage you to trace these on your own ","width":448},{"text":"ok, now.  lets do down to       ...........  here, go ahead, go ahead and trace down to here","width":1216},{"text":"So, now q gets a new integer , and assign to it, and the value of q is 9","width":640},{"text":"ok, so you should have the same picture","width":128},{"text":"p and q each have their own memory avaliable to them, they are not shared the piece, new , yes","width":832}]