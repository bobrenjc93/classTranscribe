[{"text":"So if the root is equal to NULL, we do nothing there's nothing to be done, there's no memory associated with the thing","width":640},{"text":"So that seems to be OK","width":704},{"text":"Otherwise we clear out....Oh wait","width":320},{"text":"I'm doing something wrong already.","width":192},{"text":"What is root here","width":256},{"text":"Yea","width":448},{"text":"Root is a copy of r.","width":128},{"text":"It's a parameter. It's a copy of the original root. k?","width":512},{"text":"So what this code does is it clears out the left it clear out the right.","width":384},{"text":"It frees this memory. Right? That's what this delete does.","width":320},{"text":"And then it says this guy equal to null.","width":192},{"text":"Is that what we wanted? No.","width":128},{"text":"So how do we fix it?","width":128},{"text":"Pass by reference is the answer, that's right.","width":192},{"text":"So we need to pass by reference there and then this code works fine.","width":320},{"text":"And what is the running time of it?","width":384},{"text":"Big O of n.","width":320},{"text":"Which traversal does it happen to look most like... post order, that's right.","width":320},{"text":"To recursive calls and then a little bit of work.","width":192},{"text":"So by analogy, to post order traversal.","width":704},{"text":"OK, good?","width":64},{"text":"Alright, let's keep going.","width":128},{"text":"Alright, here we go.","width":128},{"text":"This is ...Grammy moment...","width":192},{"text":"Alright, something totally different.","width":128},{"text":"I think level order traversal is a perfectly reasonable way of expressing the content of a tree like this.","width":448},{"text":"The problem is that level order traversal does not use the connectivity of the structure in any way. ","width":576},{"text":"You jump from sub-tree to sub-tree.","width":192},{"text":"And so the approach to writing this algorithm is not a recursive  approach.","width":832},{"text":"Because we can't express the lever order of the main tree elegantly using recursive expression of the level orders of their sub-tree.","width":768},{"text":"Ok? Alright.","width":128},{"text":"So here's how the algorithm goes for a level order traversal.","width":448},{"text":"So the first thing we're gonna do is we going to create a queue and put the root on it.","width":512},{"text":"And here's my queue I'm gonna put the root on it.","width":512},{"text":"Root node.","width":192},{"text":"Probably root node, probably root node pointer.OK?","width":64},{"text":"Alright, so this is make a queue and add root.","width":576},{"text":"K?","width":192},{"text":"And then until the queue is empty, ","width":448},{"text":"do the following,","width":192},{"text":"remove elements from the queue","width":320},{"text":"yell the value","width":704},{"text":"and add it's children on queue","width":640},{"text":"OK","width":64},{"text":"So that means I remove plus from the queue, yell it's value and Onqueue its children,","width":576},{"text":"by conventionally do that left to right.","width":256},{"text":"By convention I'm going to add minus and asterisk to the queue.","width":448},{"text":"Ok?","width":128},{"text":"Can I keep going here?","width":64},{"text":"I'm going to take queue, yell, and add children","width":448},{"text":"It's an empty tree and the slash.","width":512},{"text":"Would you rather I put a NULL there?","width":192},{"text":"I don't know what does a NULL looks like.","width":192},{"text":"It's a little box with a slash in it, right?","width":256}]