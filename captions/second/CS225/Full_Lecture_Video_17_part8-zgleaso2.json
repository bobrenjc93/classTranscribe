[{"text":"I'm going to put an e here, and I'm going to put an e here at the other end. ","width":2240},{"text":"The entry into the structure is going to be at the front of the data and the exit from it is going to be here. We are going to enqueue value three and you're telling me it should go right there","width":3136},{"text":"Where should enqueue 8 go? At the entry right? There's no room at the entry","width":1408},{"text":"Let's start over and switch entry and exit","width":768},{"text":"Enqueue 3. Enqueue 8. Enqueue 4","width":1024},{"text":"Dequeue","width":192},{"text":"3 Comes off then I have to do that?","width":576},{"text":"Let's move the index of exit","width":1984},{"text":"This empty space here is going to keep track of where entry and exit are to our contiguous collection of data.","width":640},{"text":"So I'm going to have an integer exit and an integer entry and enqueue occurs at the entry and they start off both at 0.","width":1280},{"text":"At this moment where I say dequeue for the first time exit is just going to be moved over and I just aleways keep track of where it is.","width":1152},{"text":"Entry is always going to be at one pass like size in the previous example. Entry is just an index showing that location and exit is just the thing that leaves","width":960},{"text":"Enqueue 7.I'm going to put 7 in there and move entry","width":2432},{"text":"Dequeue becomes a matter of moving the exit and returning the 8.","width":448},{"text":"It's very much like pop","width":320},{"text":"Dequeuue again","width":320},{"text":"Going to return 4. Enqueue 2","width":320},{"text":"Move entry here","width":320},{"text":"Entry is moving to the right","width":576},{"text":"Enqueue 1","width":448},{"text":"Enqueue 3","width":192},{"text":"enqueue 5","width":320}]