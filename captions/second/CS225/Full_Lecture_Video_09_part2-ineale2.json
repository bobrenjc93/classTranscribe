[{"text":"Very good. So remember that the two tasks are clear and copy, so lets do that. B gets the value of A. So we clear, then theres nothing to be copied anymore, so we basically invalidated our algorithm. We invalidated our data here. We're going to solve that in the code we write for the assignment operator by protecting against self assignment. And then the other thing that we need to do, umm, is implement this behavior. So C based lanuages tend to let you chain together assignment operators. And, all we are doing by creating the assignment -- writing the assingment operator is a single chain right here. I'm going to draw a pair of parentheses and see if that helps you come up with a suggestion that might be used to create a chain assignment operator. How could we implement that? How could we make it so that its okay to return values? I have no brain. So I said the answer that I was hoping you would say, so sorry. So notice this is a function call. Right? This is just like b dot operator assignment operator a. If it were to return a value then that value could be the right hand side of C's assignment statement. So effectively, what we want is c dot operator equals b dot operator equals of a. How do we achieve that? Well, we have a return value out of the assignment operator. And then I'm just going to describe that as return a helpful value. Any question about it? So let's make some plans. So here's what the function signature looks like. We're going to just make a list of things that we need to do when we actually write the code. Yeah... okay. Make a list of things we need to do. First thing is we need to uhhh protect against self assignment. And that's a conditional that says if these things already don't refer to the memory address, then we're going to clear out the left hand side. Then we're going to going to make a copy of the right hand side. And then in the end we're going to return a helpful value. And we'll talk about that in a minute when we write the code. Alright, so this is our list of what the code needs to look like. Writing code this way is really common. Do your comments first and then fill in the blanks. Because no one of these is going to be particularly complex, and here we go. Alright, so how do we protect against self assignment? How can we ask the question whether or not b and a refer to the same spot in memory? Yes? So if this is not the same as right hand side is almost correct. Help me debug it. What is the right hand side? What kind of thing is the right hand side? It's a sphere. What kind of thing is this? I think i mentioned this very quickly once. This is this is a pointer to the current object. In this case that's the left hand side.  ","width":20864}]