[{"text":"Then the standard template library container classes, usually will have a forward iterator, a backward iterator, a bidirectiional iterator, it can go forward and backward, and const versions of each.","width":1216},{"text":"Which means you can look at your data, but you cannot change your data. Any question about all that?","width":896},{"text":"Okay, how do you think we achieve this reverse iterator?","width":704},{"text":"Going backward through the list.","width":384},{"text":"Minus minus.","width":256},{"text":"it overloads minus minus","width":128},{"text":"Any questions about it? ","width":192},{"text":"Okay, alright so lets talk. Oh. Here's what I want for you.","width":704},{"text":"I want you to be able to leave this room and feel confident using iterators","width":448},{"text":"Get the right google search and find the appropriate iterator to write code that traverses any kind of container class. Also, if your employer or your advisor ever says bring me somebody to implement a new iterator, I want your to be the one that goes oh Ill do that","width":1536},{"text":"So we are going to pull back the hood a little bit and look and speculate about exactly how these things are implemented. So that you see what kinds of decisions your would have to make if you were actually to do an implementation.","width":1088},{"text":"So, We agree I think that we're going to need for if say a linked list were the thng that was encapsulated, we would need some private member to keep track of where we were","width":1728},{"text":"To keep track of the fact that your iterator is pointing to that one instead of to any other one.","width":704},{"text":"Were going to do that via some private member","width":384},{"text":"It means private member","width":256},{"text":"so if you were a linked list and you want to keep track of where you were. What kind of thing would you do. What kind of thing would you keep track of if you were trying to keep track of where you were if you were a linked list.","width":1920},{"text":"In a linked list, you have a listnode pointer, you might call it curr and it might sit there until somebody did this plus plus","width":768},{"text":"If somebody said iterator, what would happen to that curr","width":576},{"text":"Plus plus is implemented like curr = curr->next","width":448},{"text":"And how would you look at the value inside","width":512},{"text":"how would you dereference","width":320},{"text":"How would you look at the value inside of that pointer","width":256},{"text":"You would look at curr's data","width":192},{"text":"you return curr data","width":192},{"text":"Look your have almost implemented an iterator for a linked list class","width":512},{"text":"What would a reverse iterator for a singly linked list look like","width":576}]