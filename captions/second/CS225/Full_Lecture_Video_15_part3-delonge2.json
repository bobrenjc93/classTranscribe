[{"text":"Variables, variables and parameters, so this is main()'s variables and parameters all inside that box.","width":512},{"text":"Ok so the question is: what's in scope? The question is what's in scope.","width":448},{"text":"And the answer is everything on the stack is effectively in scope.","width":320},{"text":"And things go out of scope when they're removed from the stack.","width":192},{"text":"Ok this is just an example albeit a fairly, this is a superficial explanation of what goes on here.","width":704},{"text":"It's not the substance of this course to actually look at this in great detail.","width":192},{"text":"I believe that's a 241 topic to look at how that memory is actually used and allocated and what it looks like.","width":512},{"text":"This is a diagram for what happens.","width":320},{"text":"Alright similarly you've probably seen, you've probably noticed when you use a good editor, I'm going to change the type of my stack here, when you use a good editor, it keeps track of parenthesis for you.","width":1408},{"text":"It keeps track of opening and closing parenthesis for you.","width":192},{"text":"The process of doing this goes something like this","width":384},{"text":"We are going to read this sequence of brackets and parenthesis left to right and you can imagine that there are other strings in between.","width":640},{"text":"But we're going to process this and our whole question is: is this a valid sequence of parenthesis and brackets and square brackets. Is this a valid sequence?","width":1024},{"text":"The algorithm for checking is merely this.","width":320},{"text":"If you see a left bracket of any kind, push it onto the stack.","width":448},{"text":"If you see a right bracket of any kind, pair it with the top of the stack and pop off the left.","width":768},{"text":"Pop off the left.","width":64},{"text":"Alright lets do that really quickly here.","width":192},{"text":"So if you see a left bracket push it on the stack.","width":256},{"text":"I see a left. I see a left.","width":192},{"text":"If you see a right bracket pair it with the top of the stack.","width":512},{"text":"Do they match?","width":128},{"text":"Do these two match?","width":128},{"text":"Yes they do. So pop them off.","width":320},{"text":"And then we see a left. And then we see a right.","width":448},{"text":"They pair. Pop them off.","width":192},{"text":"Then we see a left. And another left, uh oh, and another left.","width":512},{"text":"I'm up to here. We see a left, I mean sorry, a right. It matches, so we pop.","width":640},{"text":"A right, it matches, so we pop.","width":192},{"text":"A left bracket, a left, a left, a right - it matches, etcetera.","width":593},{"text":"So the code for doing this is actually very very simple.","width":236},{"text":"If left bracket, push.","width":161},{"text":"If right bracket, pair and pop.","width":154},{"text":"About two lines, right?","width":192},{"text":"Lets move on here. Any questions about this? Boring? Sorry","width":1152},{"text":"Alright. Let's write some code, that's always comforting right?","width":320},{"text":"Instead of talking lets write code.","width":256},{"text":"So stack is, we have an abstract data type that describes a stack.","width":320},{"text":"Here are the classic functions: push and pop.","width":384},{"text":"Push is our way of inserting data.","width":256}]