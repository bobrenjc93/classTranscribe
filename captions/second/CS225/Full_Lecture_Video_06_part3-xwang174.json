[{"text":"In the what? No, those were stackic variables. Their memory addresses going on all over the place.","width":1152},{"text":"Not instructive to think of these guys as memory addresses. Those were stack variables.","width":576},{"text":"They were not going to have memories on the heap that keeps track of them.","width":128},{"text":"Right. There is no explicit pointer. It just keeps track. It keeps track of how much the memories. It keeps track of x basically.","width":1600},{"text":"It keeps track of the amount of memories associated with x for you. So somebody who speaks to see tell me what 3 dose","width":704},{"text":"What parameters associated with 3? ","width":320},{"text":"What parameters were associated with the free statement? Cuz it's like the memory can free right? OK, never mind.","width":320},{"text":"It keeps track of the amount of memory for you. There is a lot of stuff going on behind this system.","width":704},{"text":"There is a lot of stuff going on behind this scene. We are clearly speaking something that is almost English, right?","width":384},{"text":"And the processor doesn't understand anything close to that.","width":448},{"text":"So the question is what if we just do the delete [ ] x here?","width":384},{"text":"And I believe that clang catch that for you at the compile time. I think that's true.","width":832},{"text":"It used to be that when you say delete x here, only the first one will be freed. That is now detectable at compile time.","width":192},{"text":"No, malic doesn't, but new does, new and free do.","width":1024},{"text":"Yes, C works here. C still asks the size of your variables.","width":448},{"text":"If you speak C++ already, if you are familiar with the C++ standard library, what we are talking about now is under the hood of the vector class.","width":1088},{"text":"Yes, vectors living in the heap.","width":768},{"text":"So the question is if it's possible to partially delete a memory and anytime anybody asks me a question in C++ starting with is it possible to, the answer is yeah probobally.","width":960},{"text":"But the more relavent question is, should you?","width":192},{"text":"And the answer is probably not.","width":128},{"text":"We thought it's a straightforward conversation, but it's always a new ones. ","width":320},{"text":"Do you need the set the value to NULL before you delete it? No.","width":640},{"text":"Is it a good idea to do this after you delete? Yes.","width":576},{"text":"But you know when you are talking about values, if you are talking about reinitializing these values, the answer if no you don't have to.","width":1792},{"text":"You don't have to clean it up. They just go back to memory.","width":384},{"text":"And the next allocation is responsible for initializing them the way they want them to be.","width":256},{"text":"Can we move on? Is that OK?","width":640}]