[{"text":"Is the example a complete tree?","width":192},{"text":"Yes its complete","width":320},{"text":"Is it full? No.","width":64},{"text":"because of this guy so no","width":256},{"text":"every complete tree is not full","width":192},{"text":"heres one","width":192},{"text":"that ones complete but not full","width":384},{"text":" theres one","width":128},{"text":"alright","width":128},{"text":"any questions","width":128},{"text":"so now you have working defintitions of full and perfect and complete","width":384},{"text":"if i were you i would make flashcards ","width":384},{"text":"alright so lets touch base for a second with what maddox showed you","width":512},{"text":"last time about the implementation of this structure","width":320},{"text":"I beleive he did something like create a tree he might of called it binary tree","width":640},{"text":"it had an internal structre called a node","width":384},{"text":"notice this for a second","width":192},{"text":"where have you seen something like this before?","width":320},{"text":"doublely linked list","width":192},{"text":"previous next who cares what they are called","width":320},{"text":"the structure is the same the only different thing is how we link things up","width":640},{"text":"maddox gave me his slide","width":256},{"text":"where he hooked things up like this","width":256},{"text":"is this tree full?","width":128},{"text":"perfect?","width":192},{"text":"complete?","width":64},{"text":"yes","width":64},{"text":"fine","width":64},{"text":"i looked at his drawing and I got worried","width":384},{"text":"i was worried that there were too many null pointers","width":384},{"text":"because we are implementing this is such a way that all of the leaves have null pointers asscociated ","width":896},{"text":"this is fine if there arent too many of them","width":256},{"text":" howmany null pointers","width":256},{"text":"well lets start with doubly linked list","width":320},{"text":"not worried about with doublely linkked lisst","width":384},{"text":"only had two null pointers","width":256},{"text":"one at each end","width":128},{"text":"constant","width":64},{"text":"number","width":128},{"text":"howmany null pointers make me upset","width":320},{"text":"howmany null pointers make me that is too much mempry","width":320},{"text":"too much memory for n items","width":320},{"text":"expoential is too many","width":192},{"text":"2 to the n is too many","width":192},{"text":"anything else?","width":128},{"text":"would log n be too many?","width":256},{"text":"no not bad at all because that is fewer than n","width":448},{"text":"smaller than n","width":128},{"text":"and all that means is that every piece of data is a bit fatter a little bit more","width":768},{"text":"of memory associated with it","width":320},{"text":"log n does not bother us","width":256},{"text":" how about linear a linear number of pointers","width":320},{"text":"would that bother us?","width":192},{"text":"on the edge right?","width":128},{"text":"it doesnt","width":192},{"text":"a linear number of pointers some constant number of null pointers does not bother us bea","width":896},{"text":"because we have overhead with our data","width":384},{"text":"a little less efficient","width":192},{"text":"no big deal to have a linear number","width":256},{"text":"how about a quadradic number of null pointers?","width":384},{"text":"that is bad","width":128},{"text":"I have a picture for that","width":256},{"text":"that would mean is if we had n pieces of data then we would have this much memory associated with just the null pointers","width":1152},{"text":"thats too much n squared of nothing so as to support linear data","width":576},{"text":"that is bad","width":128},{"text":" alright fine","width":64},{"text":"i want you to complete that theorem for me","width":320},{"text":"as accurately as you can","width":512}]