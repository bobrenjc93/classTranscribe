[{"text":"Hey that's looks better. So make it do something. OK I'll dereference the pointer X to store the number 42 into its pointee. For this trick I'll need my magic wand of dereferencing. Your magic wand of dereferencing? Oh that's great. This is what the code looks like, I'll just set up the number and... Hey look there it goes!","width":1792},{"text":"So doing a deference on X, follow the arrow to do a dereference on its pointee. In this case to store 42 in there. Hey try using it to store the number 13 through the other pointer.","width":384},{"text":"OK, I'll just go over here to Y and get the number 13 set up, and take the wand of dereferencing, and just.... WHOA! Oh hey that didn't work. Say binky, I don't think dereferencing Y is a good idea. Because setting up the pointee is a seperate step and I don't think we ever did it. Hmm good point. Yeah we set up the pointer Y but never set it to point to a pointee. Hmm very observant. Hey you're looking good there Binky.","width":2176},{"text":"Can you fix it so that Y points to the same pointee as X. Sure! I'll use my magic wand of pointer assignment. Is that going to be a problem like before? No this doesn't touch the pointees, it just changes one pointer to point to the same thing as another. Oh I see now Y points to the same place as X","width":1152},{"text":"So wait, now Y is fixed, it has a pointee. So now you can use the wand of dereferencing to send the 13 over. OK here it goes. Hey look at that, now dereferencing works on Y. Since the pointers are sharing that same pointee, they both see the 13. Yeah sharing whatever, so are we going to switch places now? Oh look were out of time. But... just remember the three pointer rules, number one, the basic structure is that you have a pointer and it points over to a pointee. But the pointer and pointee are seperate, and the common error is to set up a pointer and forget to give it a pointee. Number 2, pointer dereferencing starts at the pointer and follows the arrow over to access its pointee, as we all know, this only works if there is a pointee. Which kinda gets back to rule 1. Number three, pointer assignment takes one pointer and changes it to point to the same pointee as another pointer. So after the assignment the same pointers will point to the same  pointee, and that's called sharing. And that's all there is to it really, bye bye now.","width":4224},{"text":"I wanted to add one thing to this, that is captured by the video that I sort of forgot to say, and that is, if we also have integer pointer Q, and that is set up in memory, who knows where. And if I say Q gets the value of P, this whole pointer assignment thing totally makes sense. It's not magic at all because think about what it means for Q to get the value of P","width":6336},{"text":"It means b24 is copied into this space, right?","width":512},{"text":"B24 is copied into this space, so after doing so, Q refers to that same memory address. So that whole sharing thing, it wasn't magic at all. OK so any questions about that?","width":1152},{"text":"OK so like I said practice is golden here, so let's spend some time practicing... Yes?","width":576}]