[{"text":"An abstract data type called a...there's a hint on the screen...dictionary. The Abstract data type","width":576},{"text":"that we were interested in was called a dictionary. Here is the functionality of a dictionary we need to be able to insert","width":640},{"text":"into it given a key. Insert into it given a key and data.","width":704},{"text":"We need to be able to remove elements from it given a key","width":320},{"text":"Find elements given a key and returning probably the key-data pair","width":576},{"text":"Probably that. And then of course we want to be able to see what things we have in a dictionary.","width":640},{"text":"Though this is a gift","width":192},{"text":"This is a gift not necessarily part of the original abstract data type. ","width":576},{"text":"This is by convention is really nice when a dictionary gives you the ability to get all of your data out of it in some efficient way.","width":576},{"text":"So we are talking about implementing dictionaries. What was the particular implementation we were working on?","width":512},{"text":"what was the particular structure we were using to implement dictionaries? ","width":448},{"text":"Binary search trees that's right. Here's an example of one and I think a quick glance will remind you of that thing, okay?","width":704},{"text":"Now, inside this class dictionary, which is templated to accept a key type and a data type. ","width":576},{"text":"I have sort of spelled out the necessary components that we needed to implement the dictionary using the binary search tree. ","width":640},{"text":"But, oh and going along with that, I asked you to just please accept that the contents of each node were keys, and that the data is hiding somewhere behind the node. ","width":1088},{"text":"Then our focus became manipulating the structure based on their keys, okay?","width":384},{"text":"And we got most of the way through this little list of functionality here. ","width":512},{"text":"We did traversal a few days ago, we did inserting and finding in the structure. ","width":384},{"text":"And today we are gonna focus on remove it. Now at this moment I'm gonna stop talking about dictionaries per se. ","width":640},{"text":"And focus on the implementation. The rest of the code you are gonna see today, instead of being class dictionary, ","width":576},{"text":"is going to be class BST. And I'm not gonna focus on the data. ","width":384},{"text":"But suffice to say what we do in forms what might be actually a private member of a dictionary class. ","width":512},{"text":"So you might say that the dictionary contains, or has a binary search tree at the root of its implementation.","width":576},{"text":"Okay it's just a slightly different design. Another motivating factor for this was that I forgot to templatize the data in all the code that I wrote for the rest of the day. ","width":896},{"text":"And we don't need it for what we are talking about so I got rid of it and we are gonna focus on the keys. ","width":448},{"text":"That's all. ","width":128},{"text":"Alright, I want to do a little bit of review, and this is actually one of my very favorite moments. ","width":512},{"text":"If I can pull it together here. So this is a web page but it might be just an image of one, apparently. ","width":768},{"text":"Let me see if I can get it. ","width":512},{"text":"(trying to open up the web page)","width":3072}]