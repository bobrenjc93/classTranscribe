[{"text":"that means as in like classes that I've written myself.","width":256},{"text":"The same way that it deals with any builten type.","width":576},{"text":"All it does is when you make a template,you are giving it sort of this template, this cookie cutter,right.","width":448},{"text":"For a function,and then it stands out the implementation of that once it's invoked with a particular type.","width":512},{"text":"So if I have a template function and I call it. ","width":192},{"text":"Like a max funtion maybe.","width":64},{"text":"If I call the max function with books.","width":192},{"text":"It'll try and make a function that does match on books.","width":192},{"text":"And so that works if I have a less than for books.","width":192},{"text":"If I don't have a less than for books, then it doesn't work.","width":192},{"text":"Because it can't","width":128},{"text":"It looks for ok, you are trying to say book,you are trying to say b less than a.","width":192},{"text":"where b is a book a is a book","width":128},{"text":"ok I will look for operate less taking book and a book.","width":192},{"text":"Don't find one.","width":64},{"text":"I don't understood.","width":64},{"text":"So it deals with your builds and types the same way that deals with any other type right.","width":320},{"text":"It tries to stamps out this function, it looks for any funtions or methods that you are calling on those things.","width":576},{"text":"And if they exits it's fine.","width":64},{"text":"If they don't, well, I couldn't know what to do. right. ","width":192},{"text":"So it works the same for builten types.","width":128},{"text":"or you own defined types for ","width":384},{"text":"primitive types like integers floats and doubles as well as for classes like pngs and strings and books and spheres and something else.","width":512},{"text":"this algorithm appilies","width":128},{"text":"As for to make a funtion that returns auto and takes auto as it's arguments.","width":1088},{"text":"Hmmmmmmmm, not really.","width":128},{"text":"So you can have we'll hit latter.","width":256},{"text":"On having a function that returns auto but doesn't really return auto.","width":256},{"text":"we will tell that what that actually means latter.","width":192},{"text":"You can take auto as arguments.","width":256},{"text":"Because the way that auto works right.","width":448},{"text":"is it figures out what the type my right hand expression is, and then replaces the auto with  whatever that type is.","width":384},{"text":"So if you just got a function that is taking auto and auto,there is no initialization of those variables yet.","width":512},{"text":"So it can't. It doesn't know","width":64},{"text":"So in that case, the right way to do, the right way to have something like that is to use a template.","width":320},{"text":"So it take a T and ","width":640},{"text":"it depends on T and B","width":128},{"text":"yeah, not, not really but kind of.","width":320},{"text":"you can look into auto return types and there is some stuff there (I don't recognize what chase said next)","width":448},{"text":"they can't. The problem there is that they can't take auto arguments.","width":448},{"text":"You can't have arguments that's auto. It doesn't, that doesn","width":128},{"text":"'t work.","width":64},{"text":"(ring?) auto is fine. But we won't really do that.","width":256},{"text":"the extra credit for doing the partner MPs alone. No you are just a bad ass.","width":384},{"text":"hahahahahh","width":64},{"text":"So right, So there is, there is a question on like how do I know where to put files.","width":896},{"text":"So we've got this slash include folder and we've got this slash src folder. What goes where?","width":384},{"text":"and why","width":64},{"text":"So the slash include folder is for anything that is a header file or any thing that is going to be bounded and included in the code some where ","width":512},{"text":"All of my header files will go in slash include because somewhere else I'm gonna say  pound doesn't include name of header right?","width":576},{"text":"Sort of by convention I'll put all of my includes in this include folder, all of my headers in this include folder. ","width":512},{"text":"And then all of my cpp files my source files that are defining of all my function not declaring but defing.  ","width":256},{"text":"I'll put those in the slash src file which is short for source","width":192},{"text":"my includes in one folder and my sources in another folder and that is kind of the distinction. ","width":320},{"text":"That get's us a little muddy when we start talking about templates.","width":192},{"text":"Because you have to define the body of the functions for templates actually in something that's included in everybody else's code.","width":512},{"text":"Because you don't compile templates down the object files.","width":192},{"text":"you extentionate them and then it's compiled done but only when it's called.","width":192},{"text":"Only when the compiler see the reference of that template.","width":256},{"text":"Then it extentionates it and then it generates code.","width":64},{"text":"So templates are a little bit wired.","width":128},{"text":"So to make that weiredness clear. I'm having this have a seaperate extention for those files. ","width":448},{"text":"and may going the include folder","width":64},{"text":"go in the include folder because they are pound included from the bottom of the header file.","width":256},{"text":"Right, scope_pointer.h for example, pound includes scope_pointer.tcc at the bottom of it's header file. ","width":384},{"text":"So since I'm including it.  I'm going to put it in to the including folder.","width":128},{"text":"The other reason for that is if you shaping this as a library and you want other people to use it.","width":448},{"text":"the include folder is going to be the staff that you must give to users and the source folder is going to be the staff that you don't have to give to users. ","width":448},{"text":"ok? the things in slash src are going to be compiled down the object files.","width":448},{"text":"And so you can in principle give people the object files and header files and they have enough that they can build their own programs against your staff.","width":320},{"text":"So you don't have to give them the source files.You have to give them the header files.","width":256},{"text":"They don't have the decoration of your class and what functions it got.","width":256},{"text":"They can't, even if you give them the object files like grid. I don't know what that does.,","width":320},{"text":"I can't","width":64},{"text":"know what functions are there","width":320},{"text":"Sort of the staffs that goes in include are staffs that you have to give your users if you shipping that as a library. ","width":448},{"text":"And the staff that goes in the src is the staff you wouldn't have to.But if you are nice and you want to open source  your staff, then great, you know, put it.","width":448},{"text":"make that public.","width":64},{"text":"but you wouldn't have to","width":64},{"text":"we'll touch on the tcc a bit later too.","width":512},{"text":"I have a blue screen through half way through this prelecture.","width":64},{"text":"That's why my friends don't use friends use windows..","width":192},{"text":"Oh right. So this is a interesting, interesting question","width":640},{"text":"Two classes are defined in a template.","width":320},{"text":"So the example here is like template class T class B","width":192},{"text":"T & funcs function","width":192},{"text":"T r1 T r2 B r3","width":256},{"text":"So he's got a template function that has two type arguments T and B","width":192},{"text":"And is taking two things of type T and one thing of type B","width":256},{"text":"His question is can T and B be the same thing when I extentionate this ","width":256},{"text":"So another way to saying this is I've got template class  T class B","width":256},{"text":"void foo(T A ,B A)","width":576},{"text":"can T and B be the same type. Yes,it is allowed","width":64},{"text":"Ok just,that definition allows for them to be different.","width":192},{"text":"But they could be the same.","width":64},{"text":"ok, I can fill in T and B with the same type and that's ok.","width":384},{"text":"It's not like it's required to be different.","width":64},{"text":"If I said T a, T b in that function that I only had one template argument.","width":448},{"text":"now the T's has to be the same ","width":64},{"text":"cause I'm using T's like.","width":192},{"text":"Think T is like a type of variable.","width":64},{"text":"when I'm filling with in, I mean replace all the T's with a particular type,","width":192},{"text":"So it is going to say like int a, int b","width":192},{"text":"If I have one that takes two arguments class T and class B.","width":384},{"text":"Then in there if I say T a B b ","width":192},{"text":"It could be int a, int b; int a double b; it could be, you know string a,book b","width":320},{"text":"could be anything right.","width":128},{"text":"Because those are allowed to fill in with different values.","width":128},{"text":"It could be the same, it could be the different","width":128},{"text":"There is not a restriction that requires them to be different.","width":320},{"text":"You can write a function that does that.","width":128},{"text":"I'm not gonna show you how.","width":64},{"text":"Because that gets a little bit invoved","width":128}]