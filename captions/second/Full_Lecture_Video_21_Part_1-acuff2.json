[{"text":"Okay I do plan on eventually having a postmortem for this exam I just need to get around to scheduling a room for that and also finishing grading","width":576},{"text":"I have no idea on statistics at all on this point because they're still in the middle of grading that. The aim is to have it back on thursday but I'm not even gonna write it down because I don't have any confidence that that will necessarily happen for sure at this point","width":1024},{"text":"My goal is to have them back on Thursday.","width":320},{"text":"","width":256},{"text":"So last time and pretty much all of last week we were talking about implementing the dictionary ADT using a binary search tree.","width":640},{"text":"We had these nice binary trees that had an ordering property on their keys so we could locate values associated with keys by doing a traversal of the tree going left or right depending on whether it was smaller or greater.","width":832},{"text":"And we figured out how to do all the dictionary ADT functions on those, we figured out find(), add(), remove(), all these things","width":704},{"text":"And we made a claim that all those functions had running time proportional to the height of the data structure","width":512},{"text":"Which is true, but sort of useless because the user shouldn't have to think about the height of the structure when they're thinking about a dictionary. ","width":640},{"text":"It's a dictionary, it doesn't have any notion of a height in it if you're just thinking about a dictionary. If you're thinking about a binary search tree, then sure it has a notion of height but if I just think about a dictionary, dictionaries don't have heights.","width":768},{"text":"I can add to them I can remove from them I can find values associated with keys but they have no notion of 'height' so saying running time is proportional to height is kinda... It's nice for us, but for our users they have no idea what the height is.","width":1088},{"text":"So we need to be able to make an argument about the height so we did that for a general binary search tree. What's the worst case height for a general binary search tree?","width":512},{"text":"O of n, right. And how did we make one? We made one real quick at the end of lecture I think last time. How could you make me a bad looking binary search tree by insertions? What would your keys look like?","width":832},{"text":"","width":128},{"text":"Okay well your tree structure would look like a linked list, sure. How would you build that using dictionary ADT functions?","width":448},{"text":"","width":128},{"text":"Yeah, insert 1 with some value, 2 with some value, 3 with some value, 4 with some value, 5 with some value.","width":384},{"text":"The keys are in increasing order which means that the - like the if you insert the smallest key first that's gonna be the root and then the second smallest key is the right of the root and the third smallest key is the right of the right of the root and then you keep going.","width":896},{"text":"All the way to the right and you have this horrible looking linked list kind of structure","width":256},{"text":"So now we're gonna start talking about a modification to our binary search trees that allows us to guarantee a better height than that.","width":704},{"text":"These are still going to be binary search trees, but they're gonna have a modification to them so that they can automatically rebalance themselves","width":704},{"text":"So we're going to talk a lot about balance factors and what a balanced tree looks like so let's start there.","width":448},{"text":"So we're gonna define the balance factor of a tree, alternatively of a node 'cause every node is itself a tree...","width":448},{"text":"So we're gonna define the balance factor of a tree as the height of the left minus the height of the right.","width":512},{"text":"And I want you to write a recursive definition of a height balanced binary tree where for every element in the tree, every node in the tree,","width":704},{"text":"The absolute value of the balance factor of that node is less than or equal to one.","width":320},{"text":"","width":384},{"text":"And then I want you to draw me two pictures, one that is a balanced tree and one that is not a balanced tree.","width":384},{"text":"","width":128},{"text":"I'm gonna give you a couple minutes to think about that and then I want someone to come up here and write their recursive definition","width":448},{"text":"[background noise]","width":3648},{"text":"By the way I only care about the balanced part here, so don't worry about like left is smaller than right, just do the balance part. I only care about the balance factor of the tree.","width":563},{"text":"[background noise]","width":4730},{"text":"Is there anybody who has a workable recursive definition of what a balanced binary tree might look like?","width":448},{"text":"[background noise]","width":384},{"text":"Nobody...","width":116},{"text":"Not a one...","width":64},{"text":"[background noise]","width":512},{"text":"Okay, so can anybody draw me a picture of a tree that's balanced? Let's start with that.","width":512},{"text":"[background noise]","width":1152},{"text":"I know everybody can draw a picture of one that's not balanced, the linked list tree looks like a non-balanced tree.","width":320},{"text":"","width":128},{"text":"What does a balanced tree look like?","width":256},{"text":"","width":256},{"text":"That's a very balanced tree. What's the balance factor of all those nodes? Zero.","width":384},{"text":"The height of the left is exactly the height of the right so this is kinda the most balanced tree you could possibly get.","width":384},{"text":"This is an example of a balanced tree. ","width":192},{"text":"","width":64},{"text":"I'm gonna start chopping off nodes and I want you to tell me when it becomes unbalanced.","width":384}]