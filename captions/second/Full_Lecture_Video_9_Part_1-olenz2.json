[{"text":"You'll notice I forgot what year it is, so fix that","width":209},{"text":"Okay, so I wanna jump back to last lecture where we were thinking about templates","width":512},{"text":"We had this triple class, it was a template with class A class B class C","width":320},{"text":"That meaning it had three different template parameters, each of which named type, so we could have triples of three different distinct types, or three unique types, or three types are the same, or two types that are the same one type that's not, whatever","width":1024},{"text":"So the first one names the type of first, the second one names the type of middle, the third one names the type of last.","width":384},{"text":"So we had a class that was kinda similar, oh I didn't realize I'm cutting off a little, okay, lemme fix that","width":384},{"text":"I believe the way to do that is to just do one of these....","width":320},{"text":"[Chase fixing stuff]","width":448},{"text":"That should say auto-adjusting and that doesn't...","width":192},{"text":"cool","width":64},{"text":"I guess I'll just move that over a little...","width":192},{"text":"Okay, call me out if I'm writing off the end","width":256},{"text":"I'll try and figure out what the heck is going on there later","width":101},{"text":"Okay, so we got our triple class, the same thing as last time, and we wrote some functions that access things but we're not going worry about that","width":320},{"text":"for now, I want you to think about this snippet over here","width":320},{"text":"I'm making a bunch of triples, I'm doing some assignment, so I want you to think about each one that I've sort of drawn an arrow on","width":448},{"text":"is that okay? does that compile?","width":192},{"text":"what does that do? does that do what you would expect? Is that bad? So I want you to think about that a little bit","width":384},{"text":"Then, number 2, so I'm going to give you some time to work on these, so then number 2 says write a template function make_triple() that given three parameters constructs a new triple and returns it by value.","width":832},{"text":"And then, there's this sort of thought experiment which why do we want something like that, why is that nice?","width":384},{"text":"And then, 3, so we're going to do 1, 2, and 3, and I'm gonna give you a little bit of time to work on those and then we'll come back after 3","width":512},{"text":"3 is write a call to your above function, so after you've written the make_triple() function, write a call to it that will make a triple with a double, an int, and a char","width":640},{"text":"a single character is the char, and int as in a normal int like 1, and a double as in like 1.2 or something","width":576},{"text":"and then, right next to it, write an invocation of a constructor directly that does the same thing","width":384},{"text":"This is hopefully going to answer the question of why is it nice to have a make_triple() function?","width":512},{"text":"Alright, talk with your neighbor for a little bit, I'll come back let's say.... I dunno... I don't think it'll actually take all that much time, so let's say 10:15.","width":576},{"text":"[Given time to work]","width":19328}]