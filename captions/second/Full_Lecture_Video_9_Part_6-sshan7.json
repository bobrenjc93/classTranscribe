[{"text":"[silence]","width":476},{"text":"what's up?","width":151},{"text":"which one are you talking about?","width":143},{"text":"yes? mhmm. uh why is not your turn?","width":2109},{"text":"no there's just one variable, ok. correct.","width":850},{"text":"okay just to read this code, there's only one turn variable ","width":288},{"text":"so when it says turn to win it's still the same turn variable","width":650},{"text":"okay so what I asked you to do is actually impossible","width":251},{"text":"this is a solution to the critical section problem","width":248},{"text":"this was the first published solution by dekker","width":364},{"text":"so let's see if we can understand some of the logic behind this as to how it tries to work","width":325},{"text":"ok so first of all, before we do anything else, we raise our flag, we are kind of signaling intent","width":386},{"text":"okay, I want to be inside the critical section","width":256},{"text":"so think about this flag as an intent, I want to go","width":554},{"text":"so then we have this while flag is raised","width":146},{"text":"right didn't we have this at the beginning of the lecture?","width":138},{"text":"yes we did and we saw how we could run into a problem of deadlock where both of them were waiting for the other thread to lower their flag","width":736},{"text":"but of course it never happened because thread one was waiting for thread two and thread two was waiting for thread one","width":453},{"text":"so what we do is to have a little bit more of a complicated logic","width":392},{"text":"which is to have a standoff","width":229},{"text":"and one of us will win","width":190},{"text":"and we take it in turns to see who wins in this potential deadlock","width":408},{"text":"so that's the purpose of this, so if it's your turn to win, then I'm just going to lower my flag and wait while it's your turn","width":930},{"text":"in other words, you've won! you've won this competition. I'm going to let you go","width":504},{"text":"so at some point though, you're finished and you've set the turn back to me, you'll give me the golden chalice","width":463},{"text":"or the trump card if you like","width":157},{"text":"what do I do now? well I don't continue immediately. ","width":164},{"text":"instead, I play another game with you. i say okay I'm going to raise my flag, ","width":266},{"text":"I've got this intent again to go into the critical section. but I'm not going to go straight in","width":274},{"text":" I'm going to first see if your flag is raised","width":489},{"text":"so it's a bit like playing trumps except that we're going to take it in turns to see who wins","width":400},{"text":"if we do that, then we've solved the critical section problem","width":225},{"text":"namely that we have mutual exclusion only one thread or one process at a time can be inside the critical section","width":439},{"text":"we've got bounded wait, what do we mean by that? well a rough definition is that I only have to wait for a bounded amount of time","width":693},{"text":"a more precise definition is that I only have to wait for one other thread or process to enter the critical section and then its my go","width":637},{"text":"and we've got progress","width":136},{"text":"so if the other thread or process is not inside the critical section, I get to play immediately, I get to use the critical section, I get to execute that code","width":646},{"text":"it took many many years to come up with this solution and it took even more years, several decades before another solution was published, here it is","width":558},{"text":"between those times, there were many incorrect solutions published","width":563},{"text":"and so here is the last solution I'm going to show you today","width":311},{"text":"the original article from peterson ","width":446},{"text":"this might look like it was from the 1960s, in fact it was from 1981","width":442},{"text":"that's how long it took to find a simple solution to the critical section problem","width":308},{"text":"that's how poor our brains are at how to cope with multiple threads or multiple processes","width":450},{"text":"it's incredibly hard to reason about this stuff","width":255},{"text":"right, I'm not going to talk about this but I will say the following","width":340},{"text":"first of all every systems programmer knows of peterson and dekker in terms of the critical section problem","width":404},{"text":"it's the kind of thing that should roll off your tongue in an interview","width":164},{"text":"secondly, yes I may choose to add a multiple choice quiz question based on these two solutions","width":461},{"text":"for example, does this code... is this code dekker's solution? or is this code a version of peterson's solution","width":474},{"text":"thirdly, I may choose to make other code which fails and I'm going to ask you in an exam quiz to work out whether it fails mutual exclusion, progress or bounded wait","width":858},{"text":"and with that, that's the end of today's lecture, if you have questions for me please come down and see me! thank you very much","width":384}]