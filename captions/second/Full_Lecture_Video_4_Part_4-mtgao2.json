[{"text":"I heard segfault it's undefined","width":466},{"text":"it might write a blank img ","width":237},{"text":"it might crash","width":64},{"text":"it might write a weird looking image","width":178},{"text":"because the heap has been overwritten or the stack frame has been overwritten and that position to something else","width":352},{"text":"but its definitely a run time error","width":118},{"text":"so this is not good code","width":152},{"text":"this is a runtime error","width":522},{"text":"the reason for that is that we returned a pointer","width":215},{"text":"to something that lived on our stack frame","width":175},{"text":"and if you return a pointer to something that is on your stack frame","width":211},{"text":"your setting up whoever uses that pointer for sadness","width":274},{"text":"because you know that all of the memory associated with the stack frame","width":237},{"text":"is going to be released at the end of the  function","width":146},{"text":"right so if i give you a pointer to an image that i put on the stack ","width":322},{"text":"and then my stack goes away","width":61},{"text":"i've given you a pointer to something that's no longer there","width":156},{"text":"right so that's definitely a problem so this is not good","width":509},{"text":"the memory diagram makes that clear you got a pointer up into a stack frame that I drew an X through and then you try and deference that pointer and that's bad right.","width":1207},{"text":"right so okay, so how do we fix this is the question basically and his suggestion is okay well","width":448},{"text":"we sort of want that png to live longer than the function call","width":280},{"text":"we want allocate png to stick around after allocate is gone","width":264},{"text":"which means that we definitely can't put it on the stack","width":189},{"text":"because if put it on the stack it goes away","width":122},{"text":"so what if we use the heap right?","width":102},{"text":"the heap memory stays around until we explicitly get rid of it","width":183},{"text":"so if we put something in the heap and gives somebody the pointer to it","width":192},{"text":"and tell them hey its your responsibility now","width":192},{"text":"that memory will stick around after the function is done","width":158},{"text":"so we can fix this by instead changing how this works so instead of these lines","width":725},{"text":"you know I might write something like okay","width":330},{"text":"png* ret is a new png","width":553},{"text":"w h","width":233},{"text":"and now if we go back and modify this","width":316},{"text":"ret is no longer the image itself","width":157},{"text":"ret is a pointer to the image over there","width":423},{"text":"so now the image is in the heap somewhere","width":210},{"text":"okay","width":64},{"text":"and then we should return ","width":192},{"text":"return what?","width":192},{"text":"address of ret?","width":42},{"text":"or ret?","width":75},{"text":"just ret","width":42},{"text":"why not address of ret","width":128},{"text":"it's already a pointer right","width":49},{"text":"address of ret would be a png**","width":193},{"text":"right so that would be a type mismatch ","width":194},{"text":"just going to return ret","width":155},{"text":"okay","width":65},{"text":"now what happens?","width":114},{"text":"so now my function is returning my return value","width":228},{"text":"is the memory location of this thing","width":168},{"text":"right because im giving it the value of ret","width":137},{"text":"so my img pointer will take the same value that is it will point at the same thing","width":367},{"text":"and then the stack frame for allocate is released","width":384},{"text":"that do anything to the image that is in the heap?","width":337},{"text":"when this stack frame goes away","width":256},{"text":"nono","width":84},{"text":"okay","width":52},{"text":"the png variable that is in the heap or the png object that is in the heap","width":300},{"text":"is not going out of scope","width":171},{"text":"going out of scope is exclusively for stack allocated objects","width":320},{"text":"so the png that i put in the heap doesn't go out of scope","width":185},{"text":"the pointer to it does","width":131},{"text":"but it's just a pointer","width":61},{"text":"just a number","width":72},{"text":"nothing special about that","width":87},{"text":"so that is released just like any other primitive data type that we've talked about","width":320},{"text":"moved away stack frame","width":239},{"text":"so this goes away which means that this pointer is gone but who cares","width":321},{"text":"we already have a pointer to where it referred to already anyway","width":218},{"text":"so we haven't leaked anything just yet","width":135},{"text":"because we have a pointer that we can still get to","width":128},{"text":"okay","width":125},{"text":"now inside of main we're going to invoke img->save","width":286},{"text":"so that is the same thing as saying *(img) to get the image","width":230},{"text":"then called the .save on it","width":155},{"text":"we did this in the lab","width":84},{"text":"so now is that fine?","width":214},{"text":"Yeah","width":64},{"text":"the img pointer is now pointer to valid memory","width":253},{"text":"it's not clouded out or x'd out","width":122},{"text":"it's still there we know it's alive","width":64},{"text":"we can access it ","width":59},{"text":"the behavior is defined","width":82},{"text":"we get a 100 by 200 pixel png saved to blank.png","width":422},{"text":"on that line","width":73},{"text":"okay and then we delete img ","width":204},{"text":"which is going to follow this pointer","width":105},{"text":"and delete the memory","width":80},{"text":"and return 0","width":80},{"text":"so now we know that we don't have any memory leaks","width":103},{"text":"and no runtime errors right","width":70},{"text":"its all good and fine","width":208},{"text":"this is exactly how we'd fix this function","width":163},{"text":"we needed to make sure that we needed someway of guaranteeing that that object lived longer than that function did","width":385},{"text":"and we can't do that with stack frame","width":259},{"text":"so what about this second one?","width":111},{"text":"let's look at this second","width":429},{"text":"looks very similar","width":95},{"text":"right?","width":177},{"text":"we've got an allocate function taking width and height","width":172},{"text":"its returning its setting up an img ret on the stack","width":265},{"text":"and its returning that object","width":139},{"text":"but now its returning it by reference instead of by pointer","width":292},{"text":"okay","width":47},{"text":"and then instead of having a pointer on the stack frame for main","width":622},{"text":"we have an actual png on the stack frame for main","width":114},{"text":"so img is now actually","width":217},{"text":"a full png object","width":126},{"text":"it may have pointers in the heap but just think of it as a black box","width":316},{"text":"you don't have to care about whats in it ","width":32},{"text":"you just know that its there","width":81},{"text":"so there is a png on the stack","width":128},{"text":"now we're setting it to be allocate of 100 200","width":272},{"text":"so we're invoking this function now","width":128},{"text":"so we go here again same thing as before","width":295},{"text":"ret is going to be an img on the stack","width":303},{"text":"setup right","width":89},{"text":"probably blank","width":131},{"text":"that dimension so its big white ","width":181},{"text":"and then we return it","width":90},{"text":"so now we're returning ","width":276},{"text":"back to main","width":202},{"text":"with a reference","width":238},{"text":"we are not going to make a copy of the thing we're returning","width":297},{"text":"instead we're saying okay","width":140},{"text":"we're going to give you a caller here","width":226},{"text":"here's a name","width":87},{"text":"that refers to some memory","width":76},{"text":"somewhere else","width":57},{"text":"it's not  a pointer you don't have to dereference it","width":143},{"text":"but its just another name for something","width":153},{"text":"so if you use this","width":76},{"text":"you're just going to refer to some memory somewhere else","width":250},{"text":"im not going to give you a brand new copy of this","width":227},{"text":"okay","width":110},{"text":"so then given that what do you think this does","width":384}]