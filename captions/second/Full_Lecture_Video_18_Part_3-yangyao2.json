[{"text":"yeah","width":0},{"text":"and not, i am not calling pop back]","width":11},{"text":"I am doing a swap and decommending the sizindex","width":256},{"text":"so opening the element at the sizendex","width":512},{"text":"at the back of the heap","width":128},{"text":"I reduced the size of the heap","width":192},{"text":"I do not reduce the size of the array","width":128},{"text":"this is key","width":192},{"text":"I reduced the size of the heap","width":128},{"text":"I do not reduced the size of the array","width":128},{"text":"right, I decommed that sizendex","width":256},{"text":"So I am treating the part of the array, I am treating as my heap is shrinking at every step","width":256},{"text":"but the array itself is not and that's crucial cuase I can't, right?","width":256},{"text":"I have to store all the elements I had in the begin with","width":192},{"text":"right?","width":192},{"text":"go back","width":448},{"text":"just return it","width":64},{"text":"maybe a function take by reference or something doesn't respondfication to it","width":256},{"text":"this wouldn't be a member function of heap class","width":128},{"text":"you just be using your heap algridoms on that array","width":128},{"text":" ","width":1088},{"text":"as long as you are not allocating any additional memory","width":192},{"text":"your sort is in place","width":128},{"text":"most impletation of the merg sort are not in place","width":192},{"text":"you can write an in place merge sort","width":128},{"text":"it's way harder than you rethink it is ","width":128},{"text":"um","width":512},{"text":"both back it you are, can not plug an implemtation merg sort they are acading  arrays","width":192},{"text":"it's very difficult to write","width":256},{"text":"you can but it's very difficult to write in an in place merg sort","width":192},{"text":"so most people don't teaching","width":192},{"text":"and you are certainly didn't do in 125","width":128},{"text":"","width":448},{"text":"ok","width":64},{"text":"","width":320},{"text":"last heap bring brain teaser","width":192},{"text":"","width":448},{"text":"fif point, these kinds of questions test would you know how to use a data stucture","width":320},{"text":"I like question like this","width":128},{"text":"ok","width":192},{"text":"so","width":64},{"text":"designing the algridom that find the top K elements","width":192},{"text":"in an array","width":128},{"text":"of size n, where k is much smaller than n","width":192},{"text":" so you can think of k, as affectivly being constant","width":256},{"text":"like ten","width":64},{"text":"finding the top ten","width":64},{"text":"in this array","width":64},{"text":"and it's a really big array,really really...... big ","width":320},{"text":"so we want to do this faster than nlog n","width":128},{"text":"we don't want to sort the array","width":192},{"text":"cause,obviously the solution could be sort of the whole array","width":128},{"text":"and just look at the index 0 to 9, right, as your top ten","width":192},{"text":"so this array is really huge, we don't want to do nlogn","width":320},{"text":"sort of this arrray","width":192},{"text":"design an algridon that can go faster than nlog n","width":320},{"text":"I mean, give you a little bit time to think about this, so ","width":192},{"text":"we will come back at um, I don't know, 28","width":320},{"text":"be 4min","width":64},{"text":"there is two different algridoms you can write here","width":192},{"text":"and sort of the , bullet pointer kind hint you towards one implementation force another","width":320},{"text":"ok, both of them would be faster than nlog n","width":128},{"text":"so go ahead talk to your neighbor, think about how you might do this","width":128},{"text":"hint you could use a heap","width":128},{"text":"","width":10432},{"text":" ","width":4224}]