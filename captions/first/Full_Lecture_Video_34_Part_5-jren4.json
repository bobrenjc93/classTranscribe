[{"text":"so our task then was to turn this into a merge sort problem","width":448},{"text":"in other words..","width":128},{"text":"that two neighboring chunks of data","width":320},{"text":"should be combined","width":128},{"text":"each individual chunk was sorted using queuesort","width":320},{"text":"and we had say eight threads available to start doing all this merging","width":576},{"text":"now the naive TAs solution was actually not that hard to beat","width":320},{"text":"here's all it did","width":192},{"text":"it simply copied all of these into a large array","width":320},{"text":"and we made a fair guess about how big a size it should be","width":320},{"text":"but we did use realloc just in case the data was going to be larger than expected","width":384},{"text":"but we didn't start off with something small like hey 16 or 32","width":256},{"text":"we gave it a big number because if realloc does need to realloc for space","width":384},{"text":"then it used to call malloc, it needs to then do a memcpy to move all of that data","width":320},{"text":"and talking to memory is slow so we made a good guesstimate about how big a buffer we would need","width":448},{"text":"it simply waited until we got all the pieces","width":256},{"text":"and then it used the part one code","width":320},{"text":"and then it printed out the whole result","width":512},{"text":"right how can we do better?","width":448},{"text":"in this regrade of this we're actually going to put in a small delay between each one to assure that there's actually some significant computational time to work on these items","width":960},{"text":"so some things that we can do which are better, obviously we've got 8 threads we could get started sorting this data before we see the very last piece of data","width":576},{"text":"the other thing we can do is at the very end","width":256},{"text":"we could actually start printing the results","width":256},{"text":"before we finished the final merge","width":320},{"text":"so in the very final merge, as we're pulling these two yellow pieces together","width":320},{"text":"if I got to here, I don't even need to write this data back I could be printing it out to a file","width":704},{"text":"as I merge these results together, so there's actually two optimization ideas","width":384},{"text":"right so what's the simplest way of doing some of these early merges","width":256},{"text":"well one is to say hey doing this stuff thinking about all these different levels is really really complicated","width":384},{"text":"for my tired brain","width":128},{"text":"and so get something simple working, here's a really simple idea","width":384},{"text":"is look at these in pairs","width":128},{"text":"look a lot of merging actually just takes down here at the smallest level","width":320},{"text":"so we could get some speed up","width":192},{"text":"just by thinking about these small blocks","width":192},{"text":"right so every time I see an odd numbered block, I'm going to start off the merge process to make myself a bigger block","width":704},{"text":"and so I could probably write that code just to deal with these smaller blocks","width":384},{"text":"the accounting, keeping track of all the statuses of these little blocks is not too hard","width":384},{"text":"and then when I finish making all of my lighter blue, my cyan blocks, then I'll just...","width":384},{"text":"give the rest of the problem to my original part1 code and just let it run through that","width":384},{"text":"right I should probably stop here because unfortunately...","width":576},{"text":"you are all two bright, you want to do better than this","width":256},{"text":"here's the danger, A writing C code is hard","width":256},{"text":"I'll give you an example of that on Friday when I talk about Toyota's C code and their embedded code inside their memory management unit","width":448},{"text":"various swear words have been defined to describe just what a mess this C code was","width":512},{"text":"so that's the first thing, look writing C code is hard, writing any code is hard","width":448},{"text":"second is that thinking about this algorithm is hard","width":192},{"text":"and sometimes it's good just to come up with something which","width":256},{"text":"you have high confidence in working, get that working and then have a go at something more complicated","width":512},{"text":"so I'll give you some hints about something that's a bit more complicated without going into a full algorithm","width":320},{"text":"and it's this","width":64},{"text":"let's label our blocks 0 1 2 3 4 you get the idea","width":576},{"text":"and also, we'll keep track of the blocks as to how much data they contain which is sorted","width":640},{"text":"so initially after we've done the queuesort I've got one block size of data","width":384},{"text":"and later up here I've got two block sizes of data","width":320},{"text":"so if I keep these labels","width":448},{"text":"then my labels correspond to where my blocks start in memory","width":384},{"text":"so let me call this block 0, this block 2, this block 4, this block 6","width":256},{"text":"if I do this, then I can make the following observation","width":320},{"text":"my block size gives me a strong hint to which pairs I should be merging together","width":576},{"text":"so for example, on my cyan here, if I gave you block 4, you could say oh you should be merging that with block 6","width":896},{"text":"if I gave you block 6, you could say oh you should be merging that with block 4 once they are of sufficient size","width":576},{"text":"so if I gave you a block 4 of size 2, you'd say okay great that needs to be merged with block 6 of size 2","width":384},{"text":"if block 6 of size 2 is not yet ready, then do nothing","width":256},{"text":"and we can go the other way, hey here's block 6 of size 2, you should merge with block 4 of size 2","width":512},{"text":"if block 4 of size 2 is not yet ready, do nothing, don't panic, don't worry about it because at some point block 4 will be ready in the future and it will merge with me","width":640}]