[{"text":"your laptop before we release the official instructions ecetera","width":768},{"text":"but that is it. that is coming up","width":64},{"text":"alright, so, next question, who here is ready for section this week?","width":512},{"text":"and actually got a little working editor?","width":192},{"text":"alright, who here is still working on it?","width":192},{"text":"okay, who here is procrastinating and has not started yet?","width":256},{"text":"alright, okay, so note that if you raised your hand on that last question, you are definitely [something] naughty.","width":320},{"text":"remember, the purpose of this work is for you to be on top of using these calls, understanding how memory works, understanding how to put them together so make sure you're ready","width":832},{"text":"and it's gonna be great prep for when we do the harder MPs","width":384},{"text":"right then so today here's what we're going to do. we're gonna talk a little bit more about C programming. I'm going to show you some more gotchas","width":448},{"text":"i'm gonna talk about getline I'm gonna talk about assert(), I'm going to show you some fun little demos and as usual, feel free to interrupt me and ask a question or two","width":640},{"text":"and as usual, most of this material is also in the wikibook. which was created last semester. So most of the lecture content, you'll see inside the wiki book","width":576},{"text":"alright, also, these lectures are now recorded so feel free to review them as well","width":384},{"text":"so, let's have a look at our little handout. overhead!!...","width":640},{"text":"doo doo doo doo doo","width":128},{"text":"right! so here's something you can put inside your C programs. if you write line underscore and undersore or file underscore and underscore, something magic happens","width":1024},{"text":"they get expanded by the C preprocessor into a number, as if you actually typed it, and a string, as if you actually typed in the file name","width":704},{"text":"that's currently being compiled","width":320},{"text":"so the value of line actually changes and the preprocessor knows which actual file line it is currently compiling","width":448},{"text":"so that can be useful for putting in debug information, so we can discover for example which part of our program is actually executing by printing this stuff out","width":512},{"text":"so, let's have a look, box pc","width":576},{"text":"okie dokie, so for example, I can say \"hey!\" or, let's just print it out. I'll do printf \"bad stuff happened in file %s at line %d\"","width":1536},{"text":"we'll put in, let's see I need the file and the string so that's a underscore. oops. can't get it back inside. thank you. file and line number.","width":576},{"text":"alright, so we will put a new line there...let's say exit our program so nothing else happens. okay, let's run this","width":704},{"text":"alright, so there we go, bad stuff happened in file program.c at line 14. that's pretty useful if we want to open our editor and go back to that particular point. so that happened at runtime.","width":1280},{"text":"and in fact that idea is used by another macro called assert","width":512},{"text":"so you can imagine we want to be able to say things like \"look, if my pointer is non-zero\" so I could say \"not equal to null\" or I could say \"not equal to zero\" or I could just say \"if not p\"  in other words, if its not a valid value","width":1088},{"text":"print an error message and quit","width":256},{"text":"right? that's a pretty useful thing to do during debugging. a quick test. before I start using p, I may be crashing in really strange ways so I just want to check if the following expression is true","width":704},{"text":"so that is actually what the assert macro does. so, I can say things like \"look, I want to assert that 2 is greater than 1\"","width":960},{"text":"let's check that. let's assert that 3 is less than 7 times 0","width":448},{"text":"right, let's run this","width":256},{"text":"we didn't get anything, did we?","width":576},{"text":"and, I'm wondering why","width":832},{"text":"let's see, we compiled asserts","width":576},{"text":"let's include assert here and we don't seem to be. AH. we want to compile it in debug mode","width":576},{"text":"there we go, right","width":64},{"text":"so this time we, haha, yes! this time we remembered to include the assert.h and assert is actually a macro. it expands to include that underscore underscore line thing","width":960},{"text":"and underscore underscore file","width":64},{"text":"so now, here we go, when we run this, it prints out program.c at line 15 inside my function main assertion 3<7*0","width":512},{"text":"it's pretty useful. it actually shows you the expression","width":256},{"text":"it's a nice simple development thing to use asserts","width":192},{"text":"because then you can check that people that are calling your functions are actually giving you say valid arguments","width":256},{"text":"and you can check that your assumptions are correct before you try to write complicated code","width":448},{"text":"and, it kills your program. it aborts","width":128},{"text":"so that's assert","width":128},{"text":"now then, pretty easy to use, remember to include it, include...assert.h and then, inside your program you just say assert and write an expression you expect to be true","width":1472},{"text":"like \"Hey! its wednesday!\"","width":128},{"text":"if that expression is true, nothing happens","width":192},{"text":"and in fact, when you make a release build, this expression isn't even tested","width":448},{"text":"this compiles to no node","width":128},{"text":"*code","width":64},{"text":"so it's good for performance","width":192},{"text":"but then you realize that you've been living on the edge. it doesn't actually check it.","width":384},{"text":"and it's a macro, because we want to be able to print out the actual contents of the expression we're going to test.","width":576},{"text":"and also we want to print out the line number. and also it's a macro because we can make the contents of the macro disappear when we do a release build","width":576},{"text":"so, with that, let's see if you can write a version of string cat. and what you want to do for strcat is append the contents of another string onto the end of the first string.","width":1088},{"text":"but, we're not sure that people are giving us valid arguments","width":320},{"text":"so how would you write this so that it aborts if either one of these were NULL ?","width":384},{"text":"what would you write?","width":64},{"text":"so see if you and your neighbor can finish this","width":192}]