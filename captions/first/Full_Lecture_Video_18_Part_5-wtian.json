[{"text":"so what kind of optimization can you make if the dirty bit is not set","width":704},{"text":"if the page is clean","width":128},{"text":"thanks! yes! great! you don't need to necessarily write it back to disk. it could be we already got a perfect copy on disk. ","width":768},{"text":"whats the point of actually writing it again when you know that its identical","width":256},{"text":"so you can save yourself from time","width":128},{"text":"if you know the page is clean","width":256},{"text":"could be that the page for example is just NULL / zero. you havent touched it at all. youve allocated some memory and you havent used it yet","width":512},{"text":"it could be part of your process. the CPU instructions that actually make up your program","width":384},{"text":"when you know you got that stored on DISK, whenever you need to read that, just load that page in","width":384},{"text":"so it tells us whether the page has been modified","width":320},{"text":"thats not all we can store about each page","width":320},{"text":"what else can we store","width":64},{"text":"we could have a ","width":128},{"text":"happy bit","width":192},{"text":"we could have a Fri.. not im just kidding","width":192},{"text":"we dont have a friday the 13th bit or a happy bit but i invite you to take on a hardware company and add that yourself when you want it","width":448},{"text":"so what else can we put inside each page. thats matter information. what would be useful to us","width":448},{"text":"yes! a valid bit","width":832},{"text":"okay. we should a valid bit that says its a real valid address, perhaps its not currently loaded into memory","width":1152},{"text":"what else?!","width":64},{"text":"ok...","width":128},{"text":"clearly clearly i need to make you a lot more evil","width":256},{"text":"think for a moment how we can our processes more secure","width":384},{"text":"how would you like protect memory in some way","width":704},{"text":"if you try to read from memory it gets you a segfault. okay i'll that ! yes","width":1024},{"text":"how about we protect what you can do with this emory","width":192},{"text":"so two common ones are whether its read only","width":448},{"text":"and whether you can execute it or not ","width":448},{"text":"so think about your virtual memory map for a moment. weve got our instructions down here. our functions that we've written","width":768},{"text":"or the CPU code. we've got the heap we've got the stacck","width":384},{"text":"up here","width":64},{"text":"ok i realize thats unreadable but you notice now! we've got the stack at the top and heap and functions","width":512},{"text":"the only error that we'd expect the CPU to execute instructions in is this bit down here, where we've written function code","width":448},{"text":"we dont expect to start executing instructions inside the heap and the stack","width":320},{"text":"and in fact if that happened, it mightve happend because someone's managed to have a buffer overflow and DELIBERATELY put malicious instructions into our memory and somehow managed to get the CPU to jump to that location","width":832},{"text":"so most processes, you should not be able to execute code thats store on the stack/heap","width":512},{"text":"and an exception might be a just in time compiler, such as java","width":320},{"text":"but most of the time we don't expect that so we should be able to mark our pages and say","width":320},{"text":"\"do not execute stuff inside this page, if you do raise an interrupt and tell the operating system about it\"","width":384},{"text":"another one is read only. read only is really cool","width":320},{"text":"because that allows us to share pieces of RAM","width":384},{"text":"for example","width":128},{"text":"the code for malloc, for example for strlen","width":576},{"text":"how about all the of the code inside the C library, libc","width":512},{"text":"we could put that inside one piece of memory and then share it with all processes that need it. for example how about the openGL library","width":704},{"text":"for example, right, and i can start listing all the common libraries and we only need to put them inside physical memory once!","width":576},{"text":"so its a huge saving","width":128},{"text":"and i  can share with all these other processes, so that i can minimize the total amount of physical RAM","width":640},{"text":"right","width":128},{"text":"here's a little demo here","width":1408},{"text":"okay, so in fact i can ","width":256},{"text":"look at this special file called maps","width":192},{"text":"and ","width":256},{"text":"in fact with linux i can see how thing are mapped","width":1984},{"text":"so ive got and we'll talk about this virtual file system later on in the course","width":320},{"text":"but you can see ive got libc, and for this particular process","width":384},{"text":"libc, different parts of libc are mapped into different parts of my address space","width":448},{"text":"right so we talked about sharing stuff","width":1088},{"text":"to be able to share libraries","width":192},{"text":"theres another reason why we might want to share some ram","width":640},{"text":"and that is IPC","width":64},{"text":"also known as inter-process communication, a way for two processes to share","width":448},{"text":"and ","width":128},{"text":"today we're just gonna talk about a few examples just so you can at least name drop this stuff inside interviews","width":512},{"text":"and here they are","width":192},{"text":"mmap","width":256},{"text":"allows me to ","width":192},{"text":"setup some shared memory between two processes ","width":448},{"text":"so i can say fork and now actually have some shared memory that exists between the child and the parent","width":384},{"text":"so its a deliberate way to say \"nonono we actually want to share this physical piece of RAM together between the child and parent\"","width":640},{"text":"how else can you connect two processe?","width":512},{"text":"how could else you could send some info","width":256}]