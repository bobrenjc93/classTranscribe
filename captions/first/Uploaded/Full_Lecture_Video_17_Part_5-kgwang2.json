[{"text":"Okay so let's convert this code into some actual code that works.","width":10048},{"text":"Remember that there might be multiple threads actually trying to do this at the same time. There could be multiple threads calling remove, multiple threads calling add,","width":448},{"text":"and we only want one of them at a time to actually change the value of our money variable.","width":320},{"text":"And we wanna make sure that we don't end up in deadlock and if we say, add enough money into our wallet, then a waiting thread will now move, she could then potentially carry on.","width":768},{"text":"So let's think of how we can do this","width":128},{"text":"first of all, let's put in some mutual exclusion here so only one thread at a time can actually access these variables","width":448},{"text":"right so how do we do that? ","width":64},{"text":"well we're gonna need our pthread mutex lock calls and let's pass in...","width":384},{"text":"variable and we'll... course we'll need that","width":256},{"text":"inside our add method as well and at the end","width":384},{"text":"i'll need a pthread mutex unlock","width":320},{"text":"if I could spell it, there we go, all right","width":256},{"text":"okay","width":256},{"text":"And you might say \"oh hold on a moment, you didn't stop pthread mutex lock correctly.\"","width":256},{"text":"That's okay, with vim I can do regular expressions, where I can say things like ","width":384},{"text":"Substitute on all lines","width":192},{"text":"p_m for pthread_mutex","width":448},{"text":"and do it global on each line so if there is more than one match per line, don't do it so... so there we go","width":320},{"text":"We haven't done condition variables yet though so the next thing is rather than doing a spin loop, ","width":512},{"text":"we wanna go to sleep, and guess what? ","width":192},{"text":"Our code we've written here is very close to what we need for condition variables.","width":256},{"text":"Rather than just burning up CPU, let's just send our little to sleep.","width":320},{"text":"How do I do that? Well, I can...","width":320},{"text":"Let's delete this word","width":64},{"text":"Delete word delete word delete word, right","width":192},{"text":"oops, too much...","width":64},{"text":"alright","width":64},{"text":"I can say pthread_cond_wait","width":448},{"text":"And say okay, wait on the condition variable and here's the mutex I want you to unlock.","width":448},{"text":"Okay","width":448},{"text":"So you might start by initially ","width":256},{"text":"By having, okay, paste that line in again","width":320},{"text":"By saying \"oh I just need one condition variable\"","width":256},{"text":"But actually, let's do better than that. Let's make all the threads that are trying to subtract go to sleep on one condition variable, and all threads which are trying to add...","width":576},{"text":"Go to sleep on another variable. And if we do that, we can make better performant code because we only need to wake up the right kinds of threads when we make a change to our system.","width":768},{"text":"Alright, so","width":192},{"text":"This one will make sleep on our second one. So if you're trying to add, then go to sleep","width":448},{"text":"This other condition variable","width":320},{"text":"Right, are we done?","width":128},{"text":"No, okay, so one thing we should do is wake everybody up. So if we stop, we should pthread_wait wake a thread up or two, how can I wake up all my threads?","width":896},{"text":"So broadcast, and I should wake up at least all the ones on cvs1 and also ","width":448},{"text":"do it on cvs2, right","width":128},{"text":"Now, how am I doing with time? okay, so","width":384},{"text":"So this thread, this broadcast would work in this particular case because its a one-way flag on most processes. ","width":576},{"text":"But actually, if we want to be really correct, what we should really do is","width":320},{"text":"We should always lock a mutex before doing this","width":320},{"text":"Okay","width":256},{"text":"Okay, so, just by for convention, if you're going to just as a kind of pattern thing,","width":384},{"text":"and for technical reason involving many barriers","width":256},{"text":"we're gonna actually just lock our mutex before calling broadcast.","width":192}]