[{"text":"Okay so we talk about this classically in terms of processes","width":384},{"text":"What a thread really is just a thread of execution","width":256},{"text":"Uh everything we've talked about processes applies to threads","width":320},{"text":"And uh you can actually set the uh scheduling if you wish uh in the pthread library","width":512},{"text":"And so for example there's a pthread call that allows you to say hey I want to use round robin scheduler","width":512},{"text":"Or hey I want to use first come first served","width":128},{"text":"So it's possible to set that as you create each thread","width":320},{"text":"Bear in mind","width":384},{"text":"If you set them first come first served","width":256},{"text":"Be careful","width":192},{"text":"because if a thread never finishes","width":448},{"text":"All the other threads","width":640},{"text":"wait forever","width":576},{"text":"wait an infinite amount of time","width":192},{"text":"Because we did first come first serve","width":192},{"text":"and you are at the front of the queue","width":256},{"text":"And you're saying","width":64},{"text":"Hah I'm going to take up this server forever","width":256},{"text":"MUAHAHAHAAH","width":64},{"text":"So that's just a little gotcha if you truly try to set the scheduling policy","width":640},{"text":"Uh so another quick tidbit there's this little command called nice","width":192},{"text":"People would like their commands to be nice","width":320},{"text":"So what you can do is Linux changed the priority of your process by nice-ing it","width":448},{"text":"And uh mere mortals, non root people, can increase their priority number which decreases their priority","width":832},{"text":"Which makes it less important","width":128},{"text":"And so you can say Okay I have a long running job","width":256},{"text":"Its going to take a lot of CPU","width":64},{"text":"But only run if there's nothing else to do","width":256},{"text":"In which case you might call nice","width":192},{"text":"As part of that","width":64},{"text":"If you are root you can nice the other way","width":192},{"text":"You make things more important and higher priority","width":320},{"text":"But you probably won't need nice unless you're trying to run uh background computational jobs","width":192},{"text":"And try to make it so they don't interfere with your UI","width":512},{"text":"So that's enough about scheduling","width":128},{"text":"Let's have a look at page tables","width":192},{"text":"So we've been playing a lot with TCP packets","width":64},{"text":"And uhm most of the internet uses TCP","width":384},{"text":"However uh we did mention there's another thing called UDP","width":384},{"text":"Which is packet based","width":320},{"text":"It's not a stream","width":192},{"text":"We simply send our telegraph or datagram off and hope it gets to the other side","width":512},{"text":"Let's have a quick look how we could make a UDP server","width":256},{"text":"And see how it's different from a TCP server","width":64},{"text":"Okay so uhm if we want to fill up a UDP server","width":576},{"text":"Listen on a particular port","width":192},{"text":"We'll set up our hints as usual","width":192},{"text":"Oh good we've set it to zero","width":192},{"text":"And today we want to use IPv6","width":64},{"text":"128 addressing","width":192},{"text":"So how do we specify that","width":128},{"text":"Well for our family we don't want address family INET","width":320},{"text":"We want INET","width":128},{"text":"INET6****","width":192},{"text":"We don't want sockstream","width":64},{"text":"We're not trying to make a streaming interface here","width":64},{"text":"We just want to send these little datagrams","width":320},{"text":"So we have SOCK_DGRAM","width":128},{"text":"And we want to listen on a port","width":192},{"text":"We don't want to actually send something anywhere","width":384},{"text":"We're trying to make a passive socket","width":256},{"text":"So for our flags here I need AI_PASSIVE","width":128},{"text":"Okay so we set this up","width":576},{"text":"We can set out get address info as usual","width":128},{"text":"I don't need to connect anywhere","width":320},{"text":"I want to connect to port 300","width":256},{"text":"And we'll get our result","width":128},{"text":"Let's assume that works","width":128},{"text":"So well check the return value of this","width":320},{"text":"Here's how we can set things up","width":64},{"text":"It just takes two calls","width":128},{"text":"Yes we need to make a socket as usual","width":192},{"text":"Remember that represents our kernel object","width":256},{"text":"The thing that is going to talk about our ability to the outside world","width":320},{"text":"And we pass in everything we get from our result object","width":64},{"text":"Note the hintes","width":128},{"text":"Yes we want to continue to a particular port","width":320},{"text":"So we need to call bind on that socket","width":128},{"text":"But that's it","width":256},{"text":"There's no queue to make","width":128},{"text":"There's no exec to do","width":384},{"text":"We just wait for packets to appear","width":128},{"text":"How do I do that?","width":192},{"text":"I call recvfrom","width":64},{"text":"And when you do this","width":448},{"text":"Not only can you get the data that someone set you","width":384},{"text":"So let's pass in a buffer and how big our buffer is","width":64},{"text":"You can also find out who sent it","width":320},{"text":"So that's the purpose of this structure here","width":192},{"text":"And we pass in the size of this structure as the last argument","width":256}]