[{"text":"so what is result pointing to?","width":256},{"text":"could be anything","width":320},{"text":"right? we just made this little thing on the stack","width":192},{"text":"its just whatever happened to be at the stack memory at that moment","width":256},{"text":"so we just called free on a arbitrary block of memory","width":192},{"text":"oops","width":128},{"text":"our program is probably gonna crash","width":192},{"text":"at this point","width":64},{"text":"but its certainly probably vulnerable to other attacks at this point","width":256},{"text":"ok so how should we fix this","width":128},{"text":"well here's what i would do","width":64},{"text":"i will probably set this to null to begin with","width":128},{"text":"and let me check, I'll only called this if the result has been changed","width":448},{"text":"so if its not equal to null","width":384},{"text":"then call freeaddrinfo","width":128},{"text":"that's a more robust program","width":64},{"text":"right","width":256},{"text":"port hijacking","width":320},{"text":"so","width":192},{"text":"i love this i want to dress up as a [gibberish] as a pirate","width":320},{"text":"yes! there's a potential for port hijacking when we write our server programs","width":384},{"text":"imagine this, imagine you write a fantastic web server","width":192},{"text":"or another program that uses sockets to communicaet","width":320},{"text":"and then your program finishes, probably crashes","width":192},{"text":"at that precise moment, another process starts listening to the same port","width":448},{"text":"mua hahaha... and it gets some bytes","width":192},{"text":"that were intended for yoyu","width":192},{"text":"well this is a security risk","width":192},{"text":"we should prevent this, right","width":64},{"text":"we should prevent another process from immediately starting up","width":256},{"text":"and that actually led to a socket wall where if you claimed a particular port, another process can't immediately reuse it","width":896},{"text":"if that process belongs to another user, we have a longer time out","width":512},{"text":"let's actually see this as a little demo","width":192},{"text":"and then we'll say what we can do","width":128},{"text":"uhh ... where is it... alright... so","width":896},{"text":"ok, right, good","width":448},{"text":"i have a program here. so now let's run my little server here","width":256},{"text":"ok so gcc server1.c","width":256},{"text":"alright, so here's a little program we service for where we waiting on accept waiting for connection","width":576},{"text":"right, so let me connect to this. i'll start a new window, ","width":320},{"text":"and is today i'll use nightcat , so nc localhost 1234 ","width":448},{"text":"okay, we've connected. Yes!","width":128},{"text":"it's good! so I can send something over here","width":192},{"text":"let me at this point quit my program, i'll make a few changes, and i'll run it again. ","width":320},{"text":"oops. bind failed","width":192},{"text":"address already in use. ","width":128},{"text":"I couldn't reuse that port","width":128},{"text":"so that port for little while is still being bound to that old process","width":640},{"text":"even though the old process is quit, we couldn't immediately reuse it. ","width":128},{"text":"okay, so what can we do as developers?","width":320},{"text":"uh we like to be able to reuse our programs","width":128},{"text":"so i'll testify it quickly","width":128},{"text":"[gibberish]","width":64},{"text":"it's okay I can reuse my port 1234 again","width":192},{"text":"so what options is to use","width":256},{"text":"hey, dont develop too fast","width":64},{"text":"but no we can do a bit better than that","width":192},{"text":"we can actually disable this security feature","width":256},{"text":"by setting an option on the sockets","width":128},{"text":"so lets see how we can do that","width":192},{"text":"hello ... just trying to connect to my machine right, my machine. so","width":256},{"text":"let's see what we can do here","width":128},{"text":"and there's a little option called setsocketopt","width":256},{"text":"where, make this larger, where ... have a socket, i can say i wanna be able to reuse the port in the future","width":896},{"text":"so if you set this option on the port, that this when your process dies, or quits, another process can immediately reuse the same port","width":640},{"text":"okay. so odd syntax. we are gonna see this in a bit more examples. ","width":320},{"text":"of this. ","width":128},{"text":"is that youll see that we have to , in this case, pass in the address of the integer value, and then the size of an int","width":896},{"text":"so we are gonna see this passing a couple time today when we pass in the addresses of something and size of the thing that we are trying to pass in","width":448},{"text":"but thats just a bit kind of useful line of code that youll be using in one of the later mps","width":384},{"text":"one of the mps that we've got lined up for you is called rival's mp, where we are going to simulate having a whole load of devices talking to, say, a server, so you might have to watch, you might have a pace maker, you might have a, i dont know, hair, that .. to your server ","width":1280},{"text":"and this is the single ... connecting and constantly talking to your server which collects your data, maybe collecting your blood pressure, and a whole load of your vital signs","width":640},{"text":"so ","width":64},{"text":"we want a server when we developing these stuff we wanna be able to quickly reuse ports, so here's the option to do that","width":448},{"text":"okay, so that's making ... this","width":256},{"text":"how do i do this? if we start our programs and we use the same port, easy, we gonna use setsockopt and the magic ... is this SO_REUSEPORT thing","width":1216},{"text":"which should be in the wikibook. If not, I would add it","width":256},{"text":"and notice we do this before we call bind so we do this early on","width":448},{"text":"just after creating this socket","width":64},{"text":"set this option on on the socket","width":192},{"text":"right so we've played with very very simple kind of server, now you wanna do more. ","width":768},{"text":"right? this is uiuc, this is illinois of, university of illinois, we wanna go up to eleven. we don't wanna have just a single connection to a single client","width":640},{"text":"we actually want to write servers that can talk to thousands of clients at a time","width":384},{"text":"how can we do that","width":64},{"text":"well, a long time ago, we realized that i dont want to always block on my read call waiting for my client to send me something, it would be nice to find out which client is coming talking to me","width":896},{"text":"has sent me some bytes","width":128},{"text":"so, the idea of select was born","width":384},{"text":"okay, right, so the very first implementation to attempt to making performance servers is to use the system call, is called select","width":768},{"text":"so probably about 5 minutes after someone designed select, we discovered it wasn't any good. ","width":384}]