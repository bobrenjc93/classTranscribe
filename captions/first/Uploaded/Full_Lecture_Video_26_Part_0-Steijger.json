[{"text":"Ok, class welcome class to CS 241","width":320},{"text":"First announcement","width":64},{"text":"Yes, CS 241 is a lot of work but you may have noticed there are seniors still walking around in this building","width":640},{"text":"They survived CS 241 and you can too","width":64},{"text":"Why not get a T shirt","width":192},{"text":"Yes I appreciate its a lot of work","width":128},{"text":"But this kind of sets you apart from other students in other universities","width":384},{"text":"By the end of this course you really are going to know your stuff ","width":128},{"text":"And you really are going to change the world","width":128},{"text":"Ok so here's what we're going to do today","width":128},{"text":"We're going to talk about scheduling","width":128},{"text":"We're going to look at some simple different ideas about how to do different schedules","width":320},{"text":"And similar effects it has on things like the waiting time","width":192},{"text":"And exactly when each schedule is is uh uh exactly when each process is scheduled","width":448},{"text":"Right so let's have a look at this and in a moment","width":192},{"text":"I'm going to ask you to calculate this","width":192},{"text":"So as this is a model of - we're going to uhm be clairvoyant - we we we know when","width":320},{"text":"as a design we know when our processes are going to be ready to run","width":384},{"text":"And uh we've got four processes, we've labelled them one two three four","width":192},{"text":"We can say hey process four doesn't exist at the beginning","width":384},{"text":"or it's not ready to run","width":128},{"text":"Perhaps it's waiting on a condition variable, the process is waiting for some data to revive","width":192},{"text":"But anyway we don't need to consider it in the very beginning of our model here","width":256},{"text":"Uhm and then these different processes have different amounts of execution time they need in order to complete","width":576},{"text":"So for example in process one takes thirty milliseconds","width":192},{"text":"So we're going to look at our little simulation in ten millisecond blocks and see","width":384},{"text":"which process is using the CPU for each block of time","width":320},{"text":"Now here's our different scheduling approaches we've got","width":384},{"text":"Okay","width":64},{"text":"We've got something called round robin","width":64},{"text":"So with round robin what we do is we try to be fair and say","width":512},{"text":"Well you can have the CPU for a certain block of time","width":320},{"text":"In this little example, 10 milliseconds","width":192},{"text":"And after 10 milliseconds the alarm goes off","width":128},{"text":"A little hardware clock goes off","width":128},{"text":"And that causes an interrupt","width":64},{"text":"And the interrupt then causes the CPU to execute some code inside the kernel","width":256},{"text":"The code inside the kernel says AHA you're out of time","width":256},{"text":"And now I'm going to give the CPU to a different process","width":128},{"text":"So the idea is we're going to do this every 10 milliseconds","width":320},{"text":"Uh we'll try to be fair","width":256},{"text":"So this means that if there's a long running job","width":64},{"text":"It shouldn't matter too much since after two milliseconds we're going to give the CPU to someone else","width":448},{"text":"And they get a chance to execute","width":128},{"text":"Okay so that's round robin","width":64},{"text":"We'll work that out in a moment","width":192},{"text":"And you'll notice in this little example","width":192},{"text":"I've actually got three processes","width":128},{"text":"Already to go at the very beginning","width":128},{"text":"So what we'll say is the order in which they ask if you're ready","width":576},{"text":"Is just dependent on how we've written them done","width":64},{"text":"So process 1 we're going to run before process 2 et cetera et cetera et cetera ","width":192},{"text":"And then the next we're going to calculate is shortest job first","width":384},{"text":"Meaning we actually know in advance these timings","width":320},{"text":"And we give this to the operating system","width":256},{"text":"To the scheduler","width":192},{"text":"So it can decide when to run them","width":128},{"text":"An \"I gotcha here\" is remember you can't actually run process 4 at the beginning of time because it doesn't exist yet","width":512},{"text":"It only comes into play, it only enters the stage after 10 milliseconds","width":192},{"text":"Alright so that's not a choice at the very beginning","width":192},{"text":"And then we have first come first serve","width":128},{"text":"This is just a simple queue","width":256},{"text":"Whoever arrives first gets to eat first","width":256},{"text":"And they continue to eat, to use the CPU until they are finished","width":320},{"text":"So it doesn't matter how long they take","width":192},{"text":"So that's first come first serve, FCFS","width":384},{"text":"That sounds pretty fair to me but we'll see if there's a problem with it later","width":128},{"text":"Now we can make these a little more complicated","width":64},{"text":"We can talk about how to preemptive shortest job first","width":448},{"text":"And the idea here is if a new job arrives","width":320},{"text":"In other words appears on stage ready to go","width":192},{"text":"Then if it's shorter we'll run that instead","width":256},{"text":"Now, one thing to look out for shortest job does not mean remaining time","width":320},{"text":"It means the actual original specified time","width":256},{"text":"So if you've only got ten milliseconds to run on a thirty milliseconds ","width":256},{"text":"job","width":64},{"text":"It still compares thirty milliseconds","width":192},{"text":"Not the remaining time, it's the actual total time","width":64},{"text":"When we talk about shortest job first","width":192},{"text":"And then the other variant is preemptive priority","width":128},{"text":"So instead of thinking about the execution time ","width":64},{"text":"We have some sort of priority assigned to each process","width":320},{"text":"So for example if this was controlling a lunar lander","width":192},{"text":"Controlling the rockets is probably more important than say running the -inaudible- activity right now","width":448},{"text":"We need to make sure that we make immediate course corrections","width":384},{"text":"And here we've got higher value equals a higher priority","width":320},{"text":"And if a higher priority job arrives on the scene","width":192},{"text":"Ready to go","width":64},{"text":"Then we will give the CPU immediately to that job","width":256},{"text":"So that's the process we're going to run in a moment","width":192},{"text":"Let's go back to these questions","width":128},{"text":"So when might a process be in the ready queue","width":192},{"text":"Let's think about processes you've programming, you've written","width":320},{"text":"Why might it be in a ready state?","width":192},{"text":"Not running on the CPU","width":64},{"text":"But in a ready state","width":128},{"text":"What could have happened?","width":192},{"text":"Yes!","width":320},{"text":"Okay so there's more than one process who wants to run","width":320},{"text":"And someone else has currently got the CPU","width":192},{"text":"Give me something that might have happened to your process","width":192},{"text":"That makes the mediates become ready","width":64},{"text":"It's waiting for say disk IO, or say network IO","width":768},{"text":"Perhaps you've called read","width":64},{"text":"Perhaps you've called accept","width":128},{"text":"And now you're waiting for a client to connect to your web server","width":256},{"text":"To your chat server","width":128},{"text":"To your database server","width":64},{"text":"That thread of execution cannot run yet until the operating system says","width":384},{"text":"Okay, yes! I've got your data, off you go","width":64},{"text":"Okay","width":64},{"text":"What else?","width":64},{"text":"No ideas?","width":1088},{"text":"Yes!","width":64},{"text":"Let's say you call sleep and your process sleeps for five seconds","width":768},{"text":"After five seconds your operating system says","width":64},{"text":"Oh, okay, right, fine","width":64},{"text":"Time to wake this process up","width":128},{"text":"I'll let this process continue, I'll let that thread continue","width":256},{"text":"Similarly if you had a call with a timeout","width":256},{"text":"Alright, there's going to be time when your processor stops","width":256},{"text":"A zombie is not ready to run","width":256},{"text":"A zombie can't run, it's finished","width":256},{"text":"It's still taking up space in memory","width":128},{"text":"Inside the processor control block","width":192},{"text":"Since we have things like it's exit status","width":256}]