[{"text":"okay i've got one person here","width":448},{"text":"if you've got an idea explain it to your neighbor","width":192},{"text":"[silence]","width":1856},{"text":"okay let me give you a clue ","width":192},{"text":"what about some of these other frames that I didn't bother to draw arrows to","width":192},{"text":"guess what, somewhere else, there is another process","width":384},{"text":"that has its own page table","width":320},{"text":"that says okay I've got some memory here please I've got some memory here","width":256},{"text":"so if you could change your own page table","width":192},{"text":"this is like escaping the matrix right?","width":256},{"text":"you've got out now you can arbitrarily read any piece of memory in your system wahahahahahahha","width":384},{"text":"in fact arbitrarily change any piece of memory in your system","width":192},{"text":"I'm actually going to map this area say to this one in here and that's pretty useful because this is where this other process is storing all the secret passwords etc","width":704},{"text":"so you can break the security model of the operating system","width":192},{"text":"so each page table actually, each process has its own page table","width":512},{"text":"last thing I want to say about this","width":128},{"text":"is we can do some really clever tricks now we've got this mechanis,","width":384},{"text":"here's what I'm going to do","width":256},{"text":"you see this entry down here? I'll just shade it in","width":192},{"text":"it's essentially a valid entry","width":128},{"text":"but right now it doesn't point anywhere","width":192},{"text":"why? because I decided that the memory that was being used there","width":576},{"text":"actually isn't being used by this process","width":256},{"text":"it hasn't touched it for at least 10 seconds","width":192},{"text":"and I've got other processes in the system that are starved for memory","width":256},{"text":"they would love to have more memory","width":128},{"text":"so I'm going to reallocate one of these pieces of RAM","width":192},{"text":"and say well actually you can be used by some other process","width":320},{"text":"so right now, it's as if all the atoms behind you in the back of siebel","width":512},{"text":"are unnecessary you haven't looked at them for ages right? you haven't collapsed their wave function, they are not part of this room at all","width":320},{"text":"but if you were to turn your head and actually try to look at that location","width":256},{"text":"we'll make it reappear","width":256},{"text":"and that's what we can do with virtual memory","width":192},{"text":"if at some stage in the future, our process decides to use some addresses down here","width":320},{"text":"then oops we run into a problem","width":256},{"text":"the kernel at that point is notified and we quickly say oop I tell you what I'll connect this up to somewhere say here","width":576},{"text":"I'll put in the right data in here and then we'll let our process go","width":320},{"text":"and we'll do that as fast as we can and the process will never know wahahahahahahha","width":384},{"text":"because it tries this memory access, we stopped it at that moment and we only let it continue after we got all of the data ready to go","width":768},{"text":"so we can play these tricks all the time and part of a operating system is to figure out the best use of this memory and then update the page tables accordingly","width":768},{"text":"last thing I want you think about is that we can set attributes on these page tables like","width":512},{"text":"this entry is read only","width":448},{"text":"and if we did that, that means we can safely share it with other processes","width":512},{"text":"knowing that none of them can change it","width":128},{"text":"so for example, we only need to have the C library and other libraries your process might use in actual physical memory once","width":640},{"text":"and then everybody else can share the same block of memory","width":320},{"text":"because none of them can change it","width":192},{"text":"so we can can set attributes on these pages","width":384},{"text":"right so that's our simple page table","width":320},{"text":"and I hope now you can see it's a mechanism so we can escape from virtual memory into real memory","width":448},{"text":"how do we do it? we took a really sharp knife, we took our memory address and we cleaved it into the offset and a page number","width":448},{"text":"and then we use a page table  to look up where to go in memory","width":320},{"text":"and you might ask where do you put this page table and the answer is in memory","width":384},{"text":"but of course we can't actually look [something] so this has to be a physical part of memory somewhere and we can't use the same mechanism to look itself up","width":896},{"text":"so how big is my page table in this case?","width":320},{"text":"well I said it had 2^20 entries and each one needs to be about 32 bits","width":384},{"text":"so it's going to be four megabytes in size","width":320},{"text":"why? because there are 2^20 entries and each one was 4 bytes","width":512},{"text":"so that we had enough bits to talk about every possible piece of RAM in my system","width":512},{"text":"right that's enough about virtual memory today are you ready for page 2?","width":448},{"text":"page 2!","width":64},{"text":"okay first of all yes it's true there is a quiz on monday","width":512},{"text":"okay what can you expect on this? what should we be able to do","width":384},{"text":"we should be able to implement a barrier using condition variables, semaphores that kind of thing","width":320},{"text":"you should understand the three steps of condition wait [something] that it unlocks the mutex before waiting","width":512},{"text":"and then relocks before returning ","width":192},{"text":"mutual exclusion, we should be able to make a ring buffer","width":320},{"text":"using semaphores or condition variables","width":192},{"text":"so what you did in section yesterday would be useful","width":192},{"text":"and we should be able to spot basic synchronization errors in semaphores mutexes and in condition variables","width":448},{"text":"you now know about the reader writer problem","width":256},{"text":"and you can see the notes on github about what we call the writers preference solution","width":320},{"text":"where if a writer comes along we delay any new readers which wish to read","width":512},{"text":"the writer still needs to wait for existing readers but we put new readers into a pen","width":384},{"text":"like new sheep arriving they cannot continue until the reader gets its chance to do the writing","width":448},{"text":"and then finally don't forget our dear old dining philosophers and coffman conditions","width":448},{"text":"let's talk about that","width":128},{"text":"the dining philosophers problem is a classic computer science problem, robin introduced it already","width":576},{"text":"don't be surprised if it comes up in interviews","width":256},{"text":"what is it? what's it mean? what's it about? it's not about philosophers, it's not a drinking song","width":512},{"text":"it's about concurrency, it's about deadlock and it exploring different solutions to deadlock","width":384}]