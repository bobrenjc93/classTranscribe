[{"text":"[gibberish]","width":64},{"text":"okay thank you right so","width":192},{"text":"oh yeah, sorry I was doing lseek","width":896},{"text":"alright so we got a","width":1216},{"text":"reasonable address","width":64},{"text":"we wrote those bytes into it","width":128},{"text":"now actually let's have a look at our file","width":192},{"text":"okay here's a letter 'a' that we wrote","width":512},{"text":"here's those numbers we wrote","width":576},{"text":"12345678 and deadc0de","width":192},{"text":"but that's not what we see inside of the file","width":192},{"text":"why?","width":128},{"text":"[gibberish]","width":576},{"text":"what can you conclude about this particular processor?","width":320},{"text":"that 78 56 34 12","width":384},{"text":"we put the largest values of our integer, the 12","width":384},{"text":"and the very end","width":64},{"text":"our integers are written in reverse","width":256},{"text":"we put the","width":128},{"text":"put the smallest byte of our integer first in our file","width":256},{"text":"and that's a property of the CPU","width":192},{"text":"so be careful when working with binary data","width":320},{"text":"we have to know how our CPU","width":320},{"text":"represents integers and other data formats","width":128},{"text":"if we're simply going to just write them into the file","width":128},{"text":"likewise, if you're going to read from a particular binary file","width":192},{"text":"you need to know whether that","width":128},{"text":"structure on the binary file actually can be","width":192},{"text":"easily mapped into the CPU","width":192},{"text":"that you're trying to work with","width":128},{"text":"okay, so that's our file, and","width":128},{"text":"look how easy it was to actually","width":128},{"text":"change the contents of the file","width":128},{"text":"we just wrote into the file","width":832},{"text":"as if it was regular memory","width":128},{"text":"and if we had a very very large file","width":128},{"text":"we could simply write in offsets here","width":320},{"text":"and immediately use that data","width":128},{"text":"so if this was genetic data","width":128},{"text":"we wouldn't need to parse it, we could simply","width":320},{"text":"write it and read it directly from our processing loops","width":128},{"text":"so it can make working with binary data","width":320},{"text":"very very efficient","width":128},{"text":"one last comment on this is that","width":320},{"text":"memory-mapped files isn't always a free lunch","width":192},{"text":"you won't necessarily speed up all operations","width":128},{"text":"the kernal, the operating system, the disk drive","width":384},{"text":"are designed for fast streaming of data","width":192},{"text":"so if your process is simply streaming data in","width":256},{"text":"doing some simply processing or filtering of that data as it comes in","width":192},{"text":"and streaming it out, memory-mapped files will not","width":128},{"text":"give you any significant advantage","width":128},{"text":"what it will do for you is","width":128},{"text":"when you want to make use of the virtual memory framework","width":192},{"text":"to automatically map parts of files directly into address space","width":320},{"text":"and with that, my demo's finished. Any questions?","width":320},{"text":"you might find this useful","width":256},{"text":"in the very last MP","width":192},{"text":"if you're trying to your keyserver","width":128},{"text":"run fast, but I'll say no more for now.","width":192},{"text":"thank you very much, I'll see you in two days.","width":256}]