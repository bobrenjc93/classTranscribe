[{"text":"extract out the x and the y and we failed when we tried to parse the third integer","width":448},{"text":"right, so scanf looks pretty easy and it is","width":320},{"text":"it is very easy to write bugs using scanf","width":192},{"text":"I've already mentioned one, okay so scanf - you saw that there are already different versions of it","width":768},{"text":"I was using sscanf because that allows me to start from the string which is good for demos","width":320},{"text":"there is also fscanf which guess what, starts from a file pointer","width":448},{"text":"so for example, I could read from stdin","width":128},{"text":"or I could read from a file that I've already got open","width":192},{"text":"and then we need the format string, okay so here's the first problem that you can run into","width":384},{"text":"this looks a lot like printf, printf's format string yes? I just showed you one with %d's","width":768},{"text":"and it is until it isn't","width":64},{"text":"it's actually subtly different, so the day that you actually need to write a scanf, open up the manpage and check the format specifiers because it's not quite the same","width":896},{"text":"for example floating points are quite different","width":128},{"text":"so that's the kind of first gotcha that I've just shown you, which is that the number of items that you've read isn't necessarily all of them","width":768},{"text":"and then the third gotcha is guess what, we can put in addresses here and sometimes you want to put in an ampersand and sometimes you don't","width":704},{"text":"so I showed you one way we did ampersand y ampersand z because I actually wanted to know the address of my integer variables","width":512},{"text":"can you think of a time when you might not actually want to put in the ampersand?","width":768},{"text":"yeah, if you already have a pointer to the thing that you want to change","width":320},{"text":"so if you've got a pointer to an integer variable, there we go, let's put in pointer here and provided that pointer is pointing to something a variable I want to change, everything is fine","width":1600},{"text":"everything is not fine if I was to write in ampersand pointer","width":576},{"text":"because now what am I changing?","width":384},{"text":"I'm changing this, I'm not changing the thing its pointing to","width":448},{"text":"and if you think this is complicated or confusing, it is!","width":256},{"text":"so my advice is don't write scanf code until you've had three cups of coffee, you're completely awake and it's the most important thing in the world to get it right","width":576},{"text":"and even then, assume that you've got it wrong","width":128},{"text":"scanf code is incredibly hard to write correctly and you can get nasty little errors just by missing an ampersand or putting an ampersand when you don't need one","width":384},{"text":"scanf is not going to detect that, you have to be extremely clear about whether you mean to talk about the thing, the address of the thing or using the thing that the thing is pointing to","width":768},{"text":"so it's not for the feint hearted","width":256},{"text":"and with that warning, let's carry on","width":128},{"text":"I can promise you I've spent hours debugging scanf code","width":384},{"text":"that I thought was correct","width":64},{"text":"here's some other things that will kill us or get you","width":320},{"text":"gets is easy to use, you just say gets and you give it a pointer to your buffer","width":704},{"text":"to some characters","width":192},{"text":"description, never use this function","width":384},{"text":"the reason I bring it up is because people like to ask about it occasionally in exams and occasionally in interviews","width":448},{"text":"it's a classic example of how to hack a program, hack a C program because gets like strcpy has no idea how big this buffer is","width":896},{"text":"how many bytes it can safetly write into whatever address you give it","width":320},{"text":"so if the data that it's reading from stdin happens to be bigger than your buffer, arbitrary things can happen","width":448},{"text":"now someone could use this to supply data that is longer than your buffer and start overwriting arbitrary memory locations","width":576},{"text":"and those arbitrary memory locations probably correspond to other variables","width":256},{"text":"so now someone can use your program to do bad things, to do things that the program is not designed to do","width":448},{"text":"so how do we fix this? answer: use fgets instead","width":192},{"text":"right and I'm not going to talk about that because there's some more fun stuff we can do down here","width":512},{"text":"let's do environment stuff, I don't think I've shown you environment stuff yet have I?","width":640},{"text":"okay right so every program when it runs has arguments and an environment ","width":320},{"text":"so if we do env for example, you can see that my program has actually when it runs, has all of this information","width":640},{"text":"all kinds of useful stuff like the current user is root, where the home directory is for example, the current directory is probably in there as well","width":768},{"text":"so I can get access to this stuff when I write my C programs","width":320},{"text":"so let's write a little C program that does this","width":128},{"text":"for example, I'll say I've got extern, environ, now this extern means that look, this thing exists","width":832},{"text":"don't allocate any space for it, but when we finally link all the pieces of my program together","width":512},{"text":"the compiler is going to look for this variable because we've simply declared that it exists somewhere and I want to use it inside my C program right now","width":576},{"text":"so let me put the contents of the first entry of environ and then we'll exit","width":576},{"text":"okay so you see we've just got a string","width":704},{"text":"a simple C string which is in the form of key and equals and a value","width":320},{"text":"and I could write a little loop to go through all of them and when I find once which is null at the end I know I've finished","width":960},{"text":"so if I want to enumerate all of my environment variables, I can use environ","width":320},{"text":"if I actually want to look one up that I know exists, I can use getenv, so let's getenv and say look for user okay so that will give me","width":704}]