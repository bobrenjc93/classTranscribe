[{"text":"I didn't get the memo that half the class would be in EOH i guess","width":320},{"text":"so for those of who are here, welcome, and congrulations for making it","width":384},{"text":"right , so here's what we're gonna do today.","width":128},{"text":"we're gonna talk about virtual memory","width":192},{"text":"we're gonna look at how it is implemented in 32 bit systems and 64 bit systems","width":448},{"text":"we're fortunately not gonna need to design any hardware","width":256},{"text":"but we are gonna understand enough of how it works so that we can see some the advantages that it gives us","width":512},{"text":"and also see some of the considerations that you need","width":256},{"text":"when you scale from 32 bits to 64 bits","width":192},{"text":"first of all","width":384},{"text":"the important point","width":64},{"text":"if i got, 32 bit addressing","width":576},{"text":"if i got a 32 bit address to talk about","width":192},{"text":"then in 8 bit bytes then i need to oversee 4 bytes to store that pointer","width":512},{"text":"if i got a 64 bit address","width":192},{"text":"i need 8 bytes","width":384},{"text":"to represent","width":64},{"text":"a pointer or an address","width":192},{"text":"so that's gonna come up again when we talk about storage relief","width":320},{"text":"because remember, for each of these entries, it depends on on whether we're talking about 32 bit system or 64 bit system","width":512},{"text":"so we're used to seeing this with pointers","width":320},{"text":"but w'ere gonna see this again in terms of our storage of addresses","width":64},{"text":"here's our first question","width":448},{"text":"what's a page table","width":64},{"text":"what's a page table!?","width":128},{"text":"who remmbers","width":128},{"text":"it's a way to translate a virtual address to a physical address","width":576},{"text":"you can imagine that if we didn't have page tables, well then we can have a HUGE associate map for EVERY possible virtual address and map it to an arbitrary physical address","width":896},{"text":"how much space do we need for that map? well we'll need one entry for every possible physical address and each entry will take 4 or 8 bytes","width":640},{"text":"it takes more memory than i actually have","width":256},{"text":"so we'll do better than that by dividing our memory up into pages ","width":384},{"text":"and we do this arbitrary mapping for not every possible byte but we have a map for every possible page not on memory ","width":704},{"text":"right so here's the basic idea, we got some virtual memory address","width":320},{"text":"we're trying to turn that into a physical address","width":320},{"text":"so on a 32 bit system we'll take a virtual memory address and conceptually split it into two parts","width":1152},{"text":"these bits here are called page number","width":576},{"text":"and what about these lowest bits","width":960},{"text":"the offset","width":192},{"text":"so if we're writing this in C code we can probably come up with a way to extract the page number from an address","width":1152},{"text":"so if i say i got some pointer and i shift it right by 12. what have i got?","width":576},{"text":"the page number! yes","width":320},{"text":"and what bout the offset","width":448},{"text":"could you write an expression for the offset","width":256},{"text":"i only care bout the lowest twelve bits","width":128},{"text":"i could AND it with something yes","width":384},{"text":"so i can mask it","width":128},{"text":"how do i get the lowest twelve bits","width":192},{"text":"for this ill give you a couple of clues","width":320},{"text":"everyone knows that two to the eight is 256","width":64},{"text":"and of course we also know that two to the ten is a 1024","width":512},{"text":"so two the twelve is four times that also known as 40996","width":64},{"text":"yes!","width":192},{"text":"so... i could write what","width":256},{"text":"4095","width":64},{"text":"in other words, the bit pathing 1 2 3 4 5 6 7 8 9 10 11 12 in binary","width":1664},{"text":"so that means when i AND it with this number, all of my upper bits will be disappeared, masked to zero","width":576},{"text":"so this give me the offset","width":128},{"text":"i could have written an expression here, i could have said something like: take one and shift it left eleven more times, the subtract one as well","width":576},{"text":"so we got ourselves a page number and offset","width":448},{"text":"now just like any good cooking show, this is where we take what we've made and we set it aside for later","width":448},{"text":"we'll be pouring the offset back in","width":64},{"text":"at the very end","width":128},{"text":"we don't care about the offset until the very very end","width":256},{"text":"what we're gonna try to do now is convert this page number which goes from zero up to 2^20.","width":512},{"text":"how big is 2^20?","width":320},{"text":"I just told you that 2^10 is about a 1000, so 2^20 is bout a million!","width":448},{"text":"binary million","width":64},{"text":"so what a bout a million possible numbers to look up","width":384},{"text":"so we're gonna take these page numbers","width":128},{"text":"and stick them","width":64},{"text":"into just a big table","width":256},{"text":"and inside this table, i need to know where to go inside my RAM","width":512},{"text":"and in fact","width":64},{"text":"I'm gonna convert from this virtual numbers to these physical numbers","width":576},{"text":"they're called physical","width":128},{"text":"frame","width":256},{"text":"most of the time we'll never talk bout frames","width":320},{"text":"because most of the time we don't actually care about real memory","width":256},{"text":"most of the time, our programs that we write live in this virtual address space","width":448},{"text":"but today because we're actually gonna figure out how to convert virtual memory to real memory, yeah we need to talk about them","width":448},{"text":"so these are our physical frames","width":64},{"text":"so we just have a big lookup table","width":128},{"text":"ok how might that work,","width":64},{"text":"easy, let's just have a big array","width":192},{"text":"and that can give us the frame number","width":640}]