[{"text":"uhhh","width":384},{"text":"and that's going to equal my data","width":256},{"text":"sub out","width":192},{"text":"i gotta increment my out too","width":64},{"text":"plus plus","width":64},{"text":"++","width":64},{"text":"and then i can return","width":128},{"text":"result","width":320},{"text":"so there's my solution","width":384},{"text":"very basic solution","width":192},{"text":"you guys take one or two minutes talk to your neighbors figure out what's wrong with this and how you would fix it","width":832},{"text":"are you ready?","width":5312},{"text":"ok what's the first thing wrong with this?","width":256},{"text":"or what's something wrong with this?","width":192},{"text":"i'm not checking what?","width":192},{"text":"i'm not checking the equality of in and out","width":256},{"text":"why do ina and out have to be equal?","width":192},{"text":"oh i don't want to be equal","width":192},{"text":"whats going to happen if i do tht?","width":192},{"text":"yeah i'm going to try to remove data that's not there if they are equal","width":256},{"text":"what else aren't i doing?","width":64},{"text":"if not if ","width":512},{"text":"so if in equals 16 or more ","width":256},{"text":"it's not hta i'm overflowing, ","width":128},{"text":"what am i doing?","width":64},{"text":"i'm overwriting what","width":128},{"text":"no what happens if in == 16?","width":320},{"text":"so what's going to happen if in == 16?","width":640},{"text":"not the answer","width":64},{"text":"how big is my buffer?","width":128},{"text":"well 16","width":128},{"text":"0 to 15","width":64},{"text":"if i write","width":64},{"text":"data[16] i am going to smash somebody's memory","width":320},{"text":"so not good","width":64},{"text":"so the solution was to what","width":128},{"text":"mod","width":128},{"text":"what else could i do?","width":192},{"text":"ok so i could mod","width":64},{"text":"i'm going to mod it","width":192},{"text":"so what if i do","width":320},{"text":"i'm going to change this","width":128},{"text":"to say","width":64},{"text":"uh","width":128},{"text":"data[(in++) % 16]","width":832},{"text":"equals value","width":256},{"text":"is that going to work?","width":128},{"text":"ok don't worry about the overwriting for a second","width":960},{"text":"is this going to help with my wrapping?","width":128},{"text":"is this a good solution to fixing my wrapping?","width":384},{"text":"there's one minor problem which is not so minor about this","width":256},{"text":"it's going to work","width":64},{"text":"yeah","width":64},{"text":"it's going to work for a while","width":640},{"text":"and after a while wha'ts going to happen?","width":320},{"text":"my integer's going to overflow","width":192},{"text":"actualyl my integer is not going to overflow","width":192},{"text":"it's just going to go negative","width":128},{"text":"and mod , if i understand correclty, can preserve the negative value","width":448},{"text":"so you're now going to get a data sub minus something","width":192},{"text":"accessing bad data ","width":128},{"text":"or just crashing","width":128},{"text":"i don't even know what the system's going to do if you put a negative value in your array","width":384},{"text":"so not the ","width":128},{"text":"it's the right idea","width":64},{"text":"you could actually be must simpler and just say","width":320},{"text":"ok","width":640},{"text":"that works too","width":128},{"text":"when i'm done","width":128},{"text":"so don't do this","width":320},{"text":"you could also if you really wanted to say n = n mod 16","width":704},{"text":"that'll work too","width":128},{"text":"but that's not even that necesasry","width":192},{"text":"you only  have to change it if it is 16","width":256},{"text":"and i have to do the same for what","width":192},{"text":"?","width":64},{"text":"for out","width":64},{"text":"so not going to write that but i have to do the same for out","width":256},{"text":"so","width":448},{"text":"and the problem is all the overwriting n","width":768},{"text":"that uh we're not being careful about wha'ts going on","width":256},{"text":"and realyl the challenge here is there's no synchronization","width":256},{"text":"i'm not sync","width":64},{"text":"i'm not synchrnoizing my readers and writers","width":320},{"text":"reader writer producer consumer","width":256},{"text":"all of the same idea basically","width":192},{"text":"what if i call enqueue twice at the same time","width":192},{"text":"is there any safety there?","width":192},{"text":"n","width":64},{"text":"no","width":64},{"text":"what if i call enqeueu and dequeue at the same time","width":256},{"text":"is there any safety there?","width":128},{"text":"no","width":64},{"text":"so let's assume that ","width":64},{"text":"we use this code","width":128},{"text":"for the actual functionaly for the enqueue and dequeue","width":384},{"text":"and let's add some synchronization so we can protect the data from overflow","width":384},{"text":"from underflow","width":64},{"text":"and from the synchronization problem of two nodes trying to put something in the qeueue at the same time and overwriting each other","width":704},{"text":"so we have to be careful we have to make sure that ","width":128},{"text":"only one node ony one enqueue can write into the ring buffer at the same time","width":576},{"text":"i'm teaching networking this semester so if i say node just ignore me","width":256}]