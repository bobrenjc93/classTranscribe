[{"text":"Um by the way","width":64},{"text":"A um","width":192},{"text":"Some people in the world of C actually use goto right?","width":320},{"text":"In this kind of uh","width":128},{"text":"Uh this kind of scenario so ","width":192},{"text":"we can have a kind of goto cleanup","width":192},{"text":"and","width":128},{"text":"we have a kinda cleanup right","width":192},{"text":"Uh and then yeah we fixed return values as well so","width":320},{"text":"Instead of this return here we set a flag or something","width":192},{"text":"Okay um whether you do this or not is a fantastic way to get into arguments with everybody","width":448},{"text":"Uh there's a lot to be read about how goto is bad but in practice","width":320},{"text":"you will find a system level code that does this as a way to to support kind of basic","width":384},{"text":"Um exception, exception handling","width":192},{"text":"And uh failure cleanup code. Uh where you want to leave early","width":256},{"text":"It's not the only other way to do it, the other way is to to actually set","width":192},{"text":"create your resources inside a wrapper method and uh","width":320},{"text":"uh then, uh you can return early inside your inner method","width":192},{"text":"Okay so let's let's let's pretend we didn't talk about goto","width":320},{"text":"There we go","width":128},{"text":"And fix our code","width":128},{"text":"Right, so close uh","width":320},{"text":"our directory pointer","width":128},{"text":"Right uh","width":448},{"text":"Next lecture we'll talk about how to extend this so that we can do uh","width":128},{"text":"Directory searching into subdirectories as well","width":320},{"text":"Right any questions about this?","width":192},{"text":"Alright there are mentioned one gotcha which is remember that you have the parent and your current directory","width":576},{"text":"so attempting to do subdirectory searching is like OH I know breadth first search or I know know recursive search!","width":384},{"text":"Be careful you don't keep searching yourself forever. Aight","width":192},{"text":"Oh be careful you don't keep searching down and up the tree forever","width":320},{"text":"your searches are going to take a long time if you go down the tree and back up the tree at the same","width":256},{"text":"Uh all is part of your recursive code so you have to remember those special cases","width":256},{"text":"remember you're going to see dot and remember you're going to see dot dot","width":256},{"text":"Right okay time for side 2","width":192},{"text":"Okay","width":960},{"text":"I love this word \"canonical right it's","width":320},{"text":"What's a canonical definition of canonical","width":128},{"text":"Can you give me? Two directory paths that refer to the same file?","width":768},{"text":"Other words could you write down a string that actually reends referring to the same file but actually when you look at them they're different","width":576},{"text":"You're nodding your head how would you do that?","width":192},{"text":"Okay","width":576},{"text":"Okay, that's a good idea.","width":512},{"text":"Okay so, for example, slash home slash angrave slash um","width":640},{"text":"Uh one dot text","width":128},{"text":"might be the same as just \"Hey current directory\" slash one dot text","width":384},{"text":"Okay give me another way that I could refer to these files?","width":320},{"text":"Yeah","width":320},{"text":"Well some kind of weird double echo race condition thing going on. kay","width":512},{"text":"Okay so go up one directory then go back into angrave","width":704},{"text":"And then go into one dot text again","width":256},{"text":"Okay any other way? Yup?","width":192},{"text":"Okay, tilda actually is is a cheat that's actually part of the shell","width":384},{"text":"So that so tilda is expanded already. Um how about?","width":192},{"text":"dot slash dot slash dot slash","width":256},{"text":"dot dot slash angrave","width":320},{"text":"slash some subdirectory then go back up turn left right","width":448},{"text":"etc right? we could invent these crazy paths which after we've followed them","width":384},{"text":"we finally get to the file, I also mentioned these things called symbolic links. ","width":256},{"text":"Maybe we follow a symbolic link so we go to the file yeah awesome","width":512},{"text":"dot text which actually resolves to our original file","width":320},{"text":"So how do I know that these files are actually referred to the same thing?","width":256},{"text":"The answer is we need to reduce them down to the canonical form","width":256},{"text":"and the beautiful thing about a canonical form is that if you have a canonical path and I have a canonical path","width":384},{"text":"and they are identical then they must refer to the same file","width":320},{"text":"Why? cause that's the definition of a canonical path","width":256},{"text":"So is uhh it's not necessary an absolute path. Not all absolute paths are canonical","width":640},{"text":"but you can be sure that if two canonical paths are identical, they are talking about the same file","width":448},{"text":"right how do I get the canonical path?","width":192},{"text":"Well you give me any path you want","width":320},{"text":"I'll call realpath on it","width":256},{"text":"it will follow that follow any sym links that you happen to refer to follow any dot dots etc etc etc","width":448},{"text":"and then finally it'll give me an actual path. I can use that and later I'll just free it","width":384},{"text":"You can pass in a buffer but in practice don't bother just let malloc make sure it gives you enough path enough space","width":704},{"text":"Now I mentioned this because actually we can use this for security","width":320},{"text":"suppose you were to make a web server you probably don't want a web server to be able to serve all possible files","width":576},{"text":"on your hard disk drive","width":256},{"text":"Cause if it can, you bet your dollar I'm going to be looking for slash etc slash password","width":448},{"text":"Aight. Or your ssh uh private key","width":320},{"text":"we'll try to download that","width":128},{"text":"And in fact, these kinds of tricks are used to escape the current directory or the root of the webserver","width":768},{"text":"and uh we want to try to prevent that so one way when you're checking directories is to convert it into a canonical path","width":448},{"text":"and then check that it actually truly starts with the based directory that you care about","width":448},{"text":"so for example the user is trying to get an image from your image directory ","width":256},{"text":"not trying to download your password file as an image","width":320},{"text":"I've encountered numerous server programs that don't do this check","width":384},{"text":"so for example, uh I can get a printer to include using uh postscript and other commands","width":512},{"text":"to include a local file from the printer and therefore print out the printer's own password and other information you want about the printer","width":448},{"text":"woops","width":64},{"text":"So anyways so thats so real path next time we want to write a robust server, remember this it's useful security tool","width":576}]