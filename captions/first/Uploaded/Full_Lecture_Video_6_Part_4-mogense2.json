[{"text":"OK. So, programmers took inspiration from miners.","width":384},{"text":"When you go down in the mine you take a canary, yes?","width":192},{"text":"The nice thing about canaries is they die before you, if there's poison gasses.","width":256},{"text":"Or at least then they stop singing as all is well.","width":192},{"text":"So here's what we can do. We can actually put some values into our heap barrier.","width":576},{"text":"And then we just check that those values are still correct.","width":64},{"text":"like there special hexidecimal values, like deadbeef, deadcode, or a value that is a quick hash of the values we want to store.","width":640},{"text":"So we can at least verify that things haven't been overwritten.","width":192},{"text":"So debug versions of malloc and free will do this. They'll take some extra space to write begging and endpoints.","width":512},{"text":"And then before they do anything, they'll check those values to see if they've been overwritten.","width":384},{"text":"So we can't stop the override, but we can at least detect it afterwards.","width":512},{"text":"Any questions?","width":512},{"text":"By the way this idea of putting the size inside as part of the allocated area, this was developed by, I think, Donald Knuth, many years ago.","width":832},{"text":"We've been living inside the user process. Now let's step back a moment and talk about virtual memory.","width":704},{"text":"What do we mean by virtual memory? We've virtualized memory. Ok, what do we mean by that?","width":256},{"text":"We mean that the addresses that our processes uses can have very little connection with the actual addresses that the RAM sees.","width":704},{"text":"That, in essence, there's a mapping.","width":192},{"text":"So ya, we can keep talking about the process address spcae.","width":256},{"text":"It goes from zero up to some high number, let's say 7fffffff.","width":256},{"text":"And we can think of it in terms of little blocks.","width":128},{"text":"And in fact, our virtual memory likes to work with pages called, and there typically about 4096 bytes, or 4","width":704},{"text":"So, anytime you read or write into your virtual memory, we've got to take that address.","width":512},{"text":"Some magic happens.","width":256},{"text":"And say ok, which piece of RAM, which physical address, should I read or write to?","width":896},{"text":"This side will have virtual memory, and and this side we have real addresses.","width":448},{"text":"And it's the MMU, the Memory Management Unit, that has to convert one to the other.","width":768},{"text":"Now today we're just doing the quick two minute version, because there's a lot more to say about this","width":384},{"text":"I just want to give you an idea we can actually step outside the matrix.","width":192},{"text":"Once we start playing these tricks, there's some amazing things we can do with this, as system programmers.","width":512},{"text":"This is a fundamental piece of any reasonable hardware that runs a modern operating system will have a memory management unit,","width":832},{"text":"in order to convert virtual memories into physical addresses.","width":320},{"text":"And here's the cool thing is that now these don't need to be contiguous.","width":192},{"text":"That this mapping can be all over the place.","width":256},{"text":"So this 4K can go to some lower memory and this 4K can go to some other piece of RAM.","width":384},{"text":"So this allows us to use our physical memory much more efficiently.","width":320},{"text":"We don't have to worry about fragmentation, now, and having holes or having spaces inside our physical memory that we can't use.","width":576},{"text":"[So if it's stored on the hard drive...] Ah yes, I wasn't going to mention that but ya.","width":384},{"text":"Here's the cool thing is that now we can now say to every process, \"Hey! you want 4GB? No problem!\"","width":192},{"text":"\"You want 4GB? No problem! You want 16GB? No problem!\" Ok my machine only has 1GB but don't tell them.","width":384},{"text":"Because what we can do is, ya, we can actually secretly store some of the information they want on the hard drive.","width":640},{"text":"It's basically like this, imagine only the bits of the world your currently looking at exist.","width":320},{"text":"Any time you turn around and look behind you, I'm going to put you on pause and quickly recreate everything that you intended to look at.","width":640},{"text":"When I finish doing that, I'll release you again.","width":192},{"text":"So that's what the virtual memory, that's what the operating system does for you.","width":320},{"text":"You think you got 4GB of space. I just promised you that.","width":320},{"text":"Promises are easy because I know you can't actually look at it all at the same time.","width":320},{"text":"I'm going to intercept any time you try to read or write memory to make sure that what you're trying to read or write actually appears to be there inside RAM.","width":512},{"text":"But it's all conjuring. It's all fake. And it's up to the operating system to do this for your process and any other process that's currently running.","width":576},{"text":"Right, that's enough of virtual memory today.","width":512},{"text":"But it's a wonderful system. It's one of the best parts of an operating system today, I believe.","width":320},{"text":"Instead, let's talk about something which is just as powerful and is going to separate your programs from mere novice programmers.","width":896},{"text":"And that is being able to use threads effectively.","width":192},{"text":"This is the beginnings of the major part of this course here, is to understand how to work with synchronization and work with multiple threads. ","width":576},{"text":"This is the coolest bit so here we go.","width":192},{"text":"Let's put on some basic ideas here.","width":192},{"text":"How many heaps does a process have?","width":384},{"text":"That was easy. One.","width":128},{"text":"Inside your process memory a heap is used for all those malloc and free calls and there's only one heap. ","width":640},{"text":"So it's just a BIG area of space that anytime you want memory from you can just call malloc, or calloc or realloc.","width":448},{"text":"But you can just say \"Hey I need some memory and this is how many bytes I need.","width":192},{"text":"It's stored in the heap.","width":256},{"text":"How many stacks?","width":64},{"text":"When we first introduced our program modal we had just one","width":384},{"text":"We said, \"What's a stack?\"  Well, anytime you call a function I need some space for those automatic temporary variables","width":320},{"text":"And also a bit of space to say where the CPU should go back to when it finishes calculating anything we need to do inside that function.","width":512},{"text":"And if the function is recursive then my stack is going to get lower, bigger and bigger, because I'm going to keep calling myself and I need more space on the stack.","width":512},{"text":"And if my function calls other functions, ya agian, my stack is going to get bigger.","width":256},{"text":"That's a stack.","width":320},{"text":"What if I had two CPUs working inside my process at the same time?","width":512},{"text":"Each one needs a stack. Yes?","width":192},{"text":"Because each one will be inside a function; that function might be calling things.","width":448}]
